set(SIMENG_SST_SOURCES SimengCoreWrapper.cc SimengMemInterface.cc)

add_library(sstsimeng SHARED ${SIMENG_SST_SOURCES})
# Including Simeng include files and SST include files
target_include_directories(sstsimeng PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
target_include_directories(sstsimeng PUBLIC ${SST_INSTALL_DIR}/include)
# Including libsimeng.so
target_include_directories(sstsimeng PUBLIC ${PROJECT_SOURCE_DIR}/src/lib)
# Including capstone and yaml
target_include_directories(sstsimeng PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_include_directories(sstsimeng PRIVATE ${CMAKE_CURRENT_BINARY_DIR})

# Extra compile flags generate by sst-config --ELEMENT_CXXFLAGS
# The command had to be replaced as some extra flags have already been added using
# target_include_directories and target_compile_definitions.
target_compile_options(sstsimeng PUBLIC -fPIC)

# Bypasses "cannot used typeid with -fno-rtti".This compile flag causes errors in SST source.
target_compile_options(sstsimeng PUBLIC -frtti)
target_compile_options(sstsimeng PUBLIC -g)

# Define statements generated by sst-config --ELEMENT_CXXFLAGS
# SIMENG_ENABLE_SST is used as a preprocessing directive and is defined by us,
# without this definition files in simeng/sst won't compile.
target_compile_definitions(sstsimeng PUBLIC SIMENG_ENABLE_SST __STDC_FORMAT_MACROS HAVE_CONFIG_H)

# Extra link flags generated by sst-config --ELEMENT_LDFLAGS
# The commmand had to be replaced as some extra flags added using target_include_directories
target_link_options(sstsimeng PUBLIC -fno-common LINKER:-undefined,dynamic_lookup)

# Linking yaml and libsimeng.so libraries to sstsimeng.so
target_link_libraries(sstsimeng PUBLIC libsimeng yaml-cpp)

set(SST_SIMENG_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/sst")
set(SST_REGISTER_BASE_COMMAND "sstsimeng sstsimeng_LIBDIR=${SST_SIMENG_INSTALL_DIR}")
set(SST_REGISTER_ELEMENT_COMMAND "SST_ELEMENT_SOURCE sstsimeng=${SST_SIMENG_INSTALL_DIR}")

# Install libsstsimeng.so library into <path_to_simeng_install_dir>/sst
install(TARGETS sstsimeng DESTINATION sst)
# Install SimengCoreWrapper.hh and SimengMemInterface.hh into <path_to_simeng_install_dir>/include
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include
        DESTINATION ${SST_SIMENG_INSTALL_DIR})
# Install SST config into <path_to_simeng_install_dir>/config
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/config
        DESTINATION ${SST_SIMENG_INSTALL_DIR})

# Execute the sst-register command from the command-line to register the sstsimeng
# library with SST.
install(CODE "execute_process(COMMAND sst-register ${SST_REGISTER_BASE_COMMAND} COMMAND_ECHO STDOUT)")
install(CODE "execute_process(COMMAND sst-register ${SST_REGISTER_ELEMENT_COMMAND} COMMAND_ECHO STDOUT)")
