/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Register Enum Values                                                *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_ENUM
#undef GET_REGINFO_ENUM

namespace llvm {

class MCRegisterClass;
extern const MCRegisterClass AArch64MCRegisterClasses[];

namespace AArch64 {
enum {
  NoRegister,
  FFR = 1,
  FP = 2,
  LR = 3,
  NZCV = 4,
  SP = 5,
  VG = 6,
  WSP = 7,
  WZR = 8,
  XZR = 9,
  ZA = 10,
  B0 = 11,
  B1 = 12,
  B2 = 13,
  B3 = 14,
  B4 = 15,
  B5 = 16,
  B6 = 17,
  B7 = 18,
  B8 = 19,
  B9 = 20,
  B10 = 21,
  B11 = 22,
  B12 = 23,
  B13 = 24,
  B14 = 25,
  B15 = 26,
  B16 = 27,
  B17 = 28,
  B18 = 29,
  B19 = 30,
  B20 = 31,
  B21 = 32,
  B22 = 33,
  B23 = 34,
  B24 = 35,
  B25 = 36,
  B26 = 37,
  B27 = 38,
  B28 = 39,
  B29 = 40,
  B30 = 41,
  B31 = 42,
  D0 = 43,
  D1 = 44,
  D2 = 45,
  D3 = 46,
  D4 = 47,
  D5 = 48,
  D6 = 49,
  D7 = 50,
  D8 = 51,
  D9 = 52,
  D10 = 53,
  D11 = 54,
  D12 = 55,
  D13 = 56,
  D14 = 57,
  D15 = 58,
  D16 = 59,
  D17 = 60,
  D18 = 61,
  D19 = 62,
  D20 = 63,
  D21 = 64,
  D22 = 65,
  D23 = 66,
  D24 = 67,
  D25 = 68,
  D26 = 69,
  D27 = 70,
  D28 = 71,
  D29 = 72,
  D30 = 73,
  D31 = 74,
  H0 = 75,
  H1 = 76,
  H2 = 77,
  H3 = 78,
  H4 = 79,
  H5 = 80,
  H6 = 81,
  H7 = 82,
  H8 = 83,
  H9 = 84,
  H10 = 85,
  H11 = 86,
  H12 = 87,
  H13 = 88,
  H14 = 89,
  H15 = 90,
  H16 = 91,
  H17 = 92,
  H18 = 93,
  H19 = 94,
  H20 = 95,
  H21 = 96,
  H22 = 97,
  H23 = 98,
  H24 = 99,
  H25 = 100,
  H26 = 101,
  H27 = 102,
  H28 = 103,
  H29 = 104,
  H30 = 105,
  H31 = 106,
  P0 = 107,
  P1 = 108,
  P2 = 109,
  P3 = 110,
  P4 = 111,
  P5 = 112,
  P6 = 113,
  P7 = 114,
  P8 = 115,
  P9 = 116,
  P10 = 117,
  P11 = 118,
  P12 = 119,
  P13 = 120,
  P14 = 121,
  P15 = 122,
  Q0 = 123,
  Q1 = 124,
  Q2 = 125,
  Q3 = 126,
  Q4 = 127,
  Q5 = 128,
  Q6 = 129,
  Q7 = 130,
  Q8 = 131,
  Q9 = 132,
  Q10 = 133,
  Q11 = 134,
  Q12 = 135,
  Q13 = 136,
  Q14 = 137,
  Q15 = 138,
  Q16 = 139,
  Q17 = 140,
  Q18 = 141,
  Q19 = 142,
  Q20 = 143,
  Q21 = 144,
  Q22 = 145,
  Q23 = 146,
  Q24 = 147,
  Q25 = 148,
  Q26 = 149,
  Q27 = 150,
  Q28 = 151,
  Q29 = 152,
  Q30 = 153,
  Q31 = 154,
  S0 = 155,
  S1 = 156,
  S2 = 157,
  S3 = 158,
  S4 = 159,
  S5 = 160,
  S6 = 161,
  S7 = 162,
  S8 = 163,
  S9 = 164,
  S10 = 165,
  S11 = 166,
  S12 = 167,
  S13 = 168,
  S14 = 169,
  S15 = 170,
  S16 = 171,
  S17 = 172,
  S18 = 173,
  S19 = 174,
  S20 = 175,
  S21 = 176,
  S22 = 177,
  S23 = 178,
  S24 = 179,
  S25 = 180,
  S26 = 181,
  S27 = 182,
  S28 = 183,
  S29 = 184,
  S30 = 185,
  S31 = 186,
  W0 = 187,
  W1 = 188,
  W2 = 189,
  W3 = 190,
  W4 = 191,
  W5 = 192,
  W6 = 193,
  W7 = 194,
  W8 = 195,
  W9 = 196,
  W10 = 197,
  W11 = 198,
  W12 = 199,
  W13 = 200,
  W14 = 201,
  W15 = 202,
  W16 = 203,
  W17 = 204,
  W18 = 205,
  W19 = 206,
  W20 = 207,
  W21 = 208,
  W22 = 209,
  W23 = 210,
  W24 = 211,
  W25 = 212,
  W26 = 213,
  W27 = 214,
  W28 = 215,
  W29 = 216,
  W30 = 217,
  X0 = 218,
  X1 = 219,
  X2 = 220,
  X3 = 221,
  X4 = 222,
  X5 = 223,
  X6 = 224,
  X7 = 225,
  X8 = 226,
  X9 = 227,
  X10 = 228,
  X11 = 229,
  X12 = 230,
  X13 = 231,
  X14 = 232,
  X15 = 233,
  X16 = 234,
  X17 = 235,
  X18 = 236,
  X19 = 237,
  X20 = 238,
  X21 = 239,
  X22 = 240,
  X23 = 241,
  X24 = 242,
  X25 = 243,
  X26 = 244,
  X27 = 245,
  X28 = 246,
  Z0 = 247,
  Z1 = 248,
  Z2 = 249,
  Z3 = 250,
  Z4 = 251,
  Z5 = 252,
  Z6 = 253,
  Z7 = 254,
  Z8 = 255,
  Z9 = 256,
  Z10 = 257,
  Z11 = 258,
  Z12 = 259,
  Z13 = 260,
  Z14 = 261,
  Z15 = 262,
  Z16 = 263,
  Z17 = 264,
  Z18 = 265,
  Z19 = 266,
  Z20 = 267,
  Z21 = 268,
  Z22 = 269,
  Z23 = 270,
  Z24 = 271,
  Z25 = 272,
  Z26 = 273,
  Z27 = 274,
  Z28 = 275,
  Z29 = 276,
  Z30 = 277,
  Z31 = 278,
  ZAB0 = 279,
  ZAD0 = 280,
  ZAD1 = 281,
  ZAD2 = 282,
  ZAD3 = 283,
  ZAD4 = 284,
  ZAD5 = 285,
  ZAD6 = 286,
  ZAD7 = 287,
  ZAH0 = 288,
  ZAH1 = 289,
  ZAQ0 = 290,
  ZAQ1 = 291,
  ZAQ2 = 292,
  ZAQ3 = 293,
  ZAQ4 = 294,
  ZAQ5 = 295,
  ZAQ6 = 296,
  ZAQ7 = 297,
  ZAQ8 = 298,
  ZAQ9 = 299,
  ZAQ10 = 300,
  ZAQ11 = 301,
  ZAQ12 = 302,
  ZAQ13 = 303,
  ZAQ14 = 304,
  ZAQ15 = 305,
  ZAS0 = 306,
  ZAS1 = 307,
  ZAS2 = 308,
  ZAS3 = 309,
  Z0_HI = 310,
  Z1_HI = 311,
  Z2_HI = 312,
  Z3_HI = 313,
  Z4_HI = 314,
  Z5_HI = 315,
  Z6_HI = 316,
  Z7_HI = 317,
  Z8_HI = 318,
  Z9_HI = 319,
  Z10_HI = 320,
  Z11_HI = 321,
  Z12_HI = 322,
  Z13_HI = 323,
  Z14_HI = 324,
  Z15_HI = 325,
  Z16_HI = 326,
  Z17_HI = 327,
  Z18_HI = 328,
  Z19_HI = 329,
  Z20_HI = 330,
  Z21_HI = 331,
  Z22_HI = 332,
  Z23_HI = 333,
  Z24_HI = 334,
  Z25_HI = 335,
  Z26_HI = 336,
  Z27_HI = 337,
  Z28_HI = 338,
  Z29_HI = 339,
  Z30_HI = 340,
  Z31_HI = 341,
  D0_D1 = 342,
  D1_D2 = 343,
  D2_D3 = 344,
  D3_D4 = 345,
  D4_D5 = 346,
  D5_D6 = 347,
  D6_D7 = 348,
  D7_D8 = 349,
  D8_D9 = 350,
  D9_D10 = 351,
  D10_D11 = 352,
  D11_D12 = 353,
  D12_D13 = 354,
  D13_D14 = 355,
  D14_D15 = 356,
  D15_D16 = 357,
  D16_D17 = 358,
  D17_D18 = 359,
  D18_D19 = 360,
  D19_D20 = 361,
  D20_D21 = 362,
  D21_D22 = 363,
  D22_D23 = 364,
  D23_D24 = 365,
  D24_D25 = 366,
  D25_D26 = 367,
  D26_D27 = 368,
  D27_D28 = 369,
  D28_D29 = 370,
  D29_D30 = 371,
  D30_D31 = 372,
  D31_D0 = 373,
  D0_D1_D2_D3 = 374,
  D1_D2_D3_D4 = 375,
  D2_D3_D4_D5 = 376,
  D3_D4_D5_D6 = 377,
  D4_D5_D6_D7 = 378,
  D5_D6_D7_D8 = 379,
  D6_D7_D8_D9 = 380,
  D7_D8_D9_D10 = 381,
  D8_D9_D10_D11 = 382,
  D9_D10_D11_D12 = 383,
  D10_D11_D12_D13 = 384,
  D11_D12_D13_D14 = 385,
  D12_D13_D14_D15 = 386,
  D13_D14_D15_D16 = 387,
  D14_D15_D16_D17 = 388,
  D15_D16_D17_D18 = 389,
  D16_D17_D18_D19 = 390,
  D17_D18_D19_D20 = 391,
  D18_D19_D20_D21 = 392,
  D19_D20_D21_D22 = 393,
  D20_D21_D22_D23 = 394,
  D21_D22_D23_D24 = 395,
  D22_D23_D24_D25 = 396,
  D23_D24_D25_D26 = 397,
  D24_D25_D26_D27 = 398,
  D25_D26_D27_D28 = 399,
  D26_D27_D28_D29 = 400,
  D27_D28_D29_D30 = 401,
  D28_D29_D30_D31 = 402,
  D29_D30_D31_D0 = 403,
  D30_D31_D0_D1 = 404,
  D31_D0_D1_D2 = 405,
  D0_D1_D2 = 406,
  D1_D2_D3 = 407,
  D2_D3_D4 = 408,
  D3_D4_D5 = 409,
  D4_D5_D6 = 410,
  D5_D6_D7 = 411,
  D6_D7_D8 = 412,
  D7_D8_D9 = 413,
  D8_D9_D10 = 414,
  D9_D10_D11 = 415,
  D10_D11_D12 = 416,
  D11_D12_D13 = 417,
  D12_D13_D14 = 418,
  D13_D14_D15 = 419,
  D14_D15_D16 = 420,
  D15_D16_D17 = 421,
  D16_D17_D18 = 422,
  D17_D18_D19 = 423,
  D18_D19_D20 = 424,
  D19_D20_D21 = 425,
  D20_D21_D22 = 426,
  D21_D22_D23 = 427,
  D22_D23_D24 = 428,
  D23_D24_D25 = 429,
  D24_D25_D26 = 430,
  D25_D26_D27 = 431,
  D26_D27_D28 = 432,
  D27_D28_D29 = 433,
  D28_D29_D30 = 434,
  D29_D30_D31 = 435,
  D30_D31_D0 = 436,
  D31_D0_D1 = 437,
  Q0_Q1 = 438,
  Q1_Q2 = 439,
  Q2_Q3 = 440,
  Q3_Q4 = 441,
  Q4_Q5 = 442,
  Q5_Q6 = 443,
  Q6_Q7 = 444,
  Q7_Q8 = 445,
  Q8_Q9 = 446,
  Q9_Q10 = 447,
  Q10_Q11 = 448,
  Q11_Q12 = 449,
  Q12_Q13 = 450,
  Q13_Q14 = 451,
  Q14_Q15 = 452,
  Q15_Q16 = 453,
  Q16_Q17 = 454,
  Q17_Q18 = 455,
  Q18_Q19 = 456,
  Q19_Q20 = 457,
  Q20_Q21 = 458,
  Q21_Q22 = 459,
  Q22_Q23 = 460,
  Q23_Q24 = 461,
  Q24_Q25 = 462,
  Q25_Q26 = 463,
  Q26_Q27 = 464,
  Q27_Q28 = 465,
  Q28_Q29 = 466,
  Q29_Q30 = 467,
  Q30_Q31 = 468,
  Q31_Q0 = 469,
  Q0_Q1_Q2_Q3 = 470,
  Q1_Q2_Q3_Q4 = 471,
  Q2_Q3_Q4_Q5 = 472,
  Q3_Q4_Q5_Q6 = 473,
  Q4_Q5_Q6_Q7 = 474,
  Q5_Q6_Q7_Q8 = 475,
  Q6_Q7_Q8_Q9 = 476,
  Q7_Q8_Q9_Q10 = 477,
  Q8_Q9_Q10_Q11 = 478,
  Q9_Q10_Q11_Q12 = 479,
  Q10_Q11_Q12_Q13 = 480,
  Q11_Q12_Q13_Q14 = 481,
  Q12_Q13_Q14_Q15 = 482,
  Q13_Q14_Q15_Q16 = 483,
  Q14_Q15_Q16_Q17 = 484,
  Q15_Q16_Q17_Q18 = 485,
  Q16_Q17_Q18_Q19 = 486,
  Q17_Q18_Q19_Q20 = 487,
  Q18_Q19_Q20_Q21 = 488,
  Q19_Q20_Q21_Q22 = 489,
  Q20_Q21_Q22_Q23 = 490,
  Q21_Q22_Q23_Q24 = 491,
  Q22_Q23_Q24_Q25 = 492,
  Q23_Q24_Q25_Q26 = 493,
  Q24_Q25_Q26_Q27 = 494,
  Q25_Q26_Q27_Q28 = 495,
  Q26_Q27_Q28_Q29 = 496,
  Q27_Q28_Q29_Q30 = 497,
  Q28_Q29_Q30_Q31 = 498,
  Q29_Q30_Q31_Q0 = 499,
  Q30_Q31_Q0_Q1 = 500,
  Q31_Q0_Q1_Q2 = 501,
  Q0_Q1_Q2 = 502,
  Q1_Q2_Q3 = 503,
  Q2_Q3_Q4 = 504,
  Q3_Q4_Q5 = 505,
  Q4_Q5_Q6 = 506,
  Q5_Q6_Q7 = 507,
  Q6_Q7_Q8 = 508,
  Q7_Q8_Q9 = 509,
  Q8_Q9_Q10 = 510,
  Q9_Q10_Q11 = 511,
  Q10_Q11_Q12 = 512,
  Q11_Q12_Q13 = 513,
  Q12_Q13_Q14 = 514,
  Q13_Q14_Q15 = 515,
  Q14_Q15_Q16 = 516,
  Q15_Q16_Q17 = 517,
  Q16_Q17_Q18 = 518,
  Q17_Q18_Q19 = 519,
  Q18_Q19_Q20 = 520,
  Q19_Q20_Q21 = 521,
  Q20_Q21_Q22 = 522,
  Q21_Q22_Q23 = 523,
  Q22_Q23_Q24 = 524,
  Q23_Q24_Q25 = 525,
  Q24_Q25_Q26 = 526,
  Q25_Q26_Q27 = 527,
  Q26_Q27_Q28 = 528,
  Q27_Q28_Q29 = 529,
  Q28_Q29_Q30 = 530,
  Q29_Q30_Q31 = 531,
  Q30_Q31_Q0 = 532,
  Q31_Q0_Q1 = 533,
  X22_X23_X24_X25_X26_X27_X28_FP = 534,
  X0_X1_X2_X3_X4_X5_X6_X7 = 535,
  X2_X3_X4_X5_X6_X7_X8_X9 = 536,
  X4_X5_X6_X7_X8_X9_X10_X11 = 537,
  X6_X7_X8_X9_X10_X11_X12_X13 = 538,
  X8_X9_X10_X11_X12_X13_X14_X15 = 539,
  X10_X11_X12_X13_X14_X15_X16_X17 = 540,
  X12_X13_X14_X15_X16_X17_X18_X19 = 541,
  X14_X15_X16_X17_X18_X19_X20_X21 = 542,
  X16_X17_X18_X19_X20_X21_X22_X23 = 543,
  X18_X19_X20_X21_X22_X23_X24_X25 = 544,
  X20_X21_X22_X23_X24_X25_X26_X27 = 545,
  W30_WZR = 546,
  W0_W1 = 547,
  W2_W3 = 548,
  W4_W5 = 549,
  W6_W7 = 550,
  W8_W9 = 551,
  W10_W11 = 552,
  W12_W13 = 553,
  W14_W15 = 554,
  W16_W17 = 555,
  W18_W19 = 556,
  W20_W21 = 557,
  W22_W23 = 558,
  W24_W25 = 559,
  W26_W27 = 560,
  W28_W29 = 561,
  LR_XZR = 562,
  X28_FP = 563,
  X0_X1 = 564,
  X2_X3 = 565,
  X4_X5 = 566,
  X6_X7 = 567,
  X8_X9 = 568,
  X10_X11 = 569,
  X12_X13 = 570,
  X14_X15 = 571,
  X16_X17 = 572,
  X18_X19 = 573,
  X20_X21 = 574,
  X22_X23 = 575,
  X24_X25 = 576,
  X26_X27 = 577,
  Z0_Z1 = 578,
  Z1_Z2 = 579,
  Z2_Z3 = 580,
  Z3_Z4 = 581,
  Z4_Z5 = 582,
  Z5_Z6 = 583,
  Z6_Z7 = 584,
  Z7_Z8 = 585,
  Z8_Z9 = 586,
  Z9_Z10 = 587,
  Z10_Z11 = 588,
  Z11_Z12 = 589,
  Z12_Z13 = 590,
  Z13_Z14 = 591,
  Z14_Z15 = 592,
  Z15_Z16 = 593,
  Z16_Z17 = 594,
  Z17_Z18 = 595,
  Z18_Z19 = 596,
  Z19_Z20 = 597,
  Z20_Z21 = 598,
  Z21_Z22 = 599,
  Z22_Z23 = 600,
  Z23_Z24 = 601,
  Z24_Z25 = 602,
  Z25_Z26 = 603,
  Z26_Z27 = 604,
  Z27_Z28 = 605,
  Z28_Z29 = 606,
  Z29_Z30 = 607,
  Z30_Z31 = 608,
  Z31_Z0 = 609,
  Z0_Z1_Z2_Z3 = 610,
  Z1_Z2_Z3_Z4 = 611,
  Z2_Z3_Z4_Z5 = 612,
  Z3_Z4_Z5_Z6 = 613,
  Z4_Z5_Z6_Z7 = 614,
  Z5_Z6_Z7_Z8 = 615,
  Z6_Z7_Z8_Z9 = 616,
  Z7_Z8_Z9_Z10 = 617,
  Z8_Z9_Z10_Z11 = 618,
  Z9_Z10_Z11_Z12 = 619,
  Z10_Z11_Z12_Z13 = 620,
  Z11_Z12_Z13_Z14 = 621,
  Z12_Z13_Z14_Z15 = 622,
  Z13_Z14_Z15_Z16 = 623,
  Z14_Z15_Z16_Z17 = 624,
  Z15_Z16_Z17_Z18 = 625,
  Z16_Z17_Z18_Z19 = 626,
  Z17_Z18_Z19_Z20 = 627,
  Z18_Z19_Z20_Z21 = 628,
  Z19_Z20_Z21_Z22 = 629,
  Z20_Z21_Z22_Z23 = 630,
  Z21_Z22_Z23_Z24 = 631,
  Z22_Z23_Z24_Z25 = 632,
  Z23_Z24_Z25_Z26 = 633,
  Z24_Z25_Z26_Z27 = 634,
  Z25_Z26_Z27_Z28 = 635,
  Z26_Z27_Z28_Z29 = 636,
  Z27_Z28_Z29_Z30 = 637,
  Z28_Z29_Z30_Z31 = 638,
  Z29_Z30_Z31_Z0 = 639,
  Z30_Z31_Z0_Z1 = 640,
  Z31_Z0_Z1_Z2 = 641,
  Z0_Z1_Z2 = 642,
  Z1_Z2_Z3 = 643,
  Z2_Z3_Z4 = 644,
  Z3_Z4_Z5 = 645,
  Z4_Z5_Z6 = 646,
  Z5_Z6_Z7 = 647,
  Z6_Z7_Z8 = 648,
  Z7_Z8_Z9 = 649,
  Z8_Z9_Z10 = 650,
  Z9_Z10_Z11 = 651,
  Z10_Z11_Z12 = 652,
  Z11_Z12_Z13 = 653,
  Z12_Z13_Z14 = 654,
  Z13_Z14_Z15 = 655,
  Z14_Z15_Z16 = 656,
  Z15_Z16_Z17 = 657,
  Z16_Z17_Z18 = 658,
  Z17_Z18_Z19 = 659,
  Z18_Z19_Z20 = 660,
  Z19_Z20_Z21 = 661,
  Z20_Z21_Z22 = 662,
  Z21_Z22_Z23 = 663,
  Z22_Z23_Z24 = 664,
  Z23_Z24_Z25 = 665,
  Z24_Z25_Z26 = 666,
  Z25_Z26_Z27 = 667,
  Z26_Z27_Z28 = 668,
  Z27_Z28_Z29 = 669,
  Z28_Z29_Z30 = 670,
  Z29_Z30_Z31 = 671,
  Z30_Z31_Z0 = 672,
  Z31_Z0_Z1 = 673,
  NUM_TARGET_REGS // 674
};
} // end namespace AArch64

// Register classes

namespace AArch64 {
enum {
  FPR8RegClassID = 0,
  FPR16RegClassID = 1,
  FPR16_loRegClassID = 2,
  PPRRegClassID = 3,
  PPR_3bRegClassID = 4,
  GPR32allRegClassID = 5,
  FPR32RegClassID = 6,
  GPR32RegClassID = 7,
  GPR32spRegClassID = 8,
  GPR32commonRegClassID = 9,
  FPR32_with_hsub_in_FPR16_loRegClassID = 10,
  GPR32argRegClassID = 11,
  MatrixIndexGPR32_12_15RegClassID = 12,
  CCRRegClassID = 13,
  GPR32sponlyRegClassID = 14,
  WSeqPairsClassRegClassID = 15,
  WSeqPairsClass_with_subo32_in_GPR32commonRegClassID = 16,
  WSeqPairsClass_with_sube32_in_GPR32argRegClassID = 17,
  WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15RegClassID = 18,
  GPR64allRegClassID = 19,
  FPR64RegClassID = 20,
  GPR64RegClassID = 21,
  GPR64spRegClassID = 22,
  GPR64commonRegClassID = 23,
  GPR64noipRegClassID = 24,
  GPR64common_and_GPR64noipRegClassID = 25,
  tcGPR64RegClassID = 26,
  GPR64noip_and_tcGPR64RegClassID = 27,
  FPR64_loRegClassID = 28,
  GPR64argRegClassID = 29,
  GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID = 30,
  rtcGPR64RegClassID = 31,
  GPR64sponlyRegClassID = 32,
  DDRegClassID = 33,
  DD_with_dsub0_in_FPR64_loRegClassID = 34,
  DD_with_dsub1_in_FPR64_loRegClassID = 35,
  XSeqPairsClassRegClassID = 36,
  DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loRegClassID = 37,
  XSeqPairsClass_with_subo64_in_GPR64commonRegClassID = 38,
  XSeqPairsClass_with_subo64_in_GPR64noipRegClassID = 39,
  XSeqPairsClass_with_sube64_in_GPR64noipRegClassID = 40,
  XSeqPairsClass_with_sube64_in_tcGPR64RegClassID = 41,
  XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClassID = 42,
  XSeqPairsClass_with_subo64_in_tcGPR64RegClassID = 43,
  XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64RegClassID = 44,
  XSeqPairsClass_with_sub_32_in_GPR32argRegClassID = 45,
  XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID = 46,
  XSeqPairsClass_with_sube64_in_rtcGPR64RegClassID = 47,
  FPR128RegClassID = 48,
  ZPRRegClassID = 49,
  FPR128_loRegClassID = 50,
  MPR128RegClassID = 51,
  ZPR_4bRegClassID = 52,
  ZPR_3bRegClassID = 53,
  DDDRegClassID = 54,
  DDD_with_dsub0_in_FPR64_loRegClassID = 55,
  DDD_with_dsub1_in_FPR64_loRegClassID = 56,
  DDD_with_dsub2_in_FPR64_loRegClassID = 57,
  DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loRegClassID = 58,
  DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClassID = 59,
  DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClassID = 60,
  DDDDRegClassID = 61,
  DDDD_with_dsub0_in_FPR64_loRegClassID = 62,
  DDDD_with_dsub1_in_FPR64_loRegClassID = 63,
  DDDD_with_dsub2_in_FPR64_loRegClassID = 64,
  DDDD_with_dsub3_in_FPR64_loRegClassID = 65,
  DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loRegClassID = 66,
  DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClassID = 67,
  DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID = 68,
  DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClassID = 69,
  DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID = 70,
  DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID = 71,
  QQRegClassID = 72,
  ZPR2RegClassID = 73,
  QQ_with_dsub_in_FPR64_loRegClassID = 74,
  QQ_with_qsub1_in_FPR128_loRegClassID = 75,
  ZPR2_with_dsub_in_FPR64_loRegClassID = 76,
  ZPR2_with_zsub1_in_ZPR_4bRegClassID = 77,
  QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loRegClassID = 78,
  ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bRegClassID = 79,
  ZPR2_with_zsub0_in_ZPR_3bRegClassID = 80,
  ZPR2_with_zsub1_in_ZPR_3bRegClassID = 81,
  ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bRegClassID = 82,
  MPR64RegClassID = 83,
  QQQRegClassID = 84,
  ZPR3RegClassID = 85,
  QQQ_with_dsub_in_FPR64_loRegClassID = 86,
  QQQ_with_qsub1_in_FPR128_loRegClassID = 87,
  QQQ_with_qsub2_in_FPR128_loRegClassID = 88,
  ZPR3_with_dsub_in_FPR64_loRegClassID = 89,
  ZPR3_with_zsub1_in_ZPR_4bRegClassID = 90,
  ZPR3_with_zsub2_in_ZPR_4bRegClassID = 91,
  QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loRegClassID = 92,
  QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loRegClassID = 93,
  ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClassID = 94,
  ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClassID = 95,
  QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loRegClassID = 96,
  ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClassID = 97,
  ZPR3_with_zsub0_in_ZPR_3bRegClassID = 98,
  ZPR3_with_zsub1_in_ZPR_3bRegClassID = 99,
  ZPR3_with_zsub2_in_ZPR_3bRegClassID = 100,
  ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bRegClassID = 101,
  ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bRegClassID = 102,
  ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bRegClassID = 103,
  QQQQRegClassID = 104,
  ZPR4RegClassID = 105,
  QQQQ_with_dsub_in_FPR64_loRegClassID = 106,
  QQQQ_with_qsub1_in_FPR128_loRegClassID = 107,
  QQQQ_with_qsub2_in_FPR128_loRegClassID = 108,
  QQQQ_with_qsub3_in_FPR128_loRegClassID = 109,
  ZPR4_with_dsub_in_FPR64_loRegClassID = 110,
  ZPR4_with_zsub1_in_ZPR_4bRegClassID = 111,
  ZPR4_with_zsub2_in_ZPR_4bRegClassID = 112,
  ZPR4_with_zsub3_in_ZPR_4bRegClassID = 113,
  QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loRegClassID = 114,
  QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClassID = 115,
  QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID = 116,
  ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClassID = 117,
  ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClassID = 118,
  ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID = 119,
  QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClassID = 120,
  QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID = 121,
  ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClassID = 122,
  ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID = 123,
  QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID = 124,
  ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID = 125,
  ZPR4_with_zsub0_in_ZPR_3bRegClassID = 126,
  ZPR4_with_zsub1_in_ZPR_3bRegClassID = 127,
  ZPR4_with_zsub2_in_ZPR_3bRegClassID = 128,
  ZPR4_with_zsub3_in_ZPR_3bRegClassID = 129,
  ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bRegClassID = 130,
  ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClassID = 131,
  ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID = 132,
  ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bRegClassID = 133,
  ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID = 134,
  ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID = 135,
  GPR64x8ClassRegClassID = 136,
  GPR64x8Class_with_x8sub_0_in_GPR64noipRegClassID = 137,
  GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID = 138,
  GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 139,
  GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 140,
  GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID = 141,
  GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 142,
  GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 143,
  GPR64x8Class_with_x8sub_0_in_tcGPR64RegClassID = 144,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 145,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 146,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 147,
  GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClassID = 148,
  GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID = 149,
  GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 150,
  GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 151,
  GPR64x8Class_with_x8sub_1_in_tcGPR64RegClassID = 152,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 153,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 154,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 155,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 156,
  GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID = 157,
  GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 158,
  GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 159,
  GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClassID = 160,
  GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 161,
  GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 162,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 163,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 164,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClassID = 165,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 166,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 167,
  GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 168,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 169,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 170,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID = 171,
  GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 172,
  GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClassID = 173,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 174,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 175,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 176,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClassID = 177,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 178,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 179,
  GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 180,
  GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClassID = 181,
  GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClassID = 182,
  GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClassID = 183,
  GPR64x8Class_with_sub_32_in_GPR32argRegClassID = 184,
  MPR32RegClassID = 185,
  GPR64x8Class_with_x8sub_2_in_GPR64argRegClassID = 186,
  GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID = 187,
  GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID = 188,
  GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID = 189,
  GPR64x8Class_with_x8sub_4_in_GPR64argRegClassID = 190,
  GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID = 191,
  GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID = 192,
  GPR64x8Class_with_x8sub_0_in_rtcGPR64RegClassID = 193,
  GPR64x8Class_with_x8sub_2_in_rtcGPR64RegClassID = 194,
  GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID = 195,
  GPR64x8Class_with_x8sub_4_in_rtcGPR64RegClassID = 196,
  GPR64x8Class_with_x8sub_6_in_GPR64argRegClassID = 197,
  GPR64x8Class_with_x8sub_6_in_rtcGPR64RegClassID = 198,
  MPR16RegClassID = 199,
  MPRRegClassID = 200,
  MPR8RegClassID = 201,

};
} // end namespace AArch64


// Register alternate name indices

namespace AArch64 {
enum {
  NoRegAltName,	// 0
  vlist1,	// 1
  vreg,	// 2
  NUM_TARGET_REG_ALT_NAMES = 3
};
} // end namespace AArch64


// Subregister indices

namespace AArch64 {
enum : uint16_t {
  NoSubRegister,
  bsub,	// 1
  dsub,	// 2
  dsub0,	// 3
  dsub1,	// 4
  dsub2,	// 5
  dsub3,	// 6
  hsub,	// 7
  qsub0,	// 8
  qsub1,	// 9
  qsub2,	// 10
  qsub3,	// 11
  ssub,	// 12
  sub_32,	// 13
  sube32,	// 14
  sube64,	// 15
  subo32,	// 16
  subo64,	// 17
  x8sub_0,	// 18
  x8sub_1,	// 19
  x8sub_2,	// 20
  x8sub_3,	// 21
  x8sub_4,	// 22
  x8sub_5,	// 23
  x8sub_6,	// 24
  x8sub_7,	// 25
  zasubb,	// 26
  zasubd0,	// 27
  zasubd1,	// 28
  zasubh0,	// 29
  zasubh1,	// 30
  zasubq0,	// 31
  zasubq1,	// 32
  zasubs0,	// 33
  zasubs1,	// 34
  zsub,	// 35
  zsub0,	// 36
  zsub1,	// 37
  zsub2,	// 38
  zsub3,	// 39
  zsub_hi,	// 40
  zasubd1_then_zasubq0,	// 41
  zasubd1_then_zasubq1,	// 42
  zasubs1_then_zasubd0,	// 43
  zasubs1_then_zasubd1,	// 44
  zasubs1_then_zasubq0,	// 45
  zasubs1_then_zasubq1,	// 46
  zasubs1_then_zasubd1_then_zasubq0,	// 47
  zasubs1_then_zasubd1_then_zasubq1,	// 48
  zasubh1_then_zasubd0,	// 49
  zasubh1_then_zasubd1,	// 50
  zasubh1_then_zasubq0,	// 51
  zasubh1_then_zasubq1,	// 52
  zasubh1_then_zasubs0,	// 53
  zasubh1_then_zasubs1,	// 54
  zasubh1_then_zasubd1_then_zasubq0,	// 55
  zasubh1_then_zasubd1_then_zasubq1,	// 56
  zasubh1_then_zasubs1_then_zasubd0,	// 57
  zasubh1_then_zasubs1_then_zasubd1,	// 58
  zasubh1_then_zasubs1_then_zasubq0,	// 59
  zasubh1_then_zasubs1_then_zasubq1,	// 60
  zasubh1_then_zasubs1_then_zasubd1_then_zasubq0,	// 61
  zasubh1_then_zasubs1_then_zasubd1_then_zasubq1,	// 62
  dsub1_then_bsub,	// 63
  dsub1_then_hsub,	// 64
  dsub1_then_ssub,	// 65
  dsub3_then_bsub,	// 66
  dsub3_then_hsub,	// 67
  dsub3_then_ssub,	// 68
  dsub2_then_bsub,	// 69
  dsub2_then_hsub,	// 70
  dsub2_then_ssub,	// 71
  qsub1_then_bsub,	// 72
  qsub1_then_dsub,	// 73
  qsub1_then_hsub,	// 74
  qsub1_then_ssub,	// 75
  qsub3_then_bsub,	// 76
  qsub3_then_dsub,	// 77
  qsub3_then_hsub,	// 78
  qsub3_then_ssub,	// 79
  qsub2_then_bsub,	// 80
  qsub2_then_dsub,	// 81
  qsub2_then_hsub,	// 82
  qsub2_then_ssub,	// 83
  x8sub_7_then_sub_32,	// 84
  x8sub_6_then_sub_32,	// 85
  x8sub_5_then_sub_32,	// 86
  x8sub_4_then_sub_32,	// 87
  x8sub_3_then_sub_32,	// 88
  x8sub_2_then_sub_32,	// 89
  x8sub_1_then_sub_32,	// 90
  subo64_then_sub_32,	// 91
  zsub1_then_bsub,	// 92
  zsub1_then_dsub,	// 93
  zsub1_then_hsub,	// 94
  zsub1_then_ssub,	// 95
  zsub1_then_zsub,	// 96
  zsub1_then_zsub_hi,	// 97
  zsub3_then_bsub,	// 98
  zsub3_then_dsub,	// 99
  zsub3_then_hsub,	// 100
  zsub3_then_ssub,	// 101
  zsub3_then_zsub,	// 102
  zsub3_then_zsub_hi,	// 103
  zsub2_then_bsub,	// 104
  zsub2_then_dsub,	// 105
  zsub2_then_hsub,	// 106
  zsub2_then_ssub,	// 107
  zsub2_then_zsub,	// 108
  zsub2_then_zsub_hi,	// 109
  dsub0_dsub1,	// 110
  dsub0_dsub1_dsub2,	// 111
  dsub1_dsub2,	// 112
  dsub1_dsub2_dsub3,	// 113
  dsub2_dsub3,	// 114
  dsub_qsub1_then_dsub,	// 115
  dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub,	// 116
  dsub_qsub1_then_dsub_qsub2_then_dsub,	// 117
  qsub0_qsub1,	// 118
  qsub0_qsub1_qsub2,	// 119
  qsub1_qsub2,	// 120
  qsub1_qsub2_qsub3,	// 121
  qsub2_qsub3,	// 122
  qsub1_then_dsub_qsub2_then_dsub,	// 123
  qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub,	// 124
  qsub2_then_dsub_qsub3_then_dsub,	// 125
  sub_32_x8sub_1_then_sub_32,	// 126
  x8sub_0_x8sub_1,	// 127
  x8sub_2_x8sub_3,	// 128
  x8sub_4_x8sub_5,	// 129
  x8sub_6_x8sub_7,	// 130
  x8sub_6_then_sub_32_x8sub_7_then_sub_32,	// 131
  x8sub_4_then_sub_32_x8sub_5_then_sub_32,	// 132
  x8sub_2_then_sub_32_x8sub_3_then_sub_32,	// 133
  sub_32_subo64_then_sub_32,	// 134
  dsub_zsub1_then_dsub,	// 135
  zsub_zsub1_then_zsub,	// 136
  dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub,	// 137
  dsub_zsub1_then_dsub_zsub2_then_dsub,	// 138
  zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub,	// 139
  zsub_zsub1_then_zsub_zsub2_then_zsub,	// 140
  zsub0_zsub1,	// 141
  zsub0_zsub1_zsub2,	// 142
  zsub1_zsub2,	// 143
  zsub1_zsub2_zsub3,	// 144
  zsub2_zsub3,	// 145
  zsub1_then_dsub_zsub2_then_dsub,	// 146
  zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub,	// 147
  zsub1_then_zsub_zsub2_then_zsub,	// 148
  zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub,	// 149
  zsub2_then_dsub_zsub3_then_dsub,	// 150
  zsub2_then_zsub_zsub3_then_zsub,	// 151
  NUM_TARGET_SUBREGS
};
} // end namespace AArch64

// Register pressure sets enum.
namespace AArch64 {
enum RegisterPressureSets {
  GPR32sponly = 0,
  rtcGPR64 = 1,
  MatrixIndexGPR32_12_15 = 2,
  PPR_3b = 3,
  GPR64x8Class_with_x8sub_0_in_rtcGPR64 = 4,
  PPR = 5,
  MPR128 = 6,
  GPR64x8Class_with_x8sub_2_in_rtcGPR64 = 7,
  GPR64x8Class_with_x8sub_6_in_rtcGPR64_with_GPR64x8Class_with_x8sub_0_in_rtcGPR64 = 8,
  FPR16_lo = 9,
  GPR64x8Class_with_x8sub_0_in_tcGPR64 = 10,
  ZPR_3b = 11,
  FPR16_lo_with_ZPR_3b = 12,
  DD_with_dsub1_in_FPR64_lo_with_ZPR_3b = 13,
  DDD_with_dsub2_in_FPR64_lo_with_ZPR_3b = 14,
  DDD_with_dsub2_in_FPR64_lo_with_ZPR4_with_zsub1_in_ZPR_3b = 15,
  DDDD_with_dsub3_in_FPR64_lo_with_ZPR_3b = 16,
  DDDD_with_dsub3_in_FPR64_lo_with_ZPR4_with_zsub1_in_ZPR_3b = 17,
  DDDD_with_dsub3_in_FPR64_lo_with_ZPR4_with_zsub2_in_ZPR_3b = 18,
  FPR16_lo_with_ZPR4_with_zsub1_in_ZPR_3b = 19,
  FPR8 = 20,
  FPR16_lo_with_ZPR4_with_zsub2_in_ZPR_3b = 21,
  GPR32 = 22,
  FPR16_lo_with_ZPR4_with_zsub3_in_ZPR_3b = 23,
  ZPR4_with_zsub3_in_ZPR_4b = 24,
  ZPR_4b = 25,
  FPR8_with_ZPR_3b = 26,
  FPR8_with_ZPR4_with_zsub1_in_ZPR_3b = 27,
  FPR8_with_ZPR4_with_zsub2_in_ZPR_3b = 28,
  FPR8_with_ZPR4_with_zsub3_in_ZPR_3b = 29,
  ZPR4_with_zsub2_in_ZPR_4b = 30,
  FPR8_with_ZPR_4b = 31,
  FPR8_with_ZPR4_with_zsub1_in_ZPR_4b = 32,
  FPR8_with_ZPR4_with_zsub2_in_ZPR_4b = 33,
  FPR8_with_ZPR4_with_zsub3_in_ZPR_4b = 34,
  ZPR = 35,
};
} // end namespace AArch64

} // end namespace llvm

#endif // GET_REGINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* MC Register Information                                                    *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_MC_DESC
#undef GET_REGINFO_MC_DESC

namespace llvm {

extern const MCPhysReg AArch64RegDiffLists[] = {
  /* 0 */ 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
  /* 17 */ 63239, 1, 1, 1, 1, 1, 1, 1, 0,
  /* 26 */ 64537, 1, 1, 1, 1, 1, 1, 1, 0,
  /* 35 */ 1, 92, 1, 1, 1, 1, 1, 1, 0,
  /* 44 */ 64949, 1, 1, 1, 74, 1, 1, 1, 0,
  /* 53 */ 63083, 1, 1, 1, 0,
  /* 58 */ 63095, 1, 1, 1, 0,
  /* 63 */ 65089, 1, 1, 1, 0,
  /* 68 */ 65185, 1, 1, 1, 0,
  /* 73 */ 31, 318, 17, 65504, 1, 1, 1, 0,
  /* 81 */ 31, 319, 17, 65504, 1, 1, 1, 0,
  /* 89 */ 31, 320, 17, 65504, 1, 1, 1, 0,
  /* 97 */ 31, 321, 17, 65504, 1, 1, 1, 0,
  /* 105 */ 31, 322, 17, 65504, 1, 1, 1, 0,
  /* 113 */ 31, 323, 17, 65504, 1, 1, 1, 0,
  /* 121 */ 31, 324, 17, 65504, 1, 1, 1, 0,
  /* 129 */ 31, 325, 17, 65504, 1, 1, 1, 0,
  /* 137 */ 31, 326, 17, 65504, 1, 1, 1, 0,
  /* 145 */ 335, 65504, 1, 1, 1, 0,
  /* 151 */ 336, 65504, 1, 1, 1, 0,
  /* 157 */ 337, 65504, 1, 1, 1, 0,
  /* 163 */ 338, 65504, 1, 1, 1, 0,
  /* 169 */ 339, 65504, 1, 1, 1, 0,
  /* 175 */ 340, 65504, 1, 1, 1, 0,
  /* 181 */ 341, 65504, 1, 1, 1, 0,
  /* 187 */ 342, 65504, 1, 1, 1, 0,
  /* 193 */ 343, 65504, 1, 1, 1, 0,
  /* 199 */ 31, 317, 17, 65495, 9, 1, 1, 0,
  /* 207 */ 31, 318, 17, 65495, 9, 1, 1, 0,
  /* 215 */ 334, 65495, 9, 1, 1, 0,
  /* 221 */ 335, 65495, 9, 1, 1, 0,
  /* 227 */ 23, 29, 1, 1, 0,
  /* 232 */ 23, 29, 1, 1, 46, 29, 1, 1, 0,
  /* 241 */ 64917, 1, 1, 75, 1, 1, 0,
  /* 248 */ 65057, 1, 1, 0,
  /* 252 */ 65153, 1, 1, 0,
  /* 256 */ 31, 326, 17, 65505, 1, 1, 0,
  /* 263 */ 31, 327, 17, 65505, 1, 1, 0,
  /* 270 */ 343, 65505, 1, 1, 0,
  /* 275 */ 344, 65505, 1, 1, 0,
  /* 280 */ 31, 316, 17, 65494, 10, 1, 0,
  /* 287 */ 31, 317, 17, 65494, 10, 1, 0,
  /* 294 */ 333, 65494, 10, 1, 0,
  /* 299 */ 334, 65494, 10, 1, 0,
  /* 304 */ 23, 1, 29, 1, 0,
  /* 309 */ 23, 1, 29, 1, 46, 1, 29, 1, 0,
  /* 318 */ 23, 30, 1, 0,
  /* 322 */ 23, 30, 1, 46, 30, 1, 0,
  /* 329 */ 64981, 1, 76, 1, 0,
  /* 334 */ 65173, 112, 65456, 65472, 33, 112, 65456, 65472, 33, 112, 65456, 65472, 329, 1, 0,
  /* 349 */ 65173, 112, 65456, 65472, 33, 112, 65456, 65472, 1, 112, 65456, 65472, 361, 1, 0,
  /* 364 */ 63261, 1, 0,
  /* 367 */ 63273, 1, 0,
  /* 370 */ 63291, 1, 0,
  /* 373 */ 63303, 1, 0,
  /* 376 */ 64479, 1, 0,
  /* 379 */ 64513, 1, 0,
  /* 382 */ 65121, 1, 0,
  /* 385 */ 65176, 1, 0,
  /* 388 */ 65177, 1, 0,
  /* 391 */ 65178, 1, 0,
  /* 394 */ 65179, 1, 0,
  /* 397 */ 65180, 1, 0,
  /* 400 */ 65181, 1, 0,
  /* 403 */ 65182, 1, 0,
  /* 406 */ 65183, 1, 0,
  /* 409 */ 65184, 1, 0,
  /* 412 */ 65185, 1, 0,
  /* 415 */ 65186, 1, 0,
  /* 418 */ 65187, 1, 0,
  /* 421 */ 65188, 1, 0,
  /* 424 */ 65189, 1, 0,
  /* 427 */ 65190, 1, 0,
  /* 430 */ 65217, 1, 0,
  /* 433 */ 64, 80, 65424, 80, 124, 94, 1, 62, 65503, 34, 65503, 34, 65503, 1, 63, 1, 62, 65503, 34, 65503, 34, 65503, 1, 107, 1, 62, 65503, 34, 65503, 34, 65503, 1, 0,
  /* 466 */ 124, 190, 1, 62, 65503, 34, 65503, 34, 65503, 1, 107, 1, 62, 65503, 34, 65503, 34, 65503, 1, 0,
  /* 486 */ 65473, 330, 1, 62, 65503, 34, 65503, 34, 65503, 1, 0,
  /* 497 */ 64, 80, 65424, 80, 124, 95, 31, 33, 65504, 62, 65503, 34, 65503, 1, 33, 31, 33, 65504, 62, 65503, 34, 65503, 1, 77, 31, 33, 65504, 62, 65503, 34, 65503, 1, 0,
  /* 530 */ 124, 191, 31, 33, 65504, 62, 65503, 34, 65503, 1, 77, 31, 33, 65504, 62, 65503, 34, 65503, 1, 0,
  /* 550 */ 65473, 331, 31, 33, 65504, 62, 65503, 34, 65503, 1, 0,
  /* 561 */ 63, 65503, 34, 65503, 1, 64, 63, 65503, 34, 65503, 1, 108, 63, 65503, 34, 65503, 1, 0,
  /* 579 */ 64, 80, 65424, 80, 124, 94, 1, 63, 1, 65503, 1, 62, 65503, 1, 33, 1, 63, 1, 65503, 1, 62, 65503, 1, 77, 1, 63, 1, 65503, 1, 62, 65503, 1, 0,
  /* 612 */ 124, 190, 1, 63, 1, 65503, 1, 62, 65503, 1, 77, 1, 63, 1, 65503, 1, 62, 65503, 1, 0,
  /* 632 */ 65473, 330, 1, 63, 1, 65503, 1, 62, 65503, 1, 0,
  /* 643 */ 64, 65504, 63, 65503, 1, 33, 64, 65504, 63, 65503, 1, 77, 64, 65504, 63, 65503, 1, 0,
  /* 661 */ 65503, 1, 128, 65503, 1, 172, 65503, 1, 0,
  /* 670 */ 31, 327, 17, 65506, 1, 0,
  /* 676 */ 31, 328, 17, 65506, 1, 0,
  /* 682 */ 344, 65506, 1, 0,
  /* 686 */ 345, 65506, 1, 0,
  /* 690 */ 2, 0,
  /* 692 */ 2, 4, 0,
  /* 695 */ 64976, 4, 0,
  /* 698 */ 6, 0,
  /* 700 */ 269, 9, 18, 65510, 10, 8, 65522, 10, 8, 6, 65510, 10, 8, 65522, 10, 8, 65521, 18, 65510, 10, 8, 65522, 10, 8, 6, 65510, 10, 8, 65522, 10, 8, 0,
  /* 732 */ 31, 315, 17, 65493, 11, 0,
  /* 738 */ 31, 316, 17, 65493, 11, 0,
  /* 744 */ 332, 65493, 11, 0,
  /* 748 */ 333, 65493, 11, 0,
  /* 752 */ 12, 0,
  /* 754 */ 1, 537, 16, 0,
  /* 758 */ 65322, 543, 16, 0,
  /* 762 */ 23, 1, 1, 29, 0,
  /* 767 */ 23, 1, 1, 29, 46, 1, 1, 29, 0,
  /* 776 */ 64, 80, 65424, 80, 124, 94, 1, 62, 1, 65503, 34, 65503, 1, 29, 34, 1, 62, 1, 65503, 34, 65503, 1, 29, 78, 1, 62, 1, 65503, 34, 65503, 1, 29, 0,
  /* 809 */ 124, 190, 1, 62, 1, 65503, 34, 65503, 1, 29, 78, 1, 62, 1, 65503, 34, 65503, 1, 29, 0,
  /* 829 */ 65473, 330, 1, 62, 1, 65503, 34, 65503, 1, 29, 0,
  /* 840 */ 23, 1, 30, 0,
  /* 844 */ 23, 1, 30, 46, 1, 30, 0,
  /* 851 */ 63, 1, 65503, 1, 30, 34, 63, 1, 65503, 1, 30, 78, 63, 1, 65503, 1, 30, 0,
  /* 869 */ 23, 31, 0,
  /* 872 */ 23, 31, 46, 31, 0,
  /* 877 */ 65504, 31, 97, 65504, 31, 141, 65504, 31, 0,
  /* 886 */ 65312, 77, 0,
  /* 889 */ 65205, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 31, 96, 0,
  /* 906 */ 65205, 65412, 65456, 112, 65456, 65472, 299, 65442, 65412, 65456, 112, 65456, 65472, 299, 63, 96, 0,
  /* 923 */ 65141, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 30, 96, 65504, 96, 76, 1, 65300, 96, 0,
  /* 953 */ 65141, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 65442, 65412, 65456, 112, 65456, 65472, 299, 62, 96, 65504, 96, 76, 1, 65300, 96, 0,
  /* 983 */ 65141, 65412, 65456, 112, 65456, 65472, 299, 65442, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 62, 96, 65504, 96, 76, 65505, 65300, 96, 0,
  /* 1013 */ 65173, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 65442, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 61, 96, 65472, 32, 64, 32, 76, 64, 65473, 64, 65441, 65331, 64, 32, 64, 65345, 96, 0,
  /* 1059 */ 65173, 65412, 65456, 112, 65456, 65472, 299, 65442, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 61, 96, 65472, 32, 64, 32, 76, 64, 65441, 64, 65473, 65299, 64, 32, 64, 65377, 96, 0,
  /* 1105 */ 65173, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 29, 96, 65472, 32, 64, 32, 76, 64, 65473, 64, 65473, 65299, 64, 32, 64, 65377, 96, 0,
  /* 1151 */ 65173, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 65474, 65412, 65456, 112, 65456, 65472, 299, 65442, 65412, 65456, 112, 65456, 65472, 299, 61, 96, 65472, 32, 64, 32, 76, 64, 65473, 64, 65473, 65299, 64, 32, 64, 65377, 96, 0,
  /* 1197 */ 1, 98, 0,
  /* 1200 */ 64976, 98, 0,
  /* 1203 */ 96, 140, 0,
  /* 1206 */ 214, 0,
  /* 1208 */ 65412, 65456, 112, 65456, 65472, 299, 0,
  /* 1215 */ 65221, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 330, 0,
  /* 1227 */ 65219, 65505, 65323, 214, 345, 0,
  /* 1233 */ 65203, 65505, 32, 65505, 346, 0,
  /* 1239 */ 65202, 65505, 32, 65505, 347, 0,
  /* 1245 */ 65201, 65505, 32, 65505, 348, 0,
  /* 1251 */ 65200, 65505, 32, 65505, 349, 0,
  /* 1257 */ 65199, 65505, 32, 65505, 350, 0,
  /* 1263 */ 65198, 65505, 32, 65505, 351, 0,
  /* 1269 */ 65197, 65505, 32, 65505, 352, 0,
  /* 1275 */ 65196, 65505, 32, 65505, 353, 0,
  /* 1281 */ 65195, 65505, 32, 65505, 354, 0,
  /* 1287 */ 65194, 65505, 32, 65505, 355, 0,
  /* 1293 */ 65193, 65505, 32, 65505, 356, 0,
  /* 1299 */ 65192, 65505, 32, 65505, 357, 0,
  /* 1305 */ 65191, 65505, 32, 65505, 358, 0,
  /* 1311 */ 65190, 65505, 32, 65505, 359, 0,
  /* 1317 */ 65221, 65456, 112, 65456, 65472, 81, 65456, 112, 65456, 65472, 362, 0,
  /* 1329 */ 64977, 214, 65328, 65535, 538, 0,
  /* 1335 */ 553, 0,
  /* 1337 */ 559, 0,
  /* 1339 */ 63118, 0,
  /* 1341 */ 63130, 0,
  /* 1343 */ 63148, 0,
  /* 1345 */ 63160, 0,
  /* 1347 */ 63181, 0,
  /* 1349 */ 63193, 0,
  /* 1351 */ 63211, 0,
  /* 1353 */ 63223, 0,
  /* 1355 */ 65518, 22, 65516, 65526, 65267, 0,
  /* 1361 */ 65526, 22, 65516, 65526, 65267, 0,
  /* 1367 */ 65518, 26, 65516, 65526, 65267, 0,
  /* 1373 */ 65526, 26, 65516, 65526, 65267, 0,
  /* 1379 */ 65518, 22, 65518, 65526, 65267, 0,
  /* 1385 */ 65526, 22, 65518, 65526, 65267, 0,
  /* 1391 */ 65518, 26, 65518, 65526, 65267, 0,
  /* 1397 */ 65526, 26, 65518, 65526, 65267, 0,
  /* 1403 */ 65518, 22, 65516, 65527, 65267, 0,
  /* 1409 */ 65526, 22, 65516, 65527, 65267, 0,
  /* 1415 */ 65518, 26, 65516, 65527, 65267, 0,
  /* 1421 */ 65526, 26, 65516, 65527, 65267, 0,
  /* 1427 */ 65518, 22, 65518, 65527, 65267, 0,
  /* 1433 */ 65526, 22, 65518, 65527, 65267, 0,
  /* 1439 */ 65518, 26, 65518, 65527, 65267, 0,
  /* 1445 */ 65526, 26, 65518, 65527, 65267, 0,
  /* 1451 */ 65321, 0,
  /* 1453 */ 65326, 0,
  /* 1455 */ 65207, 65327, 0,
  /* 1458 */ 65389, 0,
  /* 1460 */ 65404, 0,
  /* 1462 */ 65420, 0,
  /* 1464 */ 65436, 0,
  /* 1466 */ 65157, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 329, 64, 32, 1, 65440, 0,
  /* 1487 */ 65157, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 81, 65456, 112, 65456, 65472, 361, 64, 32, 1, 65440, 0,
  /* 1508 */ 65157, 65456, 112, 65456, 65472, 81, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 361, 64, 32, 65505, 65440, 0,
  /* 1529 */ 65189, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 81, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 360, 32, 32, 32, 64, 65473, 64, 65441, 65471, 64, 65441, 0,
  /* 1561 */ 65205, 112, 65456, 65472, 33, 112, 65456, 65472, 1, 112, 65456, 65472, 33, 112, 65456, 65472, 360, 64, 65473, 64, 65441, 0,
  /* 1583 */ 65237, 112, 65456, 65472, 1, 112, 65456, 65472, 0,
  /* 1592 */ 65237, 112, 65456, 65472, 33, 112, 65456, 65472, 0,
  /* 1601 */ 65456, 112, 65456, 65472, 0,
  /* 1606 */ 65189, 65456, 112, 65456, 65472, 81, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 360, 32, 32, 32, 64, 65441, 64, 65473, 65439, 64, 65473, 0,
  /* 1638 */ 65189, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 328, 32, 32, 32, 64, 65473, 64, 65473, 65439, 64, 65473, 0,
  /* 1670 */ 65189, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 113, 65456, 112, 65456, 65472, 81, 65456, 112, 65456, 65472, 360, 32, 32, 32, 64, 65473, 64, 65473, 65439, 64, 65473, 0,
  /* 1702 */ 65205, 112, 65456, 65472, 1, 112, 65456, 65472, 33, 112, 65456, 65472, 33, 112, 65456, 65472, 360, 64, 65441, 64, 65473, 0,
  /* 1724 */ 65205, 112, 65456, 65472, 33, 112, 65456, 65472, 33, 112, 65456, 65472, 33, 112, 65456, 65472, 328, 64, 65473, 64, 65473, 0,
  /* 1746 */ 65205, 112, 65456, 65472, 33, 112, 65456, 65472, 33, 112, 65456, 65472, 1, 112, 65456, 65472, 360, 64, 65473, 64, 65473, 0,
  /* 1768 */ 65484, 0,
  /* 1770 */ 65173, 112, 65456, 65472, 1, 112, 65456, 65472, 33, 112, 65456, 65472, 361, 65505, 0,
  /* 1785 */ 31, 315, 2, 65507, 0,
  /* 1790 */ 65322, 559, 2, 65507, 0,
  /* 1795 */ 31, 328, 17, 65507, 0,
  /* 1800 */ 31, 329, 17, 65507, 0,
  /* 1805 */ 317, 65507, 0,
  /* 1808 */ 345, 65507, 0,
  /* 1811 */ 346, 65507, 0,
  /* 1814 */ 561, 65507, 0,
  /* 1817 */ 65516, 0,
  /* 1819 */ 65526, 0,
  /* 1821 */ 65534, 0,
  /* 1823 */ 65229, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 343, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 1848 */ 65228, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 344, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 1873 */ 65227, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 345, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 1898 */ 65226, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 346, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 1923 */ 65225, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 347, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 1948 */ 65224, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 348, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 1973 */ 65223, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 349, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 1998 */ 65222, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 350, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 2023 */ 65221, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 351, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 2048 */ 65220, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 352, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 2073 */ 65219, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 353, 17, 1, 1, 1, 65519, 65535, 65535, 0,
  /* 2098 */ 65242, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 32, 65505, 65323, 214, 342, 17, 1, 1, 65522, 65534, 65535, 65535, 0,
};

extern const LaneBitmask AArch64LaneMaskLists[] = {
  /* 0 */ LaneBitmask(0x0000000000000000), LaneBitmask::getAll(),
  /* 2 */ LaneBitmask(0x0000000000200000), LaneBitmask(0x0000000000000001), LaneBitmask::getAll(),
  /* 5 */ LaneBitmask(0x0000000000200000), LaneBitmask(0x0000000000800000), LaneBitmask(0x0000000000400000), LaneBitmask(0x0000000000000001), LaneBitmask::getAll(),
  /* 10 */ LaneBitmask(0x0000000000200000), LaneBitmask(0x0000000000800000), LaneBitmask(0x0000000000000001), LaneBitmask::getAll(),
  /* 14 */ LaneBitmask(0x0000000001000000), LaneBitmask(0x0000000000000001), LaneBitmask::getAll(),
  /* 17 */ LaneBitmask(0x0000000001000000), LaneBitmask(0x0000000004000000), LaneBitmask(0x0000000002000000), LaneBitmask(0x0000000000000001), LaneBitmask::getAll(),
  /* 22 */ LaneBitmask(0x0000000001000000), LaneBitmask(0x0000000004000000), LaneBitmask(0x0000000000000001), LaneBitmask::getAll(),
  /* 26 */ LaneBitmask(0x0000000400000000), LaneBitmask(0x0000000000000002), LaneBitmask::getAll(),
  /* 29 */ LaneBitmask(0x0000000000000008), LaneBitmask(0x0000000000000004), LaneBitmask::getAll(),
  /* 32 */ LaneBitmask(0x0000000000000004), LaneBitmask(0x0000000000000008), LaneBitmask::getAll(),
  /* 35 */ LaneBitmask(0x0000000000000010), LaneBitmask(0x0000000000000020), LaneBitmask::getAll(),
  /* 38 */ LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000000000040), LaneBitmask::getAll(),
  /* 41 */ LaneBitmask(0x0000000800000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000001000000000), LaneBitmask(0x0000000000000040), LaneBitmask::getAll(),
  /* 46 */ LaneBitmask(0x0000000800000000), LaneBitmask(0x0000008000000000), LaneBitmask(0x0000002000000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000001000000000), LaneBitmask(0x0000010000000000), LaneBitmask(0x0000004000000000), LaneBitmask(0x0000000000000040), LaneBitmask::getAll(),
  /* 55 */ LaneBitmask(0x0000000800000000), LaneBitmask(0x0000008000000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000001000000000), LaneBitmask(0x0000010000000000), LaneBitmask(0x0000000000000040), LaneBitmask::getAll(),
  /* 62 */ LaneBitmask(0x0000000000000010), LaneBitmask(0x0000000000000020), LaneBitmask(0x0000000000000080), LaneBitmask(0x0000000000000100), LaneBitmask::getAll(),
  /* 67 */ LaneBitmask(0x0000000000000010), LaneBitmask(0x0000000000000020), LaneBitmask(0x0000000000000080), LaneBitmask(0x0000000000000100), LaneBitmask(0x0000000000000200), LaneBitmask(0x0000000000000400), LaneBitmask(0x0000000000000800), LaneBitmask(0x0000000000001000), LaneBitmask::getAll(),
  /* 76 */ LaneBitmask(0x0000000000000010), LaneBitmask(0x0000000000000020), LaneBitmask(0x0000000000000080), LaneBitmask(0x0000000000000100), LaneBitmask(0x0000000000000200), LaneBitmask(0x0000000000000400), LaneBitmask(0x0000000000000800), LaneBitmask(0x0000000000001000), LaneBitmask(0x0000000000002000), LaneBitmask(0x0000000000004000), LaneBitmask(0x0000000000008000), LaneBitmask(0x0000000000010000), LaneBitmask(0x0000000000020000), LaneBitmask(0x0000000000040000), LaneBitmask(0x0000000000080000), LaneBitmask(0x0000000000100000), LaneBitmask::getAll(),
  /* 93 */ LaneBitmask(0x0000000000800000), LaneBitmask(0x0000000000400000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000000200000), LaneBitmask::getAll(),
  /* 98 */ LaneBitmask(0x0000000000800000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000000200000), LaneBitmask::getAll(),
  /* 102 */ LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000000200000), LaneBitmask(0x0000000000800000), LaneBitmask(0x0000000000400000), LaneBitmask::getAll(),
  /* 107 */ LaneBitmask(0x0000000000400000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000000200000), LaneBitmask(0x0000000000800000), LaneBitmask::getAll(),
  /* 112 */ LaneBitmask(0x0000000004000000), LaneBitmask(0x0000000002000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000001000000), LaneBitmask::getAll(),
  /* 117 */ LaneBitmask(0x0000000004000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000001000000), LaneBitmask::getAll(),
  /* 121 */ LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000001000000), LaneBitmask(0x0000000004000000), LaneBitmask(0x0000000002000000), LaneBitmask::getAll(),
  /* 126 */ LaneBitmask(0x0000000002000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000001000000), LaneBitmask(0x0000000004000000), LaneBitmask::getAll(),
  /* 131 */ LaneBitmask(0x0000000000000002), LaneBitmask(0x0000000200000000), LaneBitmask(0x0000000100000000), LaneBitmask(0x0000000080000000), LaneBitmask(0x0000000040000000), LaneBitmask(0x0000000020000000), LaneBitmask(0x0000000010000000), LaneBitmask(0x0000000008000000), LaneBitmask::getAll(),
  /* 140 */ LaneBitmask(0x0000000008000000), LaneBitmask(0x0000000000000002), LaneBitmask(0x0000000200000000), LaneBitmask(0x0000000100000000), LaneBitmask(0x0000000080000000), LaneBitmask(0x0000000040000000), LaneBitmask(0x0000000020000000), LaneBitmask(0x0000000010000000), LaneBitmask::getAll(),
  /* 149 */ LaneBitmask(0x0000000000000002), LaneBitmask(0x0000000400000000), LaneBitmask::getAll(),
  /* 152 */ LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000800000000), LaneBitmask(0x0000000000000040), LaneBitmask(0x0000001000000000), LaneBitmask::getAll(),
  /* 157 */ LaneBitmask(0x0000008000000000), LaneBitmask(0x0000002000000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000800000000), LaneBitmask(0x0000010000000000), LaneBitmask(0x0000004000000000), LaneBitmask(0x0000000000000040), LaneBitmask(0x0000001000000000), LaneBitmask::getAll(),
  /* 166 */ LaneBitmask(0x0000008000000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000800000000), LaneBitmask(0x0000010000000000), LaneBitmask(0x0000000000000040), LaneBitmask(0x0000001000000000), LaneBitmask::getAll(),
  /* 173 */ LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000800000000), LaneBitmask(0x0000008000000000), LaneBitmask(0x0000002000000000), LaneBitmask(0x0000000000000040), LaneBitmask(0x0000001000000000), LaneBitmask(0x0000010000000000), LaneBitmask(0x0000004000000000), LaneBitmask::getAll(),
  /* 182 */ LaneBitmask(0x0000002000000000), LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000800000000), LaneBitmask(0x0000008000000000), LaneBitmask(0x0000004000000000), LaneBitmask(0x0000000000000040), LaneBitmask(0x0000001000000000), LaneBitmask(0x0000010000000000), LaneBitmask::getAll(),
  /* 191 */ LaneBitmask(0x0000000000000001), LaneBitmask(0x0000000800000000), LaneBitmask(0x0000008000000000), LaneBitmask(0x0000000000000040), LaneBitmask(0x0000001000000000), LaneBitmask(0x0000010000000000), LaneBitmask::getAll(),
};

extern const uint16_t AArch64SubRegIdxLists[] = {
  /* 0 */ 2, 12, 7, 1, 0,
  /* 5 */ 13, 0,
  /* 7 */ 14, 16, 0,
  /* 10 */ 31, 32, 0,
  /* 13 */ 35, 2, 12, 7, 1, 40, 0,
  /* 20 */ 27, 31, 32, 28, 41, 42, 0,
  /* 27 */ 33, 27, 31, 32, 28, 41, 42, 34, 43, 45, 46, 44, 47, 48, 0,
  /* 42 */ 26, 29, 33, 27, 31, 32, 28, 41, 42, 34, 43, 45, 46, 44, 47, 48, 30, 53, 49, 51, 52, 50, 55, 56, 54, 57, 59, 60, 58, 61, 62, 0,
  /* 74 */ 3, 12, 7, 1, 4, 65, 64, 63, 0,
  /* 83 */ 3, 12, 7, 1, 4, 65, 64, 63, 5, 71, 70, 69, 110, 112, 0,
  /* 98 */ 3, 12, 7, 1, 4, 65, 64, 63, 5, 71, 70, 69, 6, 68, 67, 66, 110, 111, 112, 113, 114, 0,
  /* 120 */ 8, 2, 12, 7, 1, 9, 73, 75, 74, 72, 115, 0,
  /* 132 */ 8, 2, 12, 7, 1, 9, 73, 75, 74, 72, 10, 81, 83, 82, 80, 115, 117, 118, 120, 123, 0,
  /* 153 */ 8, 2, 12, 7, 1, 9, 73, 75, 74, 72, 10, 81, 83, 82, 80, 11, 77, 79, 78, 76, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 0,
  /* 185 */ 18, 13, 19, 90, 20, 89, 21, 88, 22, 87, 23, 86, 24, 85, 25, 84, 126, 127, 128, 129, 130, 131, 132, 133, 0,
  /* 210 */ 15, 13, 17, 91, 134, 0,
  /* 216 */ 36, 35, 2, 12, 7, 1, 40, 37, 96, 93, 95, 94, 92, 97, 135, 136, 0,
  /* 233 */ 36, 35, 2, 12, 7, 1, 40, 37, 96, 93, 95, 94, 92, 97, 38, 108, 105, 107, 106, 104, 109, 135, 136, 138, 140, 141, 143, 146, 148, 0,
  /* 263 */ 36, 35, 2, 12, 7, 1, 40, 37, 96, 93, 95, 94, 92, 97, 38, 108, 105, 107, 106, 104, 109, 39, 102, 99, 101, 100, 98, 103, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 0,
};

extern const MCRegisterInfo::SubRegCoveredBits AArch64SubRegIdxRanges[] = {
  { 65535, 65535 },
  { 0, 8 },	// bsub
  { 0, 64 },	// dsub
  { 0, 64 },	// dsub0
  { 0, 64 },	// dsub1
  { 0, 64 },	// dsub2
  { 0, 64 },	// dsub3
  { 0, 16 },	// hsub
  { 0, 128 },	// qsub0
  { 0, 128 },	// qsub1
  { 0, 128 },	// qsub2
  { 0, 128 },	// qsub3
  { 0, 32 },	// ssub
  { 0, 32 },	// sub_32
  { 0, 32 },	// sube32
  { 0, 64 },	// sube64
  { 0, 32 },	// subo32
  { 0, 64 },	// subo64
  { 0, 64 },	// x8sub_0
  { 64, 64 },	// x8sub_1
  { 128, 64 },	// x8sub_2
  { 192, 64 },	// x8sub_3
  { 256, 64 },	// x8sub_4
  { 320, 64 },	// x8sub_5
  { 384, 64 },	// x8sub_6
  { 448, 64 },	// x8sub_7
  { 0, 2048 },	// zasubb
  { 0, 256 },	// zasubd0
  { 0, 256 },	// zasubd1
  { 0, 1024 },	// zasubh0
  { 0, 1024 },	// zasubh1
  { 0, 128 },	// zasubq0
  { 0, 128 },	// zasubq1
  { 0, 512 },	// zasubs0
  { 0, 512 },	// zasubs1
  { 0, 128 },	// zsub
  { 65535, 128 },	// zsub0
  { 65535, 128 },	// zsub1
  { 65535, 128 },	// zsub2
  { 65535, 128 },	// zsub3
  { 0, 128 },	// zsub_hi
  { 0, 128 },	// zasubd1_then_zasubq0
  { 0, 128 },	// zasubd1_then_zasubq1
  { 0, 256 },	// zasubs1_then_zasubd0
  { 0, 256 },	// zasubs1_then_zasubd1
  { 0, 128 },	// zasubs1_then_zasubq0
  { 0, 128 },	// zasubs1_then_zasubq1
  { 0, 128 },	// zasubs1_then_zasubd1_then_zasubq0
  { 0, 128 },	// zasubs1_then_zasubd1_then_zasubq1
  { 0, 256 },	// zasubh1_then_zasubd0
  { 0, 256 },	// zasubh1_then_zasubd1
  { 0, 128 },	// zasubh1_then_zasubq0
  { 0, 128 },	// zasubh1_then_zasubq1
  { 0, 512 },	// zasubh1_then_zasubs0
  { 0, 512 },	// zasubh1_then_zasubs1
  { 0, 128 },	// zasubh1_then_zasubd1_then_zasubq0
  { 0, 128 },	// zasubh1_then_zasubd1_then_zasubq1
  { 0, 256 },	// zasubh1_then_zasubs1_then_zasubd0
  { 0, 256 },	// zasubh1_then_zasubs1_then_zasubd1
  { 0, 128 },	// zasubh1_then_zasubs1_then_zasubq0
  { 0, 128 },	// zasubh1_then_zasubs1_then_zasubq1
  { 0, 128 },	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
  { 0, 128 },	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
  { 0, 8 },	// dsub1_then_bsub
  { 0, 16 },	// dsub1_then_hsub
  { 0, 32 },	// dsub1_then_ssub
  { 0, 8 },	// dsub3_then_bsub
  { 0, 16 },	// dsub3_then_hsub
  { 0, 32 },	// dsub3_then_ssub
  { 0, 8 },	// dsub2_then_bsub
  { 0, 16 },	// dsub2_then_hsub
  { 0, 32 },	// dsub2_then_ssub
  { 0, 8 },	// qsub1_then_bsub
  { 0, 64 },	// qsub1_then_dsub
  { 0, 16 },	// qsub1_then_hsub
  { 0, 32 },	// qsub1_then_ssub
  { 0, 8 },	// qsub3_then_bsub
  { 0, 64 },	// qsub3_then_dsub
  { 0, 16 },	// qsub3_then_hsub
  { 0, 32 },	// qsub3_then_ssub
  { 0, 8 },	// qsub2_then_bsub
  { 0, 64 },	// qsub2_then_dsub
  { 0, 16 },	// qsub2_then_hsub
  { 0, 32 },	// qsub2_then_ssub
  { 448, 32 },	// x8sub_7_then_sub_32
  { 384, 32 },	// x8sub_6_then_sub_32
  { 320, 32 },	// x8sub_5_then_sub_32
  { 256, 32 },	// x8sub_4_then_sub_32
  { 192, 32 },	// x8sub_3_then_sub_32
  { 128, 32 },	// x8sub_2_then_sub_32
  { 64, 32 },	// x8sub_1_then_sub_32
  { 0, 32 },	// subo64_then_sub_32
  { 65535, 65535 },	// zsub1_then_bsub
  { 65535, 65535 },	// zsub1_then_dsub
  { 65535, 65535 },	// zsub1_then_hsub
  { 65535, 65535 },	// zsub1_then_ssub
  { 65535, 65535 },	// zsub1_then_zsub
  { 65535, 65535 },	// zsub1_then_zsub_hi
  { 65535, 65535 },	// zsub3_then_bsub
  { 65535, 65535 },	// zsub3_then_dsub
  { 65535, 65535 },	// zsub3_then_hsub
  { 65535, 65535 },	// zsub3_then_ssub
  { 65535, 65535 },	// zsub3_then_zsub
  { 65535, 65535 },	// zsub3_then_zsub_hi
  { 65535, 65535 },	// zsub2_then_bsub
  { 65535, 65535 },	// zsub2_then_dsub
  { 65535, 65535 },	// zsub2_then_hsub
  { 65535, 65535 },	// zsub2_then_ssub
  { 65535, 65535 },	// zsub2_then_zsub
  { 65535, 65535 },	// zsub2_then_zsub_hi
  { 65535, 128 },	// dsub0_dsub1
  { 65535, 192 },	// dsub0_dsub1_dsub2
  { 65535, 128 },	// dsub1_dsub2
  { 65535, 192 },	// dsub1_dsub2_dsub3
  { 65535, 128 },	// dsub2_dsub3
  { 65535, 128 },	// dsub_qsub1_then_dsub
  { 65535, 256 },	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  { 65535, 192 },	// dsub_qsub1_then_dsub_qsub2_then_dsub
  { 65535, 256 },	// qsub0_qsub1
  { 65535, 384 },	// qsub0_qsub1_qsub2
  { 65535, 256 },	// qsub1_qsub2
  { 65535, 384 },	// qsub1_qsub2_qsub3
  { 65535, 256 },	// qsub2_qsub3
  { 65535, 128 },	// qsub1_then_dsub_qsub2_then_dsub
  { 65535, 192 },	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  { 65535, 128 },	// qsub2_then_dsub_qsub3_then_dsub
  { 65535, 64 },	// sub_32_x8sub_1_then_sub_32
  { 0, 128 },	// x8sub_0_x8sub_1
  { 128, 128 },	// x8sub_2_x8sub_3
  { 256, 128 },	// x8sub_4_x8sub_5
  { 384, 128 },	// x8sub_6_x8sub_7
  { 65535, 64 },	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
  { 65535, 64 },	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
  { 65535, 64 },	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
  { 65535, 64 },	// sub_32_subo64_then_sub_32
  { 65535, 63 },	// dsub_zsub1_then_dsub
  { 65535, 127 },	// zsub_zsub1_then_zsub
  { 65535, 61 },	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
  { 65535, 62 },	// dsub_zsub1_then_dsub_zsub2_then_dsub
  { 65535, 125 },	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
  { 65535, 126 },	// zsub_zsub1_then_zsub_zsub2_then_zsub
  { 65535, 256 },	// zsub0_zsub1
  { 65535, 384 },	// zsub0_zsub1_zsub2
  { 65535, 256 },	// zsub1_zsub2
  { 65535, 384 },	// zsub1_zsub2_zsub3
  { 65535, 256 },	// zsub2_zsub3
  { 65535, 65534 },	// zsub1_then_dsub_zsub2_then_dsub
  { 65535, 65533 },	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
  { 65535, 65534 },	// zsub1_then_zsub_zsub2_then_zsub
  { 65535, 65533 },	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
  { 65535, 65534 },	// zsub2_then_dsub_zsub3_then_dsub
  { 65535, 65534 },	// zsub2_then_zsub_zsub3_then_zsub
};


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
extern const char AArch64RegStrings[] = {
  /* 0 */ "B10\0"
  /* 4 */ "D7_D8_D9_D10\0"
  /* 17 */ "H10\0"
  /* 21 */ "P10\0"
  /* 25 */ "ZAQ10\0"
  /* 31 */ "Q7_Q8_Q9_Q10\0"
  /* 44 */ "S10\0"
  /* 48 */ "W10\0"
  /* 52 */ "X10\0"
  /* 56 */ "Z7_Z8_Z9_Z10\0"
  /* 69 */ "B20\0"
  /* 73 */ "D17_D18_D19_D20\0"
  /* 89 */ "H20\0"
  /* 93 */ "Q17_Q18_Q19_Q20\0"
  /* 109 */ "S20\0"
  /* 113 */ "W20\0"
  /* 117 */ "X20\0"
  /* 121 */ "Z17_Z18_Z19_Z20\0"
  /* 137 */ "B30\0"
  /* 141 */ "D27_D28_D29_D30\0"
  /* 157 */ "H30\0"
  /* 161 */ "Q27_Q28_Q29_Q30\0"
  /* 177 */ "S30\0"
  /* 181 */ "W30\0"
  /* 185 */ "Z27_Z28_Z29_Z30\0"
  /* 201 */ "ZAB0\0"
  /* 206 */ "ZAD0\0"
  /* 211 */ "D29_D30_D31_D0\0"
  /* 226 */ "ZAH0\0"
  /* 231 */ "P0\0"
  /* 234 */ "ZAQ0\0"
  /* 239 */ "Q29_Q30_Q31_Q0\0"
  /* 254 */ "ZAS0\0"
  /* 259 */ "W0\0"
  /* 262 */ "X0\0"
  /* 265 */ "Z29_Z30_Z31_Z0\0"
  /* 280 */ "B11\0"
  /* 284 */ "D8_D9_D10_D11\0"
  /* 298 */ "H11\0"
  /* 302 */ "P11\0"
  /* 306 */ "ZAQ11\0"
  /* 312 */ "Q8_Q9_Q10_Q11\0"
  /* 326 */ "S11\0"
  /* 330 */ "W10_W11\0"
  /* 338 */ "X4_X5_X6_X7_X8_X9_X10_X11\0"
  /* 364 */ "Z8_Z9_Z10_Z11\0"
  /* 378 */ "B21\0"
  /* 382 */ "D18_D19_D20_D21\0"
  /* 398 */ "H21\0"
  /* 402 */ "Q18_Q19_Q20_Q21\0"
  /* 418 */ "S21\0"
  /* 422 */ "W20_W21\0"
  /* 430 */ "X14_X15_X16_X17_X18_X19_X20_X21\0"
  /* 462 */ "Z18_Z19_Z20_Z21\0"
  /* 478 */ "B31\0"
  /* 482 */ "D28_D29_D30_D31\0"
  /* 498 */ "H31\0"
  /* 502 */ "Q28_Q29_Q30_Q31\0"
  /* 518 */ "S31\0"
  /* 522 */ "Z28_Z29_Z30_Z31\0"
  /* 538 */ "B1\0"
  /* 541 */ "ZAD1\0"
  /* 546 */ "D30_D31_D0_D1\0"
  /* 560 */ "ZAH1\0"
  /* 565 */ "P1\0"
  /* 568 */ "ZAQ1\0"
  /* 573 */ "Q30_Q31_Q0_Q1\0"
  /* 587 */ "ZAS1\0"
  /* 592 */ "W0_W1\0"
  /* 598 */ "X0_X1\0"
  /* 604 */ "Z30_Z31_Z0_Z1\0"
  /* 618 */ "B12\0"
  /* 622 */ "D9_D10_D11_D12\0"
  /* 637 */ "H12\0"
  /* 641 */ "P12\0"
  /* 645 */ "ZAQ12\0"
  /* 651 */ "Q9_Q10_Q11_Q12\0"
  /* 666 */ "S12\0"
  /* 670 */ "W12\0"
  /* 674 */ "X12\0"
  /* 678 */ "Z9_Z10_Z11_Z12\0"
  /* 693 */ "B22\0"
  /* 697 */ "D19_D20_D21_D22\0"
  /* 713 */ "H22\0"
  /* 717 */ "Q19_Q20_Q21_Q22\0"
  /* 733 */ "S22\0"
  /* 737 */ "W22\0"
  /* 741 */ "X22\0"
  /* 745 */ "Z19_Z20_Z21_Z22\0"
  /* 761 */ "B2\0"
  /* 764 */ "ZAD2\0"
  /* 769 */ "D31_D0_D1_D2\0"
  /* 782 */ "H2\0"
  /* 785 */ "P2\0"
  /* 788 */ "ZAQ2\0"
  /* 793 */ "Q31_Q0_Q1_Q2\0"
  /* 806 */ "ZAS2\0"
  /* 811 */ "W2\0"
  /* 814 */ "X2\0"
  /* 817 */ "Z31_Z0_Z1_Z2\0"
  /* 830 */ "B13\0"
  /* 834 */ "D10_D11_D12_D13\0"
  /* 850 */ "H13\0"
  /* 854 */ "P13\0"
  /* 858 */ "ZAQ13\0"
  /* 864 */ "Q10_Q11_Q12_Q13\0"
  /* 880 */ "S13\0"
  /* 884 */ "W12_W13\0"
  /* 892 */ "X6_X7_X8_X9_X10_X11_X12_X13\0"
  /* 920 */ "Z10_Z11_Z12_Z13\0"
  /* 936 */ "B23\0"
  /* 940 */ "D20_D21_D22_D23\0"
  /* 956 */ "H23\0"
  /* 960 */ "Q20_Q21_Q22_Q23\0"
  /* 976 */ "S23\0"
  /* 980 */ "W22_W23\0"
  /* 988 */ "X16_X17_X18_X19_X20_X21_X22_X23\0"
  /* 1020 */ "Z20_Z21_Z22_Z23\0"
  /* 1036 */ "B3\0"
  /* 1039 */ "ZAD3\0"
  /* 1044 */ "D0_D1_D2_D3\0"
  /* 1056 */ "H3\0"
  /* 1059 */ "P3\0"
  /* 1062 */ "ZAQ3\0"
  /* 1067 */ "Q0_Q1_Q2_Q3\0"
  /* 1079 */ "ZAS3\0"
  /* 1084 */ "W2_W3\0"
  /* 1090 */ "X2_X3\0"
  /* 1096 */ "Z0_Z1_Z2_Z3\0"
  /* 1108 */ "B14\0"
  /* 1112 */ "D11_D12_D13_D14\0"
  /* 1128 */ "H14\0"
  /* 1132 */ "P14\0"
  /* 1136 */ "ZAQ14\0"
  /* 1142 */ "Q11_Q12_Q13_Q14\0"
  /* 1158 */ "S14\0"
  /* 1162 */ "W14\0"
  /* 1166 */ "X14\0"
  /* 1170 */ "Z11_Z12_Z13_Z14\0"
  /* 1186 */ "B24\0"
  /* 1190 */ "D21_D22_D23_D24\0"
  /* 1206 */ "H24\0"
  /* 1210 */ "Q21_Q22_Q23_Q24\0"
  /* 1226 */ "S24\0"
  /* 1230 */ "W24\0"
  /* 1234 */ "X24\0"
  /* 1238 */ "Z21_Z22_Z23_Z24\0"
  /* 1254 */ "B4\0"
  /* 1257 */ "ZAD4\0"
  /* 1262 */ "D1_D2_D3_D4\0"
  /* 1274 */ "H4\0"
  /* 1277 */ "P4\0"
  /* 1280 */ "ZAQ4\0"
  /* 1285 */ "Q1_Q2_Q3_Q4\0"
  /* 1297 */ "S4\0"
  /* 1300 */ "W4\0"
  /* 1303 */ "X4\0"
  /* 1306 */ "Z1_Z2_Z3_Z4\0"
  /* 1318 */ "B15\0"
  /* 1322 */ "D12_D13_D14_D15\0"
  /* 1338 */ "H15\0"
  /* 1342 */ "P15\0"
  /* 1346 */ "ZAQ15\0"
  /* 1352 */ "Q12_Q13_Q14_Q15\0"
  /* 1368 */ "S15\0"
  /* 1372 */ "W14_W15\0"
  /* 1380 */ "X8_X9_X10_X11_X12_X13_X14_X15\0"
  /* 1410 */ "Z12_Z13_Z14_Z15\0"
  /* 1426 */ "B25\0"
  /* 1430 */ "D22_D23_D24_D25\0"
  /* 1446 */ "H25\0"
  /* 1450 */ "Q22_Q23_Q24_Q25\0"
  /* 1466 */ "S25\0"
  /* 1470 */ "W24_W25\0"
  /* 1478 */ "X18_X19_X20_X21_X22_X23_X24_X25\0"
  /* 1510 */ "Z22_Z23_Z24_Z25\0"
  /* 1526 */ "B5\0"
  /* 1529 */ "ZAD5\0"
  /* 1534 */ "D2_D3_D4_D5\0"
  /* 1546 */ "H5\0"
  /* 1549 */ "P5\0"
  /* 1552 */ "ZAQ5\0"
  /* 1557 */ "Q2_Q3_Q4_Q5\0"
  /* 1569 */ "S5\0"
  /* 1572 */ "W4_W5\0"
  /* 1578 */ "X4_X5\0"
  /* 1584 */ "Z2_Z3_Z4_Z5\0"
  /* 1596 */ "B16\0"
  /* 1600 */ "D13_D14_D15_D16\0"
  /* 1616 */ "H16\0"
  /* 1620 */ "Q13_Q14_Q15_Q16\0"
  /* 1636 */ "S16\0"
  /* 1640 */ "W16\0"
  /* 1644 */ "X16\0"
  /* 1648 */ "Z13_Z14_Z15_Z16\0"
  /* 1664 */ "B26\0"
  /* 1668 */ "D23_D24_D25_D26\0"
  /* 1684 */ "H26\0"
  /* 1688 */ "Q23_Q24_Q25_Q26\0"
  /* 1704 */ "S26\0"
  /* 1708 */ "W26\0"
  /* 1712 */ "X26\0"
  /* 1716 */ "Z23_Z24_Z25_Z26\0"
  /* 1732 */ "B6\0"
  /* 1735 */ "ZAD6\0"
  /* 1740 */ "D3_D4_D5_D6\0"
  /* 1752 */ "H6\0"
  /* 1755 */ "P6\0"
  /* 1758 */ "ZAQ6\0"
  /* 1763 */ "Q3_Q4_Q5_Q6\0"
  /* 1775 */ "S6\0"
  /* 1778 */ "W6\0"
  /* 1781 */ "X6\0"
  /* 1784 */ "Z3_Z4_Z5_Z6\0"
  /* 1796 */ "B17\0"
  /* 1800 */ "D14_D15_D16_D17\0"
  /* 1816 */ "H17\0"
  /* 1820 */ "Q14_Q15_Q16_Q17\0"
  /* 1836 */ "S17\0"
  /* 1840 */ "W16_W17\0"
  /* 1848 */ "X10_X11_X12_X13_X14_X15_X16_X17\0"
  /* 1880 */ "Z14_Z15_Z16_Z17\0"
  /* 1896 */ "B27\0"
  /* 1900 */ "D24_D25_D26_D27\0"
  /* 1916 */ "H27\0"
  /* 1920 */ "Q24_Q25_Q26_Q27\0"
  /* 1936 */ "S27\0"
  /* 1940 */ "W26_W27\0"
  /* 1948 */ "X20_X21_X22_X23_X24_X25_X26_X27\0"
  /* 1980 */ "Z24_Z25_Z26_Z27\0"
  /* 1996 */ "B7\0"
  /* 1999 */ "ZAD7\0"
  /* 2004 */ "D4_D5_D6_D7\0"
  /* 2016 */ "H7\0"
  /* 2019 */ "P7\0"
  /* 2022 */ "ZAQ7\0"
  /* 2027 */ "Q4_Q5_Q6_Q7\0"
  /* 2039 */ "S7\0"
  /* 2042 */ "W6_W7\0"
  /* 2048 */ "X0_X1_X2_X3_X4_X5_X6_X7\0"
  /* 2072 */ "Z4_Z5_Z6_Z7\0"
  /* 2084 */ "B18\0"
  /* 2088 */ "D15_D16_D17_D18\0"
  /* 2104 */ "H18\0"
  /* 2108 */ "Q15_Q16_Q17_Q18\0"
  /* 2124 */ "S18\0"
  /* 2128 */ "W18\0"
  /* 2132 */ "X18\0"
  /* 2136 */ "Z15_Z16_Z17_Z18\0"
  /* 2152 */ "B28\0"
  /* 2156 */ "D25_D26_D27_D28\0"
  /* 2172 */ "H28\0"
  /* 2176 */ "Q25_Q26_Q27_Q28\0"
  /* 2192 */ "S28\0"
  /* 2196 */ "W28\0"
  /* 2200 */ "X28\0"
  /* 2204 */ "Z25_Z26_Z27_Z28\0"
  /* 2220 */ "B8\0"
  /* 2223 */ "D5_D6_D7_D8\0"
  /* 2235 */ "H8\0"
  /* 2238 */ "P8\0"
  /* 2241 */ "ZAQ8\0"
  /* 2246 */ "Q5_Q6_Q7_Q8\0"
  /* 2258 */ "S8\0"
  /* 2261 */ "W8\0"
  /* 2264 */ "X8\0"
  /* 2267 */ "Z5_Z6_Z7_Z8\0"
  /* 2279 */ "B19\0"
  /* 2283 */ "D16_D17_D18_D19\0"
  /* 2299 */ "H19\0"
  /* 2303 */ "Q16_Q17_Q18_Q19\0"
  /* 2319 */ "S19\0"
  /* 2323 */ "W18_W19\0"
  /* 2331 */ "X12_X13_X14_X15_X16_X17_X18_X19\0"
  /* 2363 */ "Z16_Z17_Z18_Z19\0"
  /* 2379 */ "B29\0"
  /* 2383 */ "D26_D27_D28_D29\0"
  /* 2399 */ "H29\0"
  /* 2403 */ "Q26_Q27_Q28_Q29\0"
  /* 2419 */ "S29\0"
  /* 2423 */ "W28_W29\0"
  /* 2431 */ "Z26_Z27_Z28_Z29\0"
  /* 2447 */ "B9\0"
  /* 2450 */ "D6_D7_D8_D9\0"
  /* 2462 */ "H9\0"
  /* 2465 */ "P9\0"
  /* 2468 */ "ZAQ9\0"
  /* 2473 */ "Q6_Q7_Q8_Q9\0"
  /* 2485 */ "S9\0"
  /* 2488 */ "W8_W9\0"
  /* 2494 */ "X2_X3_X4_X5_X6_X7_X8_X9\0"
  /* 2518 */ "Z6_Z7_Z8_Z9\0"
  /* 2530 */ "ZA\0"
  /* 2533 */ "VG\0"
  /* 2536 */ "Z10_HI\0"
  /* 2543 */ "Z20_HI\0"
  /* 2550 */ "Z30_HI\0"
  /* 2557 */ "Z0_HI\0"
  /* 2563 */ "Z11_HI\0"
  /* 2570 */ "Z21_HI\0"
  /* 2577 */ "Z31_HI\0"
  /* 2584 */ "Z1_HI\0"
  /* 2590 */ "Z12_HI\0"
  /* 2597 */ "Z22_HI\0"
  /* 2604 */ "Z2_HI\0"
  /* 2610 */ "Z13_HI\0"
  /* 2617 */ "Z23_HI\0"
  /* 2624 */ "Z3_HI\0"
  /* 2630 */ "Z14_HI\0"
  /* 2637 */ "Z24_HI\0"
  /* 2644 */ "Z4_HI\0"
  /* 2650 */ "Z15_HI\0"
  /* 2657 */ "Z25_HI\0"
  /* 2664 */ "Z5_HI\0"
  /* 2670 */ "Z16_HI\0"
  /* 2677 */ "Z26_HI\0"
  /* 2684 */ "Z6_HI\0"
  /* 2690 */ "Z17_HI\0"
  /* 2697 */ "Z27_HI\0"
  /* 2704 */ "Z7_HI\0"
  /* 2710 */ "Z18_HI\0"
  /* 2717 */ "Z28_HI\0"
  /* 2724 */ "Z8_HI\0"
  /* 2730 */ "Z19_HI\0"
  /* 2737 */ "Z29_HI\0"
  /* 2744 */ "Z9_HI\0"
  /* 2750 */ "X22_X23_X24_X25_X26_X27_X28_FP\0"
  /* 2781 */ "WSP\0"
  /* 2785 */ "FFR\0"
  /* 2789 */ "LR\0"
  /* 2792 */ "W30_WZR\0"
  /* 2800 */ "LR_XZR\0"
  /* 2807 */ "NZCV\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

extern const MCRegisterDesc AArch64RegDesc[] = { // Descriptors
  { 3, 0, 0, 0, 0, 0 },
  { 2785, 16, 16, 4, 29537, 0 },
  { 2778, 1206, 1814, 5, 29537, 27 },
  { 2789, 1206, 1337, 5, 29537, 27 },
  { 2807, 16, 16, 4, 29537, 0 },
  { 2782, 690, 16, 5, 29537, 27 },
  { 2533, 16, 16, 4, 29537, 0 },
  { 2781, 16, 1821, 4, 29106, 0 },
  { 2796, 16, 754, 4, 11168, 0 },
  { 2803, 1846, 1335, 5, 11168, 27 },
  { 2530, 700, 16, 42, 0, 76 },
  { 203, 16, 497, 4, 12033, 0 },
  { 538, 16, 579, 4, 12033, 0 },
  { 761, 16, 776, 4, 12033, 0 },
  { 1036, 16, 433, 4, 12033, 0 },
  { 1254, 16, 433, 4, 12033, 0 },
  { 1526, 16, 433, 4, 12033, 0 },
  { 1732, 16, 433, 4, 12033, 0 },
  { 1996, 16, 433, 4, 12033, 0 },
  { 2220, 16, 433, 4, 12033, 0 },
  { 2447, 16, 433, 4, 12033, 0 },
  { 0, 16, 433, 4, 12033, 0 },
  { 280, 16, 433, 4, 12033, 0 },
  { 618, 16, 433, 4, 12033, 0 },
  { 830, 16, 433, 4, 12033, 0 },
  { 1108, 16, 433, 4, 12033, 0 },
  { 1318, 16, 433, 4, 12033, 0 },
  { 1596, 16, 433, 4, 12033, 0 },
  { 1796, 16, 433, 4, 12033, 0 },
  { 2084, 16, 433, 4, 12033, 0 },
  { 2279, 16, 433, 4, 12033, 0 },
  { 69, 16, 433, 4, 12033, 0 },
  { 378, 16, 433, 4, 12033, 0 },
  { 693, 16, 433, 4, 12033, 0 },
  { 936, 16, 433, 4, 12033, 0 },
  { 1186, 16, 433, 4, 12033, 0 },
  { 1426, 16, 433, 4, 12033, 0 },
  { 1664, 16, 433, 4, 12033, 0 },
  { 1896, 16, 433, 4, 12033, 0 },
  { 2152, 16, 433, 4, 12033, 0 },
  { 2379, 16, 433, 4, 12033, 0 },
  { 137, 16, 433, 4, 12033, 0 },
  { 478, 16, 433, 4, 12033, 0 },
  { 208, 1588, 500, 1, 29073, 3 },
  { 543, 1588, 582, 1, 29073, 3 },
  { 766, 1588, 779, 1, 29073, 3 },
  { 1041, 1588, 436, 1, 29073, 3 },
  { 1259, 1588, 436, 1, 29073, 3 },
  { 1531, 1588, 436, 1, 29073, 3 },
  { 1737, 1588, 436, 1, 29073, 3 },
  { 2001, 1588, 436, 1, 29073, 3 },
  { 2232, 1588, 436, 1, 29073, 3 },
  { 2459, 1588, 436, 1, 29073, 3 },
  { 13, 1588, 436, 1, 29073, 3 },
  { 294, 1588, 436, 1, 29073, 3 },
  { 633, 1588, 436, 1, 29073, 3 },
  { 846, 1588, 436, 1, 29073, 3 },
  { 1124, 1588, 436, 1, 29073, 3 },
  { 1334, 1588, 436, 1, 29073, 3 },
  { 1612, 1588, 436, 1, 29073, 3 },
  { 1812, 1588, 436, 1, 29073, 3 },
  { 2100, 1588, 436, 1, 29073, 3 },
  { 2295, 1588, 436, 1, 29073, 3 },
  { 85, 1588, 436, 1, 29073, 3 },
  { 394, 1588, 436, 1, 29073, 3 },
  { 709, 1588, 436, 1, 29073, 3 },
  { 952, 1588, 436, 1, 29073, 3 },
  { 1202, 1588, 436, 1, 29073, 3 },
  { 1442, 1588, 436, 1, 29073, 3 },
  { 1680, 1588, 436, 1, 29073, 3 },
  { 1912, 1588, 436, 1, 29073, 3 },
  { 2168, 1588, 436, 1, 29073, 3 },
  { 2395, 1588, 436, 1, 29073, 3 },
  { 153, 1588, 436, 1, 29073, 3 },
  { 494, 1588, 436, 1, 29073, 3 },
  { 228, 1590, 498, 3, 28289, 3 },
  { 562, 1590, 580, 3, 28289, 3 },
  { 782, 1590, 777, 3, 28289, 3 },
  { 1056, 1590, 434, 3, 28289, 3 },
  { 1274, 1590, 434, 3, 28289, 3 },
  { 1546, 1590, 434, 3, 28289, 3 },
  { 1752, 1590, 434, 3, 28289, 3 },
  { 2016, 1590, 434, 3, 28289, 3 },
  { 2235, 1590, 434, 3, 28289, 3 },
  { 2462, 1590, 434, 3, 28289, 3 },
  { 17, 1590, 434, 3, 28289, 3 },
  { 298, 1590, 434, 3, 28289, 3 },
  { 637, 1590, 434, 3, 28289, 3 },
  { 850, 1590, 434, 3, 28289, 3 },
  { 1128, 1590, 434, 3, 28289, 3 },
  { 1338, 1590, 434, 3, 28289, 3 },
  { 1616, 1590, 434, 3, 28289, 3 },
  { 1816, 1590, 434, 3, 28289, 3 },
  { 2104, 1590, 434, 3, 28289, 3 },
  { 2299, 1590, 434, 3, 28289, 3 },
  { 89, 1590, 434, 3, 28289, 3 },
  { 398, 1590, 434, 3, 28289, 3 },
  { 713, 1590, 434, 3, 28289, 3 },
  { 956, 1590, 434, 3, 28289, 3 },
  { 1206, 1590, 434, 3, 28289, 3 },
  { 1446, 1590, 434, 3, 28289, 3 },
  { 1684, 1590, 434, 3, 28289, 3 },
  { 1916, 1590, 434, 3, 28289, 3 },
  { 2172, 1590, 434, 3, 28289, 3 },
  { 2399, 1590, 434, 3, 28289, 3 },
  { 157, 1590, 434, 3, 28289, 3 },
  { 498, 1590, 434, 3, 28289, 3 },
  { 231, 16, 16, 4, 28289, 0 },
  { 565, 16, 16, 4, 28289, 0 },
  { 785, 16, 16, 4, 28289, 0 },
  { 1059, 16, 16, 4, 28289, 0 },
  { 1277, 16, 16, 4, 28289, 0 },
  { 1549, 16, 16, 4, 28289, 0 },
  { 1755, 16, 16, 4, 28289, 0 },
  { 2019, 16, 16, 4, 28289, 0 },
  { 2238, 16, 16, 4, 28289, 0 },
  { 2465, 16, 16, 4, 28289, 0 },
  { 21, 16, 16, 4, 28289, 0 },
  { 302, 16, 16, 4, 28289, 0 },
  { 641, 16, 16, 4, 28289, 0 },
  { 854, 16, 16, 4, 28289, 0 },
  { 1132, 16, 16, 4, 28289, 0 },
  { 1342, 16, 16, 4, 28289, 0 },
  { 236, 1601, 530, 0, 23425, 3 },
  { 570, 1601, 612, 0, 23425, 3 },
  { 790, 1601, 809, 0, 23425, 3 },
  { 1064, 1601, 466, 0, 23425, 3 },
  { 1282, 1601, 466, 0, 23425, 3 },
  { 1554, 1601, 466, 0, 23425, 3 },
  { 1760, 1601, 466, 0, 23425, 3 },
  { 2024, 1601, 466, 0, 23425, 3 },
  { 2243, 1601, 466, 0, 23425, 3 },
  { 2470, 1601, 466, 0, 23425, 3 },
  { 27, 1601, 466, 0, 23425, 3 },
  { 308, 1601, 466, 0, 23425, 3 },
  { 647, 1601, 466, 0, 23425, 3 },
  { 860, 1601, 466, 0, 23425, 3 },
  { 1138, 1601, 466, 0, 23425, 3 },
  { 1348, 1601, 466, 0, 23425, 3 },
  { 1632, 1601, 466, 0, 23425, 3 },
  { 1832, 1601, 466, 0, 23425, 3 },
  { 2120, 1601, 466, 0, 23425, 3 },
  { 2315, 1601, 466, 0, 23425, 3 },
  { 105, 1601, 466, 0, 23425, 3 },
  { 414, 1601, 466, 0, 23425, 3 },
  { 729, 1601, 466, 0, 23425, 3 },
  { 972, 1601, 466, 0, 23425, 3 },
  { 1222, 1601, 466, 0, 23425, 3 },
  { 1462, 1601, 466, 0, 23425, 3 },
  { 1700, 1601, 466, 0, 23425, 3 },
  { 1932, 1601, 466, 0, 23425, 3 },
  { 2188, 1601, 466, 0, 23425, 3 },
  { 2415, 1601, 466, 0, 23425, 3 },
  { 173, 1601, 466, 0, 23425, 3 },
  { 514, 1601, 466, 0, 23425, 3 },
  { 256, 1589, 499, 2, 23361, 3 },
  { 589, 1589, 581, 2, 23361, 3 },
  { 808, 1589, 778, 2, 23361, 3 },
  { 1081, 1589, 435, 2, 23361, 3 },
  { 1297, 1589, 435, 2, 23361, 3 },
  { 1569, 1589, 435, 2, 23361, 3 },
  { 1775, 1589, 435, 2, 23361, 3 },
  { 2039, 1589, 435, 2, 23361, 3 },
  { 2258, 1589, 435, 2, 23361, 3 },
  { 2485, 1589, 435, 2, 23361, 3 },
  { 44, 1589, 435, 2, 23361, 3 },
  { 326, 1589, 435, 2, 23361, 3 },
  { 666, 1589, 435, 2, 23361, 3 },
  { 880, 1589, 435, 2, 23361, 3 },
  { 1158, 1589, 435, 2, 23361, 3 },
  { 1368, 1589, 435, 2, 23361, 3 },
  { 1636, 1589, 435, 2, 23361, 3 },
  { 1836, 1589, 435, 2, 23361, 3 },
  { 2124, 1589, 435, 2, 23361, 3 },
  { 2319, 1589, 435, 2, 23361, 3 },
  { 109, 1589, 435, 2, 23361, 3 },
  { 418, 1589, 435, 2, 23361, 3 },
  { 733, 1589, 435, 2, 23361, 3 },
  { 976, 1589, 435, 2, 23361, 3 },
  { 1226, 1589, 435, 2, 23361, 3 },
  { 1466, 1589, 435, 2, 23361, 3 },
  { 1704, 1589, 435, 2, 23361, 3 },
  { 1936, 1589, 435, 2, 23361, 3 },
  { 2192, 1589, 435, 2, 23361, 3 },
  { 2419, 1589, 435, 2, 23361, 3 },
  { 177, 1589, 435, 2, 23361, 3 },
  { 518, 1589, 435, 2, 23361, 3 },
  { 259, 16, 1800, 4, 23393, 0 },
  { 595, 16, 1795, 4, 23393, 0 },
  { 811, 16, 676, 4, 23393, 0 },
  { 1087, 16, 670, 4, 23393, 0 },
  { 1300, 16, 263, 4, 23393, 0 },
  { 1575, 16, 256, 4, 23393, 0 },
  { 1778, 16, 137, 4, 23393, 0 },
  { 2045, 16, 129, 4, 23393, 0 },
  { 2261, 16, 129, 4, 23393, 0 },
  { 2491, 16, 121, 4, 23393, 0 },
  { 48, 16, 121, 4, 23393, 0 },
  { 334, 16, 113, 4, 23393, 0 },
  { 670, 16, 113, 4, 23393, 0 },
  { 888, 16, 105, 4, 23393, 0 },
  { 1162, 16, 105, 4, 23393, 0 },
  { 1376, 16, 97, 4, 23393, 0 },
  { 1640, 16, 97, 4, 23393, 0 },
  { 1844, 16, 89, 4, 23393, 0 },
  { 2128, 16, 89, 4, 23393, 0 },
  { 2327, 16, 81, 4, 23393, 0 },
  { 113, 16, 81, 4, 23393, 0 },
  { 426, 16, 73, 4, 23393, 0 },
  { 737, 16, 207, 4, 23393, 0 },
  { 984, 16, 199, 4, 23393, 0 },
  { 1230, 16, 287, 4, 23393, 0 },
  { 1474, 16, 280, 4, 23393, 0 },
  { 1708, 16, 738, 4, 23393, 0 },
  { 1944, 16, 732, 4, 23393, 0 },
  { 2196, 16, 1785, 4, 23393, 0 },
  { 2427, 16, 1790, 4, 23217, 0 },
  { 181, 16, 758, 4, 23217, 0 },
  { 262, 1783, 1811, 5, 23329, 27 },
  { 601, 1783, 1808, 5, 23329, 27 },
  { 814, 1783, 686, 5, 23329, 27 },
  { 1093, 1783, 682, 5, 23329, 27 },
  { 1303, 1783, 275, 5, 23329, 27 },
  { 1581, 1783, 270, 5, 23329, 27 },
  { 1781, 1783, 193, 5, 23329, 27 },
  { 2069, 1783, 187, 5, 23329, 27 },
  { 2264, 1783, 187, 5, 23329, 27 },
  { 2515, 1783, 181, 5, 23329, 27 },
  { 52, 1783, 181, 5, 23329, 27 },
  { 360, 1783, 175, 5, 23329, 27 },
  { 674, 1783, 175, 5, 23329, 27 },
  { 916, 1783, 169, 5, 23329, 27 },
  { 1166, 1783, 169, 5, 23329, 27 },
  { 1406, 1783, 163, 5, 23329, 27 },
  { 1644, 1783, 163, 5, 23329, 27 },
  { 1876, 1783, 157, 5, 23329, 27 },
  { 2132, 1783, 157, 5, 23329, 27 },
  { 2359, 1783, 151, 5, 23329, 27 },
  { 117, 1783, 151, 5, 23329, 27 },
  { 458, 1783, 145, 5, 23329, 27 },
  { 741, 1783, 221, 5, 23329, 27 },
  { 1016, 1783, 215, 5, 23329, 27 },
  { 1234, 1783, 299, 5, 23329, 27 },
  { 1506, 1783, 294, 5, 23329, 27 },
  { 1712, 1783, 748, 5, 23329, 27 },
  { 1976, 1783, 744, 5, 23329, 27 },
  { 2200, 1783, 1805, 5, 23329, 27 },
  { 277, 1208, 551, 13, 14177, 38 },
  { 615, 1208, 633, 13, 14177, 38 },
  { 827, 1208, 830, 13, 14177, 38 },
  { 1105, 1208, 487, 13, 14177, 38 },
  { 1315, 1208, 487, 13, 14177, 38 },
  { 1593, 1208, 487, 13, 14177, 38 },
  { 1793, 1208, 487, 13, 14177, 38 },
  { 2081, 1208, 487, 13, 14177, 38 },
  { 2276, 1208, 487, 13, 14177, 38 },
  { 2527, 1208, 487, 13, 14177, 38 },
  { 65, 1208, 487, 13, 14177, 38 },
  { 374, 1208, 487, 13, 14177, 38 },
  { 689, 1208, 487, 13, 14177, 38 },
  { 932, 1208, 487, 13, 14177, 38 },
  { 1182, 1208, 487, 13, 14177, 38 },
  { 1422, 1208, 487, 13, 14177, 38 },
  { 1660, 1208, 487, 13, 14177, 38 },
  { 1892, 1208, 487, 13, 14177, 38 },
  { 2148, 1208, 487, 13, 14177, 38 },
  { 2375, 1208, 487, 13, 14177, 38 },
  { 133, 1208, 487, 13, 14177, 38 },
  { 474, 1208, 487, 13, 14177, 38 },
  { 757, 1208, 487, 13, 14177, 38 },
  { 1032, 1208, 487, 13, 14177, 38 },
  { 1250, 1208, 487, 13, 14177, 38 },
  { 1522, 1208, 487, 13, 14177, 38 },
  { 1728, 1208, 487, 13, 14177, 38 },
  { 1992, 1208, 487, 13, 14177, 38 },
  { 2216, 1208, 487, 13, 14177, 38 },
  { 2443, 1208, 487, 13, 14177, 38 },
  { 197, 1208, 487, 13, 14177, 38 },
  { 534, 1208, 487, 13, 14177, 38 },
  { 201, 701, 1359, 43, 0, 76 },
  { 206, 729, 1440, 10, 5976, 35 },
  { 541, 729, 1392, 10, 5976, 35 },
  { 764, 729, 1416, 10, 5928, 35 },
  { 1039, 729, 1368, 10, 5928, 35 },
  { 1257, 729, 1428, 10, 5880, 35 },
  { 1529, 729, 1380, 10, 5880, 35 },
  { 1735, 729, 1404, 10, 5832, 35 },
  { 1999, 729, 1356, 10, 5832, 35 },
  { 226, 717, 1406, 27, 280, 67 },
  { 560, 717, 1358, 27, 280, 67 },
  { 234, 16, 1445, 4, 21656, 0 },
  { 568, 16, 1397, 4, 21656, 0 },
  { 788, 16, 1421, 4, 21624, 0 },
  { 1062, 16, 1373, 4, 21624, 0 },
  { 1280, 16, 1433, 4, 21592, 0 },
  { 1552, 16, 1385, 4, 21592, 0 },
  { 1758, 16, 1409, 4, 21560, 0 },
  { 2022, 16, 1361, 4, 21560, 0 },
  { 2241, 16, 1439, 4, 21528, 0 },
  { 2468, 16, 1391, 4, 21528, 0 },
  { 25, 16, 1415, 4, 21496, 0 },
  { 306, 16, 1367, 4, 21496, 0 },
  { 645, 16, 1427, 4, 21464, 0 },
  { 858, 16, 1379, 4, 21464, 0 },
  { 1136, 16, 1403, 4, 21432, 0 },
  { 1346, 16, 1355, 4, 21432, 0 },
  { 254, 725, 1429, 20, 936, 62 },
  { 587, 725, 1381, 20, 936, 62 },
  { 806, 725, 1405, 20, 856, 62 },
  { 1079, 725, 1357, 20, 856, 62 },
  { 2557, 16, 550, 4, 23249, 0 },
  { 2584, 16, 632, 4, 23249, 0 },
  { 2604, 16, 829, 4, 23249, 0 },
  { 2624, 16, 486, 4, 23249, 0 },
  { 2644, 16, 486, 4, 23249, 0 },
  { 2664, 16, 486, 4, 23249, 0 },
  { 2684, 16, 486, 4, 23249, 0 },
  { 2704, 16, 486, 4, 23249, 0 },
  { 2724, 16, 486, 4, 23249, 0 },
  { 2744, 16, 486, 4, 23249, 0 },
  { 2536, 16, 486, 4, 23249, 0 },
  { 2563, 16, 486, 4, 23249, 0 },
  { 2590, 16, 486, 4, 23249, 0 },
  { 2610, 16, 486, 4, 23249, 0 },
  { 2630, 16, 486, 4, 23249, 0 },
  { 2650, 16, 486, 4, 23249, 0 },
  { 2670, 16, 486, 4, 23249, 0 },
  { 2690, 16, 486, 4, 23249, 0 },
  { 2710, 16, 486, 4, 23249, 0 },
  { 2730, 16, 486, 4, 23249, 0 },
  { 2543, 16, 486, 4, 23249, 0 },
  { 2570, 16, 486, 4, 23249, 0 },
  { 2597, 16, 486, 4, 23249, 0 },
  { 2617, 16, 486, 4, 23249, 0 },
  { 2637, 16, 486, 4, 23249, 0 },
  { 2657, 16, 486, 4, 23249, 0 },
  { 2677, 16, 486, 4, 23249, 0 },
  { 2697, 16, 486, 4, 23249, 0 },
  { 2717, 16, 486, 4, 23249, 0 },
  { 2737, 16, 486, 4, 23249, 0 },
  { 2550, 16, 486, 4, 23249, 0 },
  { 2577, 16, 486, 4, 23249, 0 },
  { 554, 1592, 643, 74, 6881, 95 },
  { 776, 1592, 851, 74, 6881, 95 },
  { 1050, 1592, 561, 74, 6881, 95 },
  { 1268, 1592, 561, 74, 6881, 95 },
  { 1540, 1592, 561, 74, 6881, 95 },
  { 1746, 1592, 561, 74, 6881, 95 },
  { 2010, 1592, 561, 74, 6881, 95 },
  { 2229, 1592, 561, 74, 6881, 95 },
  { 2456, 1592, 561, 74, 6881, 95 },
  { 10, 1592, 561, 74, 6881, 95 },
  { 290, 1592, 561, 74, 6881, 95 },
  { 629, 1592, 561, 74, 6881, 95 },
  { 842, 1592, 561, 74, 6881, 95 },
  { 1120, 1592, 561, 74, 6881, 95 },
  { 1330, 1592, 561, 74, 6881, 95 },
  { 1608, 1592, 561, 74, 6881, 95 },
  { 1808, 1592, 561, 74, 6881, 95 },
  { 2096, 1592, 561, 74, 6881, 95 },
  { 2291, 1592, 561, 74, 6881, 95 },
  { 81, 1592, 561, 74, 6881, 95 },
  { 390, 1592, 561, 74, 6881, 95 },
  { 705, 1592, 561, 74, 6881, 95 },
  { 948, 1592, 561, 74, 6881, 95 },
  { 1198, 1592, 561, 74, 6881, 95 },
  { 1438, 1592, 561, 74, 6881, 95 },
  { 1676, 1592, 561, 74, 6881, 95 },
  { 1908, 1592, 561, 74, 6881, 95 },
  { 2164, 1592, 561, 74, 6881, 95 },
  { 2391, 1592, 561, 74, 6881, 95 },
  { 149, 1592, 561, 74, 6881, 95 },
  { 490, 1592, 561, 74, 6881, 95 },
  { 219, 1583, 561, 74, 13904, 2 },
  { 1044, 1724, 1203, 98, 1089, 102 },
  { 1262, 1724, 1203, 98, 1089, 102 },
  { 1534, 1724, 1203, 98, 1089, 102 },
  { 1740, 1724, 1203, 98, 1089, 102 },
  { 2004, 1724, 1203, 98, 1089, 102 },
  { 2223, 1724, 1203, 98, 1089, 102 },
  { 2450, 1724, 1203, 98, 1089, 102 },
  { 4, 1724, 1203, 98, 1089, 102 },
  { 284, 1724, 1203, 98, 1089, 102 },
  { 622, 1724, 1203, 98, 1089, 102 },
  { 834, 1724, 1203, 98, 1089, 102 },
  { 1112, 1724, 1203, 98, 1089, 102 },
  { 1322, 1724, 1203, 98, 1089, 102 },
  { 1600, 1724, 1203, 98, 1089, 102 },
  { 1800, 1724, 1203, 98, 1089, 102 },
  { 2088, 1724, 1203, 98, 1089, 102 },
  { 2283, 1724, 1203, 98, 1089, 102 },
  { 73, 1724, 1203, 98, 1089, 102 },
  { 382, 1724, 1203, 98, 1089, 102 },
  { 697, 1724, 1203, 98, 1089, 102 },
  { 940, 1724, 1203, 98, 1089, 102 },
  { 1190, 1724, 1203, 98, 1089, 102 },
  { 1430, 1724, 1203, 98, 1089, 102 },
  { 1668, 1724, 1203, 98, 1089, 102 },
  { 1900, 1724, 1203, 98, 1089, 102 },
  { 2156, 1724, 1203, 98, 1089, 102 },
  { 2383, 1724, 1203, 98, 1089, 102 },
  { 141, 1724, 1203, 98, 1089, 102 },
  { 482, 1724, 1203, 98, 1089, 102 },
  { 211, 1746, 1203, 98, 3632, 107 },
  { 546, 1561, 1203, 98, 4864, 93 },
  { 769, 1702, 1203, 98, 12192, 5 },
  { 773, 334, 877, 83, 4033, 108 },
  { 1047, 334, 661, 83, 4033, 108 },
  { 1265, 334, 661, 83, 4033, 108 },
  { 1537, 334, 661, 83, 4033, 108 },
  { 1743, 334, 661, 83, 4033, 108 },
  { 2007, 334, 661, 83, 4033, 108 },
  { 2226, 334, 661, 83, 4033, 108 },
  { 2453, 334, 661, 83, 4033, 108 },
  { 7, 334, 661, 83, 4033, 108 },
  { 287, 334, 661, 83, 4033, 108 },
  { 625, 334, 661, 83, 4033, 108 },
  { 838, 334, 661, 83, 4033, 108 },
  { 1116, 334, 661, 83, 4033, 108 },
  { 1326, 334, 661, 83, 4033, 108 },
  { 1604, 334, 661, 83, 4033, 108 },
  { 1804, 334, 661, 83, 4033, 108 },
  { 2092, 334, 661, 83, 4033, 108 },
  { 2287, 334, 661, 83, 4033, 108 },
  { 77, 334, 661, 83, 4033, 108 },
  { 386, 334, 661, 83, 4033, 108 },
  { 701, 334, 661, 83, 4033, 108 },
  { 944, 334, 661, 83, 4033, 108 },
  { 1194, 334, 661, 83, 4033, 108 },
  { 1434, 334, 661, 83, 4033, 108 },
  { 1672, 334, 661, 83, 4033, 108 },
  { 1904, 334, 661, 83, 4033, 108 },
  { 2160, 334, 661, 83, 4033, 108 },
  { 2387, 334, 661, 83, 4033, 108 },
  { 145, 334, 661, 83, 4033, 108 },
  { 486, 334, 661, 83, 4033, 108 },
  { 215, 349, 661, 83, 5088, 98 },
  { 550, 1770, 661, 83, 13440, 10 },
  { 581, 1215, 649, 120, 6113, 114 },
  { 800, 1215, 857, 120, 6113, 114 },
  { 1073, 1215, 567, 120, 6113, 114 },
  { 1291, 1215, 567, 120, 6113, 114 },
  { 1563, 1215, 567, 120, 6113, 114 },
  { 1769, 1215, 567, 120, 6113, 114 },
  { 2033, 1215, 567, 120, 6113, 114 },
  { 2252, 1215, 567, 120, 6113, 114 },
  { 2479, 1215, 567, 120, 6113, 114 },
  { 37, 1215, 567, 120, 6113, 114 },
  { 318, 1215, 567, 120, 6113, 114 },
  { 658, 1215, 567, 120, 6113, 114 },
  { 872, 1215, 567, 120, 6113, 114 },
  { 1150, 1215, 567, 120, 6113, 114 },
  { 1360, 1215, 567, 120, 6113, 114 },
  { 1628, 1215, 567, 120, 6113, 114 },
  { 1828, 1215, 567, 120, 6113, 114 },
  { 2116, 1215, 567, 120, 6113, 114 },
  { 2311, 1215, 567, 120, 6113, 114 },
  { 101, 1215, 567, 120, 6113, 114 },
  { 410, 1215, 567, 120, 6113, 114 },
  { 725, 1215, 567, 120, 6113, 114 },
  { 968, 1215, 567, 120, 6113, 114 },
  { 1218, 1215, 567, 120, 6113, 114 },
  { 1458, 1215, 567, 120, 6113, 114 },
  { 1696, 1215, 567, 120, 6113, 114 },
  { 1928, 1215, 567, 120, 6113, 114 },
  { 2184, 1215, 567, 120, 6113, 114 },
  { 2411, 1215, 567, 120, 6113, 114 },
  { 169, 1215, 567, 120, 6113, 114 },
  { 510, 1215, 567, 120, 6113, 114 },
  { 247, 1317, 567, 120, 13904, 14 },
  { 1067, 1638, 1204, 153, 1009, 121 },
  { 1285, 1638, 1204, 153, 1009, 121 },
  { 1557, 1638, 1204, 153, 1009, 121 },
  { 1763, 1638, 1204, 153, 1009, 121 },
  { 2027, 1638, 1204, 153, 1009, 121 },
  { 2246, 1638, 1204, 153, 1009, 121 },
  { 2473, 1638, 1204, 153, 1009, 121 },
  { 31, 1638, 1204, 153, 1009, 121 },
  { 312, 1638, 1204, 153, 1009, 121 },
  { 651, 1638, 1204, 153, 1009, 121 },
  { 864, 1638, 1204, 153, 1009, 121 },
  { 1142, 1638, 1204, 153, 1009, 121 },
  { 1352, 1638, 1204, 153, 1009, 121 },
  { 1620, 1638, 1204, 153, 1009, 121 },
  { 1820, 1638, 1204, 153, 1009, 121 },
  { 2108, 1638, 1204, 153, 1009, 121 },
  { 2303, 1638, 1204, 153, 1009, 121 },
  { 93, 1638, 1204, 153, 1009, 121 },
  { 402, 1638, 1204, 153, 1009, 121 },
  { 717, 1638, 1204, 153, 1009, 121 },
  { 960, 1638, 1204, 153, 1009, 121 },
  { 1210, 1638, 1204, 153, 1009, 121 },
  { 1450, 1638, 1204, 153, 1009, 121 },
  { 1688, 1638, 1204, 153, 1009, 121 },
  { 1920, 1638, 1204, 153, 1009, 121 },
  { 2176, 1638, 1204, 153, 1009, 121 },
  { 2403, 1638, 1204, 153, 1009, 121 },
  { 161, 1638, 1204, 153, 1009, 121 },
  { 502, 1638, 1204, 153, 1009, 121 },
  { 239, 1670, 1204, 153, 3632, 126 },
  { 573, 1529, 1204, 153, 4864, 112 },
  { 793, 1606, 1204, 153, 12192, 17 },
  { 797, 1466, 880, 132, 3969, 127 },
  { 1070, 1466, 664, 132, 3969, 127 },
  { 1288, 1466, 664, 132, 3969, 127 },
  { 1560, 1466, 664, 132, 3969, 127 },
  { 1766, 1466, 664, 132, 3969, 127 },
  { 2030, 1466, 664, 132, 3969, 127 },
  { 2249, 1466, 664, 132, 3969, 127 },
  { 2476, 1466, 664, 132, 3969, 127 },
  { 34, 1466, 664, 132, 3969, 127 },
  { 315, 1466, 664, 132, 3969, 127 },
  { 654, 1466, 664, 132, 3969, 127 },
  { 868, 1466, 664, 132, 3969, 127 },
  { 1146, 1466, 664, 132, 3969, 127 },
  { 1356, 1466, 664, 132, 3969, 127 },
  { 1624, 1466, 664, 132, 3969, 127 },
  { 1824, 1466, 664, 132, 3969, 127 },
  { 2112, 1466, 664, 132, 3969, 127 },
  { 2307, 1466, 664, 132, 3969, 127 },
  { 97, 1466, 664, 132, 3969, 127 },
  { 406, 1466, 664, 132, 3969, 127 },
  { 721, 1466, 664, 132, 3969, 127 },
  { 964, 1466, 664, 132, 3969, 127 },
  { 1214, 1466, 664, 132, 3969, 127 },
  { 1454, 1466, 664, 132, 3969, 127 },
  { 1692, 1466, 664, 132, 3969, 127 },
  { 1924, 1466, 664, 132, 3969, 127 },
  { 2180, 1466, 664, 132, 3969, 127 },
  { 2407, 1466, 664, 132, 3969, 127 },
  { 165, 1466, 664, 132, 3969, 127 },
  { 506, 1466, 664, 132, 3969, 127 },
  { 243, 1487, 664, 132, 5088, 117 },
  { 577, 1508, 664, 132, 13440, 22 },
  { 2750, 2098, 16, 185, 560, 140 },
  { 2048, 2073, 16, 185, 418, 131 },
  { 2494, 2048, 16, 185, 418, 131 },
  { 338, 2023, 16, 185, 418, 131 },
  { 892, 1998, 16, 185, 418, 131 },
  { 1380, 1973, 16, 185, 418, 131 },
  { 1848, 1948, 16, 185, 418, 131 },
  { 2331, 1923, 16, 185, 418, 131 },
  { 430, 1898, 16, 185, 418, 131 },
  { 988, 1873, 16, 185, 418, 131 },
  { 1478, 1848, 16, 185, 418, 131 },
  { 1948, 1823, 16, 185, 418, 131 },
  { 2792, 1455, 756, 7, 11072, 32 },
  { 592, 385, 1797, 7, 6066, 32 },
  { 1084, 388, 672, 7, 6066, 32 },
  { 1572, 391, 258, 7, 6066, 32 },
  { 2042, 394, 75, 7, 6066, 32 },
  { 2488, 397, 75, 7, 6066, 32 },
  { 330, 400, 75, 7, 6066, 32 },
  { 884, 403, 75, 7, 6066, 32 },
  { 1372, 406, 75, 7, 6066, 32 },
  { 1840, 409, 75, 7, 6066, 32 },
  { 2323, 412, 75, 7, 6066, 32 },
  { 422, 415, 75, 7, 6066, 32 },
  { 980, 418, 201, 7, 6066, 32 },
  { 1470, 421, 282, 7, 6066, 32 },
  { 1940, 424, 734, 7, 6066, 32 },
  { 2423, 427, 1787, 7, 19201, 29 },
  { 2800, 1329, 16, 210, 11121, 149 },
  { 2774, 1227, 1788, 210, 19152, 26 },
  { 598, 1311, 1788, 210, 6018, 149 },
  { 1090, 1305, 673, 210, 6018, 149 },
  { 1578, 1299, 259, 210, 6018, 149 },
  { 2066, 1293, 76, 210, 6018, 149 },
  { 2512, 1287, 76, 210, 6018, 149 },
  { 356, 1281, 76, 210, 6018, 149 },
  { 912, 1275, 76, 210, 6018, 149 },
  { 1402, 1269, 76, 210, 6018, 149 },
  { 1872, 1263, 76, 210, 6018, 149 },
  { 2355, 1257, 76, 210, 6018, 149 },
  { 454, 1251, 76, 210, 6018, 149 },
  { 1012, 1245, 202, 210, 6018, 149 },
  { 1502, 1239, 283, 210, 6018, 149 },
  { 1972, 1233, 735, 210, 6018, 149 },
  { 612, 889, 655, 216, 5265, 152 },
  { 824, 889, 863, 216, 5265, 152 },
  { 1102, 889, 573, 216, 5265, 152 },
  { 1312, 889, 573, 216, 5265, 152 },
  { 1590, 889, 573, 216, 5265, 152 },
  { 1790, 889, 573, 216, 5265, 152 },
  { 2078, 889, 573, 216, 5265, 152 },
  { 2273, 889, 573, 216, 5265, 152 },
  { 2524, 889, 573, 216, 5265, 152 },
  { 62, 889, 573, 216, 5265, 152 },
  { 370, 889, 573, 216, 5265, 152 },
  { 685, 889, 573, 216, 5265, 152 },
  { 928, 889, 573, 216, 5265, 152 },
  { 1178, 889, 573, 216, 5265, 152 },
  { 1418, 889, 573, 216, 5265, 152 },
  { 1656, 889, 573, 216, 5265, 152 },
  { 1888, 889, 573, 216, 5265, 152 },
  { 2144, 889, 573, 216, 5265, 152 },
  { 2371, 889, 573, 216, 5265, 152 },
  { 129, 889, 573, 216, 5265, 152 },
  { 470, 889, 573, 216, 5265, 152 },
  { 753, 889, 573, 216, 5265, 152 },
  { 1028, 889, 573, 216, 5265, 152 },
  { 1246, 889, 573, 216, 5265, 152 },
  { 1518, 889, 573, 216, 5265, 152 },
  { 1724, 889, 573, 216, 5265, 152 },
  { 1988, 889, 573, 216, 5265, 152 },
  { 2212, 889, 573, 216, 5265, 152 },
  { 2439, 889, 573, 216, 5265, 152 },
  { 193, 889, 573, 216, 5265, 152 },
  { 530, 889, 573, 216, 5265, 152 },
  { 273, 906, 573, 216, 13952, 41 },
  { 1096, 1105, 16, 263, 705, 173 },
  { 1306, 1105, 16, 263, 705, 173 },
  { 1584, 1105, 16, 263, 705, 173 },
  { 1784, 1105, 16, 263, 705, 173 },
  { 2072, 1105, 16, 263, 705, 173 },
  { 2267, 1105, 16, 263, 705, 173 },
  { 2518, 1105, 16, 263, 705, 173 },
  { 56, 1105, 16, 263, 705, 173 },
  { 364, 1105, 16, 263, 705, 173 },
  { 678, 1105, 16, 263, 705, 173 },
  { 920, 1105, 16, 263, 705, 173 },
  { 1170, 1105, 16, 263, 705, 173 },
  { 1410, 1105, 16, 263, 705, 173 },
  { 1648, 1105, 16, 263, 705, 173 },
  { 1880, 1105, 16, 263, 705, 173 },
  { 2136, 1105, 16, 263, 705, 173 },
  { 2363, 1105, 16, 263, 705, 173 },
  { 121, 1105, 16, 263, 705, 173 },
  { 462, 1105, 16, 263, 705, 173 },
  { 745, 1105, 16, 263, 705, 173 },
  { 1020, 1105, 16, 263, 705, 173 },
  { 1238, 1105, 16, 263, 705, 173 },
  { 1510, 1105, 16, 263, 705, 173 },
  { 1716, 1105, 16, 263, 705, 173 },
  { 1980, 1105, 16, 263, 705, 173 },
  { 2204, 1105, 16, 263, 705, 173 },
  { 2431, 1105, 16, 263, 705, 173 },
  { 185, 1105, 16, 263, 705, 173 },
  { 522, 1105, 16, 263, 705, 173 },
  { 265, 1151, 16, 263, 3712, 182 },
  { 604, 1013, 16, 263, 4944, 157 },
  { 817, 1059, 16, 263, 12272, 46 },
  { 821, 923, 883, 233, 3857, 191 },
  { 1099, 923, 463, 233, 3857, 191 },
  { 1309, 923, 463, 233, 3857, 191 },
  { 1587, 923, 463, 233, 3857, 191 },
  { 1787, 923, 463, 233, 3857, 191 },
  { 2075, 923, 463, 233, 3857, 191 },
  { 2270, 923, 463, 233, 3857, 191 },
  { 2521, 923, 463, 233, 3857, 191 },
  { 59, 923, 463, 233, 3857, 191 },
  { 367, 923, 463, 233, 3857, 191 },
  { 681, 923, 463, 233, 3857, 191 },
  { 924, 923, 463, 233, 3857, 191 },
  { 1174, 923, 463, 233, 3857, 191 },
  { 1414, 923, 463, 233, 3857, 191 },
  { 1652, 923, 463, 233, 3857, 191 },
  { 1884, 923, 463, 233, 3857, 191 },
  { 2140, 923, 463, 233, 3857, 191 },
  { 2367, 923, 463, 233, 3857, 191 },
  { 125, 923, 463, 233, 3857, 191 },
  { 466, 923, 463, 233, 3857, 191 },
  { 749, 923, 463, 233, 3857, 191 },
  { 1024, 923, 463, 233, 3857, 191 },
  { 1242, 923, 463, 233, 3857, 191 },
  { 1514, 923, 463, 233, 3857, 191 },
  { 1720, 923, 463, 233, 3857, 191 },
  { 1984, 923, 463, 233, 3857, 191 },
  { 2208, 923, 463, 233, 3857, 191 },
  { 2435, 923, 463, 233, 3857, 191 },
  { 189, 923, 463, 233, 3857, 191 },
  { 526, 923, 463, 233, 3857, 191 },
  { 269, 953, 463, 233, 5152, 166 },
  { 608, 983, 463, 233, 13504, 55 },
};

extern const MCPhysReg AArch64RegUnitRoots[][2] = {
  { AArch64::FFR },
  { AArch64::W29 },
  { AArch64::W30 },
  { AArch64::NZCV },
  { AArch64::WSP },
  { AArch64::VG },
  { AArch64::WZR },
  { AArch64::ZAQ0 },
  { AArch64::ZAQ8 },
  { AArch64::ZAQ4 },
  { AArch64::ZAQ12 },
  { AArch64::ZAQ2 },
  { AArch64::ZAQ10 },
  { AArch64::ZAQ6 },
  { AArch64::ZAQ14 },
  { AArch64::ZAQ1 },
  { AArch64::ZAQ9 },
  { AArch64::ZAQ5 },
  { AArch64::ZAQ13 },
  { AArch64::ZAQ3 },
  { AArch64::ZAQ11 },
  { AArch64::ZAQ7 },
  { AArch64::ZAQ15 },
  { AArch64::B0 },
  { AArch64::B1 },
  { AArch64::B2 },
  { AArch64::B3 },
  { AArch64::B4 },
  { AArch64::B5 },
  { AArch64::B6 },
  { AArch64::B7 },
  { AArch64::B8 },
  { AArch64::B9 },
  { AArch64::B10 },
  { AArch64::B11 },
  { AArch64::B12 },
  { AArch64::B13 },
  { AArch64::B14 },
  { AArch64::B15 },
  { AArch64::B16 },
  { AArch64::B17 },
  { AArch64::B18 },
  { AArch64::B19 },
  { AArch64::B20 },
  { AArch64::B21 },
  { AArch64::B22 },
  { AArch64::B23 },
  { AArch64::B24 },
  { AArch64::B25 },
  { AArch64::B26 },
  { AArch64::B27 },
  { AArch64::B28 },
  { AArch64::B29 },
  { AArch64::B30 },
  { AArch64::B31 },
  { AArch64::P0 },
  { AArch64::P1 },
  { AArch64::P2 },
  { AArch64::P3 },
  { AArch64::P4 },
  { AArch64::P5 },
  { AArch64::P6 },
  { AArch64::P7 },
  { AArch64::P8 },
  { AArch64::P9 },
  { AArch64::P10 },
  { AArch64::P11 },
  { AArch64::P12 },
  { AArch64::P13 },
  { AArch64::P14 },
  { AArch64::P15 },
  { AArch64::W0 },
  { AArch64::W1 },
  { AArch64::W2 },
  { AArch64::W3 },
  { AArch64::W4 },
  { AArch64::W5 },
  { AArch64::W6 },
  { AArch64::W7 },
  { AArch64::W8 },
  { AArch64::W9 },
  { AArch64::W10 },
  { AArch64::W11 },
  { AArch64::W12 },
  { AArch64::W13 },
  { AArch64::W14 },
  { AArch64::W15 },
  { AArch64::W16 },
  { AArch64::W17 },
  { AArch64::W18 },
  { AArch64::W19 },
  { AArch64::W20 },
  { AArch64::W21 },
  { AArch64::W22 },
  { AArch64::W23 },
  { AArch64::W24 },
  { AArch64::W25 },
  { AArch64::W26 },
  { AArch64::W27 },
  { AArch64::W28 },
  { AArch64::Z0_HI },
  { AArch64::Z1_HI },
  { AArch64::Z2_HI },
  { AArch64::Z3_HI },
  { AArch64::Z4_HI },
  { AArch64::Z5_HI },
  { AArch64::Z6_HI },
  { AArch64::Z7_HI },
  { AArch64::Z8_HI },
  { AArch64::Z9_HI },
  { AArch64::Z10_HI },
  { AArch64::Z11_HI },
  { AArch64::Z12_HI },
  { AArch64::Z13_HI },
  { AArch64::Z14_HI },
  { AArch64::Z15_HI },
  { AArch64::Z16_HI },
  { AArch64::Z17_HI },
  { AArch64::Z18_HI },
  { AArch64::Z19_HI },
  { AArch64::Z20_HI },
  { AArch64::Z21_HI },
  { AArch64::Z22_HI },
  { AArch64::Z23_HI },
  { AArch64::Z24_HI },
  { AArch64::Z25_HI },
  { AArch64::Z26_HI },
  { AArch64::Z27_HI },
  { AArch64::Z28_HI },
  { AArch64::Z29_HI },
  { AArch64::Z30_HI },
  { AArch64::Z31_HI },
};

namespace {     // Register classes...
  // FPR8 Register Class...
  const MCPhysReg FPR8[] = {
    AArch64::B0, AArch64::B1, AArch64::B2, AArch64::B3, AArch64::B4, AArch64::B5, AArch64::B6, AArch64::B7, AArch64::B8, AArch64::B9, AArch64::B10, AArch64::B11, AArch64::B12, AArch64::B13, AArch64::B14, AArch64::B15, AArch64::B16, AArch64::B17, AArch64::B18, AArch64::B19, AArch64::B20, AArch64::B21, AArch64::B22, AArch64::B23, AArch64::B24, AArch64::B25, AArch64::B26, AArch64::B27, AArch64::B28, AArch64::B29, AArch64::B30, AArch64::B31, 
  };

  // FPR8 Bit set.
  const uint8_t FPR8Bits[] = {
    0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // FPR16 Register Class...
  const MCPhysReg FPR16[] = {
    AArch64::H0, AArch64::H1, AArch64::H2, AArch64::H3, AArch64::H4, AArch64::H5, AArch64::H6, AArch64::H7, AArch64::H8, AArch64::H9, AArch64::H10, AArch64::H11, AArch64::H12, AArch64::H13, AArch64::H14, AArch64::H15, AArch64::H16, AArch64::H17, AArch64::H18, AArch64::H19, AArch64::H20, AArch64::H21, AArch64::H22, AArch64::H23, AArch64::H24, AArch64::H25, AArch64::H26, AArch64::H27, AArch64::H28, AArch64::H29, AArch64::H30, AArch64::H31, 
  };

  // FPR16 Bit set.
  const uint8_t FPR16Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // FPR16_lo Register Class...
  const MCPhysReg FPR16_lo[] = {
    AArch64::H0, AArch64::H1, AArch64::H2, AArch64::H3, AArch64::H4, AArch64::H5, AArch64::H6, AArch64::H7, AArch64::H8, AArch64::H9, AArch64::H10, AArch64::H11, AArch64::H12, AArch64::H13, AArch64::H14, AArch64::H15, 
  };

  // FPR16_lo Bit set.
  const uint8_t FPR16_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 
  };

  // PPR Register Class...
  const MCPhysReg PPR[] = {
    AArch64::P0, AArch64::P1, AArch64::P2, AArch64::P3, AArch64::P4, AArch64::P5, AArch64::P6, AArch64::P7, AArch64::P8, AArch64::P9, AArch64::P10, AArch64::P11, AArch64::P12, AArch64::P13, AArch64::P14, AArch64::P15, 
  };

  // PPR Bit set.
  const uint8_t PPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 
  };

  // PPR_3b Register Class...
  const MCPhysReg PPR_3b[] = {
    AArch64::P0, AArch64::P1, AArch64::P2, AArch64::P3, AArch64::P4, AArch64::P5, AArch64::P6, AArch64::P7, 
  };

  // PPR_3b Bit set.
  const uint8_t PPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 
  };

  // GPR32all Register Class...
  const MCPhysReg GPR32all[] = {
    AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WZR, AArch64::WSP, 
  };

  // GPR32all Bit set.
  const uint8_t GPR32allBits[] = {
    0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x03, 
  };

  // FPR32 Register Class...
  const MCPhysReg FPR32[] = {
    AArch64::S0, AArch64::S1, AArch64::S2, AArch64::S3, AArch64::S4, AArch64::S5, AArch64::S6, AArch64::S7, AArch64::S8, AArch64::S9, AArch64::S10, AArch64::S11, AArch64::S12, AArch64::S13, AArch64::S14, AArch64::S15, AArch64::S16, AArch64::S17, AArch64::S18, AArch64::S19, AArch64::S20, AArch64::S21, AArch64::S22, AArch64::S23, AArch64::S24, AArch64::S25, AArch64::S26, AArch64::S27, AArch64::S28, AArch64::S29, AArch64::S30, AArch64::S31, 
  };

  // FPR32 Bit set.
  const uint8_t FPR32Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // GPR32 Register Class...
  const MCPhysReg GPR32[] = {
    AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WZR, 
  };

  // GPR32 Bit set.
  const uint8_t GPR32Bits[] = {
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x03, 
  };

  // GPR32sp Register Class...
  const MCPhysReg GPR32sp[] = {
    AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WSP, 
  };

  // GPR32sp Bit set.
  const uint8_t GPR32spBits[] = {
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x03, 
  };

  // GPR32common Register Class...
  const MCPhysReg GPR32common[] = {
    AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, 
  };

  // GPR32common Bit set.
  const uint8_t GPR32commonBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x03, 
  };

  // FPR32_with_hsub_in_FPR16_lo Register Class...
  const MCPhysReg FPR32_with_hsub_in_FPR16_lo[] = {
    AArch64::S0, AArch64::S1, AArch64::S2, AArch64::S3, AArch64::S4, AArch64::S5, AArch64::S6, AArch64::S7, AArch64::S8, AArch64::S9, AArch64::S10, AArch64::S11, AArch64::S12, AArch64::S13, AArch64::S14, AArch64::S15, 
  };

  // FPR32_with_hsub_in_FPR16_lo Bit set.
  const uint8_t FPR32_with_hsub_in_FPR16_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 
  };

  // GPR32arg Register Class...
  const MCPhysReg GPR32arg[] = {
    AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, 
  };

  // GPR32arg Bit set.
  const uint8_t GPR32argBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 
  };

  // MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg MatrixIndexGPR32_12_15[] = {
    AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, 
  };

  // MatrixIndexGPR32_12_15 Bit set.
  const uint8_t MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 
  };

  // CCR Register Class...
  const MCPhysReg CCR[] = {
    AArch64::NZCV, 
  };

  // CCR Bit set.
  const uint8_t CCRBits[] = {
    0x10, 
  };

  // GPR32sponly Register Class...
  const MCPhysReg GPR32sponly[] = {
    AArch64::WSP, 
  };

  // GPR32sponly Bit set.
  const uint8_t GPR32sponlyBits[] = {
    0x80, 
  };

  // WSeqPairsClass Register Class...
  const MCPhysReg WSeqPairsClass[] = {
    AArch64::W0_W1, AArch64::W2_W3, AArch64::W4_W5, AArch64::W6_W7, AArch64::W8_W9, AArch64::W10_W11, AArch64::W12_W13, AArch64::W14_W15, AArch64::W16_W17, AArch64::W18_W19, AArch64::W20_W21, AArch64::W22_W23, AArch64::W24_W25, AArch64::W26_W27, AArch64::W28_W29, AArch64::W30_WZR, 
  };

  // WSeqPairsClass Bit set.
  const uint8_t WSeqPairsClassBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 
  };

  // WSeqPairsClass_with_subo32_in_GPR32common Register Class...
  const MCPhysReg WSeqPairsClass_with_subo32_in_GPR32common[] = {
    AArch64::W0_W1, AArch64::W2_W3, AArch64::W4_W5, AArch64::W6_W7, AArch64::W8_W9, AArch64::W10_W11, AArch64::W12_W13, AArch64::W14_W15, AArch64::W16_W17, AArch64::W18_W19, AArch64::W20_W21, AArch64::W22_W23, AArch64::W24_W25, AArch64::W26_W27, AArch64::W28_W29, 
  };

  // WSeqPairsClass_with_subo32_in_GPR32common Bit set.
  const uint8_t WSeqPairsClass_with_subo32_in_GPR32commonBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x03, 
  };

  // WSeqPairsClass_with_sube32_in_GPR32arg Register Class...
  const MCPhysReg WSeqPairsClass_with_sube32_in_GPR32arg[] = {
    AArch64::W0_W1, AArch64::W2_W3, AArch64::W4_W5, AArch64::W6_W7, 
  };

  // WSeqPairsClass_with_sube32_in_GPR32arg Bit set.
  const uint8_t WSeqPairsClass_with_sube32_in_GPR32argBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
  };

  // WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15[] = {
    AArch64::W12_W13, AArch64::W14_W15, 
  };

  // WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15 Bit set.
  const uint8_t WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  };

  // GPR64all Register Class...
  const MCPhysReg GPR64all[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::XZR, AArch64::SP, 
  };

  // GPR64all Bit set.
  const uint8_t GPR64allBits[] = {
    0x2c, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x7f, 
  };

  // FPR64 Register Class...
  const MCPhysReg FPR64[] = {
    AArch64::D0, AArch64::D1, AArch64::D2, AArch64::D3, AArch64::D4, AArch64::D5, AArch64::D6, AArch64::D7, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::D16, AArch64::D17, AArch64::D18, AArch64::D19, AArch64::D20, AArch64::D21, AArch64::D22, AArch64::D23, AArch64::D24, AArch64::D25, AArch64::D26, AArch64::D27, AArch64::D28, AArch64::D29, AArch64::D30, AArch64::D31, 
  };

  // FPR64 Bit set.
  const uint8_t FPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // GPR64 Register Class...
  const MCPhysReg GPR64[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::XZR, 
  };

  // GPR64 Bit set.
  const uint8_t GPR64Bits[] = {
    0x0c, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x7f, 
  };

  // GPR64sp Register Class...
  const MCPhysReg GPR64sp[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::SP, 
  };

  // GPR64sp Bit set.
  const uint8_t GPR64spBits[] = {
    0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x7f, 
  };

  // GPR64common Register Class...
  const MCPhysReg GPR64common[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, 
  };

  // GPR64common Bit set.
  const uint8_t GPR64commonBits[] = {
    0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x7f, 
  };

  // GPR64noip Register Class...
  const MCPhysReg GPR64noip[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::XZR, 
  };

  // GPR64noip Bit set.
  const uint8_t GPR64noipBits[] = {
    0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xf3, 0x7f, 
  };

  // GPR64common_and_GPR64noip Register Class...
  const MCPhysReg GPR64common_and_GPR64noip[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, 
  };

  // GPR64common_and_GPR64noip Bit set.
  const uint8_t GPR64common_and_GPR64noipBits[] = {
    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xf3, 0x7f, 
  };

  // tcGPR64 Register Class...
  const MCPhysReg tcGPR64[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, 
  };

  // tcGPR64 Bit set.
  const uint8_t tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x1f, 
  };

  // GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64noip_and_tcGPR64[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X18, 
  };

  // GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x13, 
  };

  // FPR64_lo Register Class...
  const MCPhysReg FPR64_lo[] = {
    AArch64::D0, AArch64::D1, AArch64::D2, AArch64::D3, AArch64::D4, AArch64::D5, AArch64::D6, AArch64::D7, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 
  };

  // FPR64_lo Bit set.
  const uint8_t FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 
  };

  // GPR64arg Register Class...
  const MCPhysReg GPR64arg[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, 
  };

  // GPR64arg Bit set.
  const uint8_t GPR64argBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 
  };

  // GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg GPR64_with_sub_32_in_MatrixIndexGPR32_12_15[] = {
    AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, 
  };

  // GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Bit set.
  const uint8_t GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 
  };

  // rtcGPR64 Register Class...
  const MCPhysReg rtcGPR64[] = {
    AArch64::X16, AArch64::X17, 
  };

  // rtcGPR64 Bit set.
  const uint8_t rtcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 
  };

  // GPR64sponly Register Class...
  const MCPhysReg GPR64sponly[] = {
    AArch64::SP, 
  };

  // GPR64sponly Bit set.
  const uint8_t GPR64sponlyBits[] = {
    0x20, 
  };

  // DD Register Class...
  const MCPhysReg DD[] = {
    AArch64::D0_D1, AArch64::D1_D2, AArch64::D2_D3, AArch64::D3_D4, AArch64::D4_D5, AArch64::D5_D6, AArch64::D6_D7, AArch64::D7_D8, AArch64::D8_D9, AArch64::D9_D10, AArch64::D10_D11, AArch64::D11_D12, AArch64::D12_D13, AArch64::D13_D14, AArch64::D14_D15, AArch64::D15_D16, AArch64::D16_D17, AArch64::D17_D18, AArch64::D18_D19, AArch64::D19_D20, AArch64::D20_D21, AArch64::D21_D22, AArch64::D22_D23, AArch64::D23_D24, AArch64::D24_D25, AArch64::D25_D26, AArch64::D26_D27, AArch64::D27_D28, AArch64::D28_D29, AArch64::D29_D30, AArch64::D30_D31, AArch64::D31_D0, 
  };

  // DD Bit set.
  const uint8_t DDBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // DD_with_dsub0_in_FPR64_lo Register Class...
  const MCPhysReg DD_with_dsub0_in_FPR64_lo[] = {
    AArch64::D0_D1, AArch64::D1_D2, AArch64::D2_D3, AArch64::D3_D4, AArch64::D4_D5, AArch64::D5_D6, AArch64::D6_D7, AArch64::D7_D8, AArch64::D8_D9, AArch64::D9_D10, AArch64::D10_D11, AArch64::D11_D12, AArch64::D12_D13, AArch64::D13_D14, AArch64::D14_D15, AArch64::D15_D16, 
  };

  // DD_with_dsub0_in_FPR64_lo Bit set.
  const uint8_t DD_with_dsub0_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 
  };

  // DD_with_dsub1_in_FPR64_lo Register Class...
  const MCPhysReg DD_with_dsub1_in_FPR64_lo[] = {
    AArch64::D0_D1, AArch64::D1_D2, AArch64::D2_D3, AArch64::D3_D4, AArch64::D4_D5, AArch64::D5_D6, AArch64::D6_D7, AArch64::D7_D8, AArch64::D8_D9, AArch64::D9_D10, AArch64::D10_D11, AArch64::D11_D12, AArch64::D12_D13, AArch64::D13_D14, AArch64::D14_D15, AArch64::D31_D0, 
  };

  // DD_with_dsub1_in_FPR64_lo Bit set.
  const uint8_t DD_with_dsub1_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 0x00, 0x20, 
  };

  // XSeqPairsClass Register Class...
  const MCPhysReg XSeqPairsClass[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, AArch64::X8_X9, AArch64::X10_X11, AArch64::X12_X13, AArch64::X14_X15, AArch64::X16_X17, AArch64::X18_X19, AArch64::X20_X21, AArch64::X22_X23, AArch64::X24_X25, AArch64::X26_X27, AArch64::X28_FP, AArch64::LR_XZR, 
  };

  // XSeqPairsClass Bit set.
  const uint8_t XSeqPairsClassBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 
  };

  // DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo Register Class...
  const MCPhysReg DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo[] = {
    AArch64::D0_D1, AArch64::D1_D2, AArch64::D2_D3, AArch64::D3_D4, AArch64::D4_D5, AArch64::D5_D6, AArch64::D6_D7, AArch64::D7_D8, AArch64::D8_D9, AArch64::D9_D10, AArch64::D10_D11, AArch64::D11_D12, AArch64::D12_D13, AArch64::D13_D14, AArch64::D14_D15, 
  };

  // DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo Bit set.
  const uint8_t DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 
  };

  // XSeqPairsClass_with_subo64_in_GPR64common Register Class...
  const MCPhysReg XSeqPairsClass_with_subo64_in_GPR64common[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, AArch64::X8_X9, AArch64::X10_X11, AArch64::X12_X13, AArch64::X14_X15, AArch64::X16_X17, AArch64::X18_X19, AArch64::X20_X21, AArch64::X22_X23, AArch64::X24_X25, AArch64::X26_X27, AArch64::X28_FP, 
  };

  // XSeqPairsClass_with_subo64_in_GPR64common Bit set.
  const uint8_t XSeqPairsClass_with_subo64_in_GPR64commonBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x03, 
  };

  // XSeqPairsClass_with_subo64_in_GPR64noip Register Class...
  const MCPhysReg XSeqPairsClass_with_subo64_in_GPR64noip[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, AArch64::X8_X9, AArch64::X10_X11, AArch64::X12_X13, AArch64::X14_X15, AArch64::X18_X19, AArch64::X20_X21, AArch64::X22_X23, AArch64::X24_X25, AArch64::X26_X27, AArch64::X28_FP, AArch64::LR_XZR, 
  };

  // XSeqPairsClass_with_subo64_in_GPR64noip Bit set.
  const uint8_t XSeqPairsClass_with_subo64_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xef, 0x03, 
  };

  // XSeqPairsClass_with_sube64_in_GPR64noip Register Class...
  const MCPhysReg XSeqPairsClass_with_sube64_in_GPR64noip[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, AArch64::X8_X9, AArch64::X10_X11, AArch64::X12_X13, AArch64::X14_X15, AArch64::X18_X19, AArch64::X20_X21, AArch64::X22_X23, AArch64::X24_X25, AArch64::X26_X27, AArch64::X28_FP, 
  };

  // XSeqPairsClass_with_sube64_in_GPR64noip Bit set.
  const uint8_t XSeqPairsClass_with_sube64_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xef, 0x03, 
  };

  // XSeqPairsClass_with_sube64_in_tcGPR64 Register Class...
  const MCPhysReg XSeqPairsClass_with_sube64_in_tcGPR64[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, AArch64::X8_X9, AArch64::X10_X11, AArch64::X12_X13, AArch64::X14_X15, AArch64::X16_X17, AArch64::X18_X19, 
  };

  // XSeqPairsClass_with_sube64_in_tcGPR64 Bit set.
  const uint8_t XSeqPairsClass_with_sube64_in_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 
  };

  // XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, AArch64::X8_X9, AArch64::X10_X11, AArch64::X12_X13, AArch64::X14_X15, AArch64::X18_X19, 
  };

  // XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x2f, 
  };

  // XSeqPairsClass_with_subo64_in_tcGPR64 Register Class...
  const MCPhysReg XSeqPairsClass_with_subo64_in_tcGPR64[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, AArch64::X8_X9, AArch64::X10_X11, AArch64::X12_X13, AArch64::X14_X15, AArch64::X16_X17, 
  };

  // XSeqPairsClass_with_subo64_in_tcGPR64 Bit set.
  const uint8_t XSeqPairsClass_with_subo64_in_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x1f, 
  };

  // XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, AArch64::X8_X9, AArch64::X10_X11, AArch64::X12_X13, AArch64::X14_X15, 
  };

  // XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 
  };

  // XSeqPairsClass_with_sub_32_in_GPR32arg Register Class...
  const MCPhysReg XSeqPairsClass_with_sub_32_in_GPR32arg[] = {
    AArch64::X0_X1, AArch64::X2_X3, AArch64::X4_X5, AArch64::X6_X7, 
  };

  // XSeqPairsClass_with_sub_32_in_GPR32arg Bit set.
  const uint8_t XSeqPairsClass_with_sub_32_in_GPR32argBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 
  };

  // XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15[] = {
    AArch64::X12_X13, AArch64::X14_X15, 
  };

  // XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15 Bit set.
  const uint8_t XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 
  };

  // XSeqPairsClass_with_sube64_in_rtcGPR64 Register Class...
  const MCPhysReg XSeqPairsClass_with_sube64_in_rtcGPR64[] = {
    AArch64::X16_X17, 
  };

  // XSeqPairsClass_with_sube64_in_rtcGPR64 Bit set.
  const uint8_t XSeqPairsClass_with_sube64_in_rtcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 
  };

  // FPR128 Register Class...
  const MCPhysReg FPR128[] = {
    AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, AArch64::Q24, AArch64::Q25, AArch64::Q26, AArch64::Q27, AArch64::Q28, AArch64::Q29, AArch64::Q30, AArch64::Q31, 
  };

  // FPR128 Bit set.
  const uint8_t FPR128Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x07, 
  };

  // ZPR Register Class...
  const MCPhysReg ZPR[] = {
    AArch64::Z0, AArch64::Z1, AArch64::Z2, AArch64::Z3, AArch64::Z4, AArch64::Z5, AArch64::Z6, AArch64::Z7, AArch64::Z8, AArch64::Z9, AArch64::Z10, AArch64::Z11, AArch64::Z12, AArch64::Z13, AArch64::Z14, AArch64::Z15, AArch64::Z16, AArch64::Z17, AArch64::Z18, AArch64::Z19, AArch64::Z20, AArch64::Z21, AArch64::Z22, AArch64::Z23, AArch64::Z24, AArch64::Z25, AArch64::Z26, AArch64::Z27, AArch64::Z28, AArch64::Z29, AArch64::Z30, AArch64::Z31, 
  };

  // ZPR Bit set.
  const uint8_t ZPRBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0x7f, 
  };

  // FPR128_lo Register Class...
  const MCPhysReg FPR128_lo[] = {
    AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, 
  };

  // FPR128_lo Bit set.
  const uint8_t FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 
  };

  // MPR128 Register Class...
  const MCPhysReg MPR128[] = {
    AArch64::ZAQ0, AArch64::ZAQ1, AArch64::ZAQ2, AArch64::ZAQ3, AArch64::ZAQ4, AArch64::ZAQ5, AArch64::ZAQ6, AArch64::ZAQ7, AArch64::ZAQ8, AArch64::ZAQ9, AArch64::ZAQ10, AArch64::ZAQ11, AArch64::ZAQ12, AArch64::ZAQ13, AArch64::ZAQ14, AArch64::ZAQ15, 
  };

  // MPR128 Bit set.
  const uint8_t MPR128Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 
  };

  // ZPR_4b Register Class...
  const MCPhysReg ZPR_4b[] = {
    AArch64::Z0, AArch64::Z1, AArch64::Z2, AArch64::Z3, AArch64::Z4, AArch64::Z5, AArch64::Z6, AArch64::Z7, AArch64::Z8, AArch64::Z9, AArch64::Z10, AArch64::Z11, AArch64::Z12, AArch64::Z13, AArch64::Z14, AArch64::Z15, 
  };

  // ZPR_4b Bit set.
  const uint8_t ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 
  };

  // ZPR_3b Register Class...
  const MCPhysReg ZPR_3b[] = {
    AArch64::Z0, AArch64::Z1, AArch64::Z2, AArch64::Z3, AArch64::Z4, AArch64::Z5, AArch64::Z6, AArch64::Z7, 
  };

  // ZPR_3b Bit set.
  const uint8_t ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7f, 
  };

  // DDD Register Class...
  const MCPhysReg DDD[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D14_D15_D16, AArch64::D15_D16_D17, AArch64::D16_D17_D18, AArch64::D17_D18_D19, AArch64::D18_D19_D20, AArch64::D19_D20_D21, AArch64::D20_D21_D22, AArch64::D21_D22_D23, AArch64::D22_D23_D24, AArch64::D23_D24_D25, AArch64::D24_D25_D26, AArch64::D25_D26_D27, AArch64::D26_D27_D28, AArch64::D27_D28_D29, AArch64::D28_D29_D30, AArch64::D29_D30_D31, AArch64::D30_D31_D0, AArch64::D31_D0_D1, 
  };

  // DDD Bit set.
  const uint8_t DDDBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // DDD_with_dsub0_in_FPR64_lo Register Class...
  const MCPhysReg DDD_with_dsub0_in_FPR64_lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D14_D15_D16, AArch64::D15_D16_D17, 
  };

  // DDD_with_dsub0_in_FPR64_lo Bit set.
  const uint8_t DDD_with_dsub0_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 
  };

  // DDD_with_dsub1_in_FPR64_lo Register Class...
  const MCPhysReg DDD_with_dsub1_in_FPR64_lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D14_D15_D16, AArch64::D31_D0_D1, 
  };

  // DDD_with_dsub1_in_FPR64_lo Bit set.
  const uint8_t DDD_with_dsub1_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 0x00, 0x20, 
  };

  // DDD_with_dsub2_in_FPR64_lo Register Class...
  const MCPhysReg DDD_with_dsub2_in_FPR64_lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D30_D31_D0, AArch64::D31_D0_D1, 
  };

  // DDD_with_dsub2_in_FPR64_lo Bit set.
  const uint8_t DDD_with_dsub2_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0x30, 
  };

  // DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo Register Class...
  const MCPhysReg DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D14_D15_D16, 
  };

  // DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo Bit set.
  const uint8_t DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 
  };

  // DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo Register Class...
  const MCPhysReg DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D31_D0_D1, 
  };

  // DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo Bit set.
  const uint8_t DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0x20, 
  };

  // DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo Register Class...
  const MCPhysReg DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, 
  };

  // DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo Bit set.
  const uint8_t DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 
  };

  // DDDD Register Class...
  const MCPhysReg DDDD[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D14_D15_D16_D17, AArch64::D15_D16_D17_D18, AArch64::D16_D17_D18_D19, AArch64::D17_D18_D19_D20, AArch64::D18_D19_D20_D21, AArch64::D19_D20_D21_D22, AArch64::D20_D21_D22_D23, AArch64::D21_D22_D23_D24, AArch64::D22_D23_D24_D25, AArch64::D23_D24_D25_D26, AArch64::D24_D25_D26_D27, AArch64::D25_D26_D27_D28, AArch64::D26_D27_D28_D29, AArch64::D27_D28_D29_D30, AArch64::D28_D29_D30_D31, AArch64::D29_D30_D31_D0, AArch64::D30_D31_D0_D1, AArch64::D31_D0_D1_D2, 
  };

  // DDDD Bit set.
  const uint8_t DDDDBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // DDDD_with_dsub0_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub0_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D14_D15_D16_D17, AArch64::D15_D16_D17_D18, 
  };

  // DDDD_with_dsub0_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub0_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 
  };

  // DDDD_with_dsub1_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub1_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D14_D15_D16_D17, AArch64::D31_D0_D1_D2, 
  };

  // DDDD_with_dsub1_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub1_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 0x00, 0x20, 
  };

  // DDDD_with_dsub2_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub2_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D30_D31_D0_D1, AArch64::D31_D0_D1_D2, 
  };

  // DDDD_with_dsub2_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub2_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0x30, 
  };

  // DDDD_with_dsub3_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub3_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D29_D30_D31_D0, AArch64::D30_D31_D0_D1, AArch64::D31_D0_D1_D2, 
  };

  // DDDD_with_dsub3_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub3_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x07, 0x00, 0x38, 
  };

  // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D14_D15_D16_D17, 
  };

  // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 
  };

  // DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D31_D0_D1_D2, 
  };

  // DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0x20, 
  };

  // DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D30_D31_D0_D1, AArch64::D31_D0_D1_D2, 
  };

  // DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x07, 0x00, 0x30, 
  };

  // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, 
  };

  // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 
  };

  // DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D31_D0_D1_D2, 
  };

  // DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x07, 0x00, 0x20, 
  };

  // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo Register Class...
  const MCPhysReg DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, 
  };

  // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo Bit set.
  const uint8_t DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x07, 
  };

  // QQ Register Class...
  const MCPhysReg QQ[] = {
    AArch64::Q0_Q1, AArch64::Q1_Q2, AArch64::Q2_Q3, AArch64::Q3_Q4, AArch64::Q4_Q5, AArch64::Q5_Q6, AArch64::Q6_Q7, AArch64::Q7_Q8, AArch64::Q8_Q9, AArch64::Q9_Q10, AArch64::Q10_Q11, AArch64::Q11_Q12, AArch64::Q12_Q13, AArch64::Q13_Q14, AArch64::Q14_Q15, AArch64::Q15_Q16, AArch64::Q16_Q17, AArch64::Q17_Q18, AArch64::Q18_Q19, AArch64::Q19_Q20, AArch64::Q20_Q21, AArch64::Q21_Q22, AArch64::Q22_Q23, AArch64::Q23_Q24, AArch64::Q24_Q25, AArch64::Q25_Q26, AArch64::Q26_Q27, AArch64::Q27_Q28, AArch64::Q28_Q29, AArch64::Q29_Q30, AArch64::Q30_Q31, AArch64::Q31_Q0, 
  };

  // QQ Bit set.
  const uint8_t QQBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // ZPR2 Register Class...
  const MCPhysReg ZPR2[] = {
    AArch64::Z0_Z1, AArch64::Z1_Z2, AArch64::Z2_Z3, AArch64::Z3_Z4, AArch64::Z4_Z5, AArch64::Z5_Z6, AArch64::Z6_Z7, AArch64::Z7_Z8, AArch64::Z8_Z9, AArch64::Z9_Z10, AArch64::Z10_Z11, AArch64::Z11_Z12, AArch64::Z12_Z13, AArch64::Z13_Z14, AArch64::Z14_Z15, AArch64::Z15_Z16, AArch64::Z16_Z17, AArch64::Z17_Z18, AArch64::Z18_Z19, AArch64::Z19_Z20, AArch64::Z20_Z21, AArch64::Z21_Z22, AArch64::Z22_Z23, AArch64::Z23_Z24, AArch64::Z24_Z25, AArch64::Z25_Z26, AArch64::Z26_Z27, AArch64::Z27_Z28, AArch64::Z28_Z29, AArch64::Z29_Z30, AArch64::Z30_Z31, AArch64::Z31_Z0, 
  };

  // ZPR2 Bit set.
  const uint8_t ZPR2Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0x03, 
  };

  // QQ_with_dsub_in_FPR64_lo Register Class...
  const MCPhysReg QQ_with_dsub_in_FPR64_lo[] = {
    AArch64::Q0_Q1, AArch64::Q1_Q2, AArch64::Q2_Q3, AArch64::Q3_Q4, AArch64::Q4_Q5, AArch64::Q5_Q6, AArch64::Q6_Q7, AArch64::Q7_Q8, AArch64::Q8_Q9, AArch64::Q9_Q10, AArch64::Q10_Q11, AArch64::Q11_Q12, AArch64::Q12_Q13, AArch64::Q13_Q14, AArch64::Q14_Q15, AArch64::Q15_Q16, 
  };

  // QQ_with_dsub_in_FPR64_lo Bit set.
  const uint8_t QQ_with_dsub_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 
  };

  // QQ_with_qsub1_in_FPR128_lo Register Class...
  const MCPhysReg QQ_with_qsub1_in_FPR128_lo[] = {
    AArch64::Q0_Q1, AArch64::Q1_Q2, AArch64::Q2_Q3, AArch64::Q3_Q4, AArch64::Q4_Q5, AArch64::Q5_Q6, AArch64::Q6_Q7, AArch64::Q7_Q8, AArch64::Q8_Q9, AArch64::Q9_Q10, AArch64::Q10_Q11, AArch64::Q11_Q12, AArch64::Q12_Q13, AArch64::Q13_Q14, AArch64::Q14_Q15, AArch64::Q31_Q0, 
  };

  // QQ_with_qsub1_in_FPR128_lo Bit set.
  const uint8_t QQ_with_qsub1_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 0x00, 0x20, 
  };

  // ZPR2_with_dsub_in_FPR64_lo Register Class...
  const MCPhysReg ZPR2_with_dsub_in_FPR64_lo[] = {
    AArch64::Z0_Z1, AArch64::Z1_Z2, AArch64::Z2_Z3, AArch64::Z3_Z4, AArch64::Z4_Z5, AArch64::Z5_Z6, AArch64::Z6_Z7, AArch64::Z7_Z8, AArch64::Z8_Z9, AArch64::Z9_Z10, AArch64::Z10_Z11, AArch64::Z11_Z12, AArch64::Z12_Z13, AArch64::Z13_Z14, AArch64::Z14_Z15, AArch64::Z15_Z16, 
  };

  // ZPR2_with_dsub_in_FPR64_lo Bit set.
  const uint8_t ZPR2_with_dsub_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 
  };

  // ZPR2_with_zsub1_in_ZPR_4b Register Class...
  const MCPhysReg ZPR2_with_zsub1_in_ZPR_4b[] = {
    AArch64::Z0_Z1, AArch64::Z1_Z2, AArch64::Z2_Z3, AArch64::Z3_Z4, AArch64::Z4_Z5, AArch64::Z5_Z6, AArch64::Z6_Z7, AArch64::Z7_Z8, AArch64::Z8_Z9, AArch64::Z9_Z10, AArch64::Z10_Z11, AArch64::Z11_Z12, AArch64::Z12_Z13, AArch64::Z13_Z14, AArch64::Z14_Z15, AArch64::Z31_Z0, 
  };

  // ZPR2_with_zsub1_in_ZPR_4b Bit set.
  const uint8_t ZPR2_with_zsub1_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x01, 0x00, 0x02, 
  };

  // QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo Register Class...
  const MCPhysReg QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo[] = {
    AArch64::Q0_Q1, AArch64::Q1_Q2, AArch64::Q2_Q3, AArch64::Q3_Q4, AArch64::Q4_Q5, AArch64::Q5_Q6, AArch64::Q6_Q7, AArch64::Q7_Q8, AArch64::Q8_Q9, AArch64::Q9_Q10, AArch64::Q10_Q11, AArch64::Q11_Q12, AArch64::Q12_Q13, AArch64::Q13_Q14, AArch64::Q14_Q15, 
  };

  // QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo Bit set.
  const uint8_t QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 
  };

  // ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b Register Class...
  const MCPhysReg ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b[] = {
    AArch64::Z0_Z1, AArch64::Z1_Z2, AArch64::Z2_Z3, AArch64::Z3_Z4, AArch64::Z4_Z5, AArch64::Z5_Z6, AArch64::Z6_Z7, AArch64::Z7_Z8, AArch64::Z8_Z9, AArch64::Z9_Z10, AArch64::Z10_Z11, AArch64::Z11_Z12, AArch64::Z12_Z13, AArch64::Z13_Z14, AArch64::Z14_Z15, 
  };

  // ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b Bit set.
  const uint8_t ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x01, 
  };

  // ZPR2_with_zsub0_in_ZPR_3b Register Class...
  const MCPhysReg ZPR2_with_zsub0_in_ZPR_3b[] = {
    AArch64::Z0_Z1, AArch64::Z1_Z2, AArch64::Z2_Z3, AArch64::Z3_Z4, AArch64::Z4_Z5, AArch64::Z5_Z6, AArch64::Z6_Z7, AArch64::Z7_Z8, 
  };

  // ZPR2_with_zsub0_in_ZPR_3b Bit set.
  const uint8_t ZPR2_with_zsub0_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 
  };

  // ZPR2_with_zsub1_in_ZPR_3b Register Class...
  const MCPhysReg ZPR2_with_zsub1_in_ZPR_3b[] = {
    AArch64::Z0_Z1, AArch64::Z1_Z2, AArch64::Z2_Z3, AArch64::Z3_Z4, AArch64::Z4_Z5, AArch64::Z5_Z6, AArch64::Z6_Z7, AArch64::Z31_Z0, 
  };

  // ZPR2_with_zsub1_in_ZPR_3b Bit set.
  const uint8_t ZPR2_with_zsub1_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, 0x02, 
  };

  // ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b Register Class...
  const MCPhysReg ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b[] = {
    AArch64::Z0_Z1, AArch64::Z1_Z2, AArch64::Z2_Z3, AArch64::Z3_Z4, AArch64::Z4_Z5, AArch64::Z5_Z6, AArch64::Z6_Z7, 
  };

  // ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b Bit set.
  const uint8_t ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 
  };

  // MPR64 Register Class...
  const MCPhysReg MPR64[] = {
    AArch64::ZAD0, AArch64::ZAD1, AArch64::ZAD2, AArch64::ZAD3, AArch64::ZAD4, AArch64::ZAD5, AArch64::ZAD6, AArch64::ZAD7, 
  };

  // MPR64 Bit set.
  const uint8_t MPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
  };

  // QQQ Register Class...
  const MCPhysReg QQQ[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q14_Q15_Q16, AArch64::Q15_Q16_Q17, AArch64::Q16_Q17_Q18, AArch64::Q17_Q18_Q19, AArch64::Q18_Q19_Q20, AArch64::Q19_Q20_Q21, AArch64::Q20_Q21_Q22, AArch64::Q21_Q22_Q23, AArch64::Q22_Q23_Q24, AArch64::Q23_Q24_Q25, AArch64::Q24_Q25_Q26, AArch64::Q25_Q26_Q27, AArch64::Q26_Q27_Q28, AArch64::Q27_Q28_Q29, AArch64::Q28_Q29_Q30, AArch64::Q29_Q30_Q31, AArch64::Q30_Q31_Q0, AArch64::Q31_Q0_Q1, 
  };

  // QQQ Bit set.
  const uint8_t QQQBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // ZPR3 Register Class...
  const MCPhysReg ZPR3[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z7_Z8_Z9, AArch64::Z8_Z9_Z10, AArch64::Z9_Z10_Z11, AArch64::Z10_Z11_Z12, AArch64::Z11_Z12_Z13, AArch64::Z12_Z13_Z14, AArch64::Z13_Z14_Z15, AArch64::Z14_Z15_Z16, AArch64::Z15_Z16_Z17, AArch64::Z16_Z17_Z18, AArch64::Z17_Z18_Z19, AArch64::Z18_Z19_Z20, AArch64::Z19_Z20_Z21, AArch64::Z20_Z21_Z22, AArch64::Z21_Z22_Z23, AArch64::Z22_Z23_Z24, AArch64::Z23_Z24_Z25, AArch64::Z24_Z25_Z26, AArch64::Z25_Z26_Z27, AArch64::Z26_Z27_Z28, AArch64::Z27_Z28_Z29, AArch64::Z28_Z29_Z30, AArch64::Z29_Z30_Z31, AArch64::Z30_Z31_Z0, AArch64::Z31_Z0_Z1, 
  };

  // ZPR3 Bit set.
  const uint8_t ZPR3Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0x03, 
  };

  // QQQ_with_dsub_in_FPR64_lo Register Class...
  const MCPhysReg QQQ_with_dsub_in_FPR64_lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q14_Q15_Q16, AArch64::Q15_Q16_Q17, 
  };

  // QQQ_with_dsub_in_FPR64_lo Bit set.
  const uint8_t QQQ_with_dsub_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 
  };

  // QQQ_with_qsub1_in_FPR128_lo Register Class...
  const MCPhysReg QQQ_with_qsub1_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q14_Q15_Q16, AArch64::Q31_Q0_Q1, 
  };

  // QQQ_with_qsub1_in_FPR128_lo Bit set.
  const uint8_t QQQ_with_qsub1_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 0x00, 0x20, 
  };

  // QQQ_with_qsub2_in_FPR128_lo Register Class...
  const MCPhysReg QQQ_with_qsub2_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q30_Q31_Q0, AArch64::Q31_Q0_Q1, 
  };

  // QQQ_with_qsub2_in_FPR128_lo Bit set.
  const uint8_t QQQ_with_qsub2_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0x30, 
  };

  // ZPR3_with_dsub_in_FPR64_lo Register Class...
  const MCPhysReg ZPR3_with_dsub_in_FPR64_lo[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z7_Z8_Z9, AArch64::Z8_Z9_Z10, AArch64::Z9_Z10_Z11, AArch64::Z10_Z11_Z12, AArch64::Z11_Z12_Z13, AArch64::Z12_Z13_Z14, AArch64::Z13_Z14_Z15, AArch64::Z14_Z15_Z16, AArch64::Z15_Z16_Z17, 
  };

  // ZPR3_with_dsub_in_FPR64_lo Bit set.
  const uint8_t ZPR3_with_dsub_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 
  };

  // ZPR3_with_zsub1_in_ZPR_4b Register Class...
  const MCPhysReg ZPR3_with_zsub1_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z7_Z8_Z9, AArch64::Z8_Z9_Z10, AArch64::Z9_Z10_Z11, AArch64::Z10_Z11_Z12, AArch64::Z11_Z12_Z13, AArch64::Z12_Z13_Z14, AArch64::Z13_Z14_Z15, AArch64::Z14_Z15_Z16, AArch64::Z31_Z0_Z1, 
  };

  // ZPR3_with_zsub1_in_ZPR_4b Bit set.
  const uint8_t ZPR3_with_zsub1_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x01, 0x00, 0x02, 
  };

  // ZPR3_with_zsub2_in_ZPR_4b Register Class...
  const MCPhysReg ZPR3_with_zsub2_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z7_Z8_Z9, AArch64::Z8_Z9_Z10, AArch64::Z9_Z10_Z11, AArch64::Z10_Z11_Z12, AArch64::Z11_Z12_Z13, AArch64::Z12_Z13_Z14, AArch64::Z13_Z14_Z15, AArch64::Z30_Z31_Z0, AArch64::Z31_Z0_Z1, 
  };

  // ZPR3_with_zsub2_in_ZPR_4b Bit set.
  const uint8_t ZPR3_with_zsub2_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x00, 0x00, 0x03, 
  };

  // QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo Register Class...
  const MCPhysReg QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q14_Q15_Q16, 
  };

  // QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo Bit set.
  const uint8_t QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 
  };

  // QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo Register Class...
  const MCPhysReg QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q31_Q0_Q1, 
  };

  // QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo Bit set.
  const uint8_t QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0x20, 
  };

  // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b Register Class...
  const MCPhysReg ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z7_Z8_Z9, AArch64::Z8_Z9_Z10, AArch64::Z9_Z10_Z11, AArch64::Z10_Z11_Z12, AArch64::Z11_Z12_Z13, AArch64::Z12_Z13_Z14, AArch64::Z13_Z14_Z15, AArch64::Z14_Z15_Z16, 
  };

  // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b Bit set.
  const uint8_t ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x01, 
  };

  // ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b Register Class...
  const MCPhysReg ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z7_Z8_Z9, AArch64::Z8_Z9_Z10, AArch64::Z9_Z10_Z11, AArch64::Z10_Z11_Z12, AArch64::Z11_Z12_Z13, AArch64::Z12_Z13_Z14, AArch64::Z13_Z14_Z15, AArch64::Z31_Z0_Z1, 
  };

  // ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b Bit set.
  const uint8_t ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x00, 0x00, 0x02, 
  };

  // QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo Register Class...
  const MCPhysReg QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, 
  };

  // QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo Bit set.
  const uint8_t QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 
  };

  // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b Register Class...
  const MCPhysReg ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z7_Z8_Z9, AArch64::Z8_Z9_Z10, AArch64::Z9_Z10_Z11, AArch64::Z10_Z11_Z12, AArch64::Z11_Z12_Z13, AArch64::Z12_Z13_Z14, AArch64::Z13_Z14_Z15, 
  };

  // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b Bit set.
  const uint8_t ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 
  };

  // ZPR3_with_zsub0_in_ZPR_3b Register Class...
  const MCPhysReg ZPR3_with_zsub0_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z7_Z8_Z9, 
  };

  // ZPR3_with_zsub0_in_ZPR_3b Bit set.
  const uint8_t ZPR3_with_zsub0_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 
  };

  // ZPR3_with_zsub1_in_ZPR_3b Register Class...
  const MCPhysReg ZPR3_with_zsub1_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, AArch64::Z31_Z0_Z1, 
  };

  // ZPR3_with_zsub1_in_ZPR_3b Bit set.
  const uint8_t ZPR3_with_zsub1_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, 0x02, 
  };

  // ZPR3_with_zsub2_in_ZPR_3b Register Class...
  const MCPhysReg ZPR3_with_zsub2_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z30_Z31_Z0, AArch64::Z31_Z0_Z1, 
  };

  // ZPR3_with_zsub2_in_ZPR_3b Bit set.
  const uint8_t ZPR3_with_zsub2_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x03, 
  };

  // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b Register Class...
  const MCPhysReg ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z6_Z7_Z8, 
  };

  // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b Bit set.
  const uint8_t ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 
  };

  // ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b Register Class...
  const MCPhysReg ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, AArch64::Z31_Z0_Z1, 
  };

  // ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b Bit set.
  const uint8_t ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x02, 
  };

  // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b Register Class...
  const MCPhysReg ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2, AArch64::Z1_Z2_Z3, AArch64::Z2_Z3_Z4, AArch64::Z3_Z4_Z5, AArch64::Z4_Z5_Z6, AArch64::Z5_Z6_Z7, 
  };

  // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b Bit set.
  const uint8_t ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 
  };

  // QQQQ Register Class...
  const MCPhysReg QQQQ[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q14_Q15_Q16_Q17, AArch64::Q15_Q16_Q17_Q18, AArch64::Q16_Q17_Q18_Q19, AArch64::Q17_Q18_Q19_Q20, AArch64::Q18_Q19_Q20_Q21, AArch64::Q19_Q20_Q21_Q22, AArch64::Q20_Q21_Q22_Q23, AArch64::Q21_Q22_Q23_Q24, AArch64::Q22_Q23_Q24_Q25, AArch64::Q23_Q24_Q25_Q26, AArch64::Q24_Q25_Q26_Q27, AArch64::Q25_Q26_Q27_Q28, AArch64::Q26_Q27_Q28_Q29, AArch64::Q27_Q28_Q29_Q30, AArch64::Q28_Q29_Q30_Q31, AArch64::Q29_Q30_Q31_Q0, AArch64::Q30_Q31_Q0_Q1, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQQQ Bit set.
  const uint8_t QQQQBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // ZPR4 Register Class...
  const MCPhysReg ZPR4[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z13_Z14_Z15_Z16, AArch64::Z14_Z15_Z16_Z17, AArch64::Z15_Z16_Z17_Z18, AArch64::Z16_Z17_Z18_Z19, AArch64::Z17_Z18_Z19_Z20, AArch64::Z18_Z19_Z20_Z21, AArch64::Z19_Z20_Z21_Z22, AArch64::Z20_Z21_Z22_Z23, AArch64::Z21_Z22_Z23_Z24, AArch64::Z22_Z23_Z24_Z25, AArch64::Z23_Z24_Z25_Z26, AArch64::Z24_Z25_Z26_Z27, AArch64::Z25_Z26_Z27_Z28, AArch64::Z26_Z27_Z28_Z29, AArch64::Z27_Z28_Z29_Z30, AArch64::Z28_Z29_Z30_Z31, AArch64::Z29_Z30_Z31_Z0, AArch64::Z30_Z31_Z0_Z1, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4 Bit set.
  const uint8_t ZPR4Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0x03, 
  };

  // QQQQ_with_dsub_in_FPR64_lo Register Class...
  const MCPhysReg QQQQ_with_dsub_in_FPR64_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q14_Q15_Q16_Q17, AArch64::Q15_Q16_Q17_Q18, 
  };

  // QQQQ_with_dsub_in_FPR64_lo Bit set.
  const uint8_t QQQQ_with_dsub_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 
  };

  // QQQQ_with_qsub1_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_qsub1_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q14_Q15_Q16_Q17, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQQQ_with_qsub1_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_qsub1_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 0x00, 0x20, 
  };

  // QQQQ_with_qsub2_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_qsub2_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q30_Q31_Q0_Q1, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQQQ_with_qsub2_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_qsub2_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0x30, 
  };

  // QQQQ_with_qsub3_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_qsub3_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q29_Q30_Q31_Q0, AArch64::Q30_Q31_Q0_Q1, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQQQ_with_qsub3_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_qsub3_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x07, 0x00, 0x38, 
  };

  // ZPR4_with_dsub_in_FPR64_lo Register Class...
  const MCPhysReg ZPR4_with_dsub_in_FPR64_lo[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z13_Z14_Z15_Z16, AArch64::Z14_Z15_Z16_Z17, AArch64::Z15_Z16_Z17_Z18, 
  };

  // ZPR4_with_dsub_in_FPR64_lo Bit set.
  const uint8_t ZPR4_with_dsub_in_FPR64_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 
  };

  // ZPR4_with_zsub1_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_zsub1_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z13_Z14_Z15_Z16, AArch64::Z14_Z15_Z16_Z17, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub1_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_zsub1_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x01, 0x00, 0x02, 
  };

  // ZPR4_with_zsub2_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_zsub2_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z13_Z14_Z15_Z16, AArch64::Z30_Z31_Z0_Z1, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub2_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_zsub2_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x00, 0x00, 0x03, 
  };

  // ZPR4_with_zsub3_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_zsub3_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z29_Z30_Z31_Z0, AArch64::Z30_Z31_Z0_Z1, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub3_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_zsub3_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x7f, 0x00, 0x80, 0x03, 
  };

  // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q14_Q15_Q16_Q17, 
  };

  // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x1f, 
  };

  // QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0x20, 
  };

  // QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q30_Q31_Q0_Q1, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x07, 0x00, 0x30, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z13_Z14_Z15_Z16, AArch64::Z14_Z15_Z16_Z17, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x01, 
  };

  // ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z13_Z14_Z15_Z16, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x00, 0x00, 0x02, 
  };

  // ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z30_Z31_Z0_Z1, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x7f, 0x00, 0x00, 0x03, 
  };

  // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, 
  };

  // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 
  };

  // QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x07, 0x00, 0x20, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z13_Z14_Z15_Z16, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 
  };

  // ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x7f, 0x00, 0x00, 0x02, 
  };

  // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo Register Class...
  const MCPhysReg QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, 
  };

  // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo Bit set.
  const uint8_t QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x07, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b Register Class...
  const MCPhysReg ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, AArch64::Z8_Z9_Z10_Z11, AArch64::Z9_Z10_Z11_Z12, AArch64::Z10_Z11_Z12_Z13, AArch64::Z11_Z12_Z13_Z14, AArch64::Z12_Z13_Z14_Z15, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b Bit set.
  const uint8_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x7f, 
  };

  // ZPR4_with_zsub0_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_zsub0_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z7_Z8_Z9_Z10, 
  };

  // ZPR4_with_zsub0_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_zsub0_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 
  };

  // ZPR4_with_zsub1_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_zsub1_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub1_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_zsub1_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00, 0x02, 
  };

  // ZPR4_with_zsub2_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_zsub2_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z30_Z31_Z0_Z1, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub2_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_zsub2_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x03, 
  };

  // ZPR4_with_zsub3_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_zsub3_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z29_Z30_Z31_Z0, AArch64::Z30_Z31_Z0_Z1, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub3_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_zsub3_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x80, 0x03, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z6_Z7_Z8_Z9, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 
  };

  // ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x02, 
  };

  // ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z30_Z31_Z0_Z1, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x03, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z5_Z6_Z7_Z8, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 
  };

  // ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, AArch64::Z31_Z0_Z1_Z2, 
  };

  // ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x02, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b Register Class...
  const MCPhysReg ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b[] = {
    AArch64::Z0_Z1_Z2_Z3, AArch64::Z1_Z2_Z3_Z4, AArch64::Z2_Z3_Z4_Z5, AArch64::Z3_Z4_Z5_Z6, AArch64::Z4_Z5_Z6_Z7, 
  };

  // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b Bit set.
  const uint8_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 
  };

  // GPR64x8Class Register Class...
  const MCPhysReg GPR64x8Class[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class Bit set.
  const uint8_t GPR64x8ClassBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x03, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xbf, 0x03, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xdf, 0x03, 
  };

  // GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xef, 0x03, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x5f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x6f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x01, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x9f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xaf, 0x03, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xcf, 0x03, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbf, 0x01, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xdf, 0x01, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xef, 0x01, 
  };

  // GPR64x8Class_with_x8sub_1_in_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_1_in_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_1_in_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_1_in_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x1f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x2f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x4f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x8f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x5f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x6f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, 
  };

  // GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7f, 
  };

  // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xdf, 
  };

  // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xef, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x9f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xaf, 0x01, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbf, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xcf, 0x01, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, AArch64::X20_X21_X22_X23_X24_X25_X26_X27, AArch64::X22_X23_X24_X25_X26_X27_X28_FP, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x03, 
  };

  // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, 
  };

  // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x6f, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x9f, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xaf, 
  };

  // GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, 
  };

  // GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x4f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xcf, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x8f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x5f, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x4f, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X18_X19_X20_X21_X22_X23_X24_X25, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x01, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x8f, 
  };

  // GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, 
  };

  // GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1f, 
  };

  // GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, 
  };

  // GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2f, 
  };

  // GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, 
  };

  // GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0f, 
  };

  // GPR64x8Class_with_sub_32_in_GPR32arg Register Class...
  const MCPhysReg GPR64x8Class_with_sub_32_in_GPR32arg[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, AArch64::X6_X7_X8_X9_X10_X11_X12_X13, 
  };

  // GPR64x8Class_with_sub_32_in_GPR32arg Bit set.
  const uint8_t GPR64x8Class_with_sub_32_in_GPR32argBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 
  };

  // MPR32 Register Class...
  const MCPhysReg MPR32[] = {
    AArch64::ZAS0, AArch64::ZAS1, AArch64::ZAS2, AArch64::ZAS3, 
  };

  // MPR32 Bit set.
  const uint8_t MPR32Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64arg Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64arg[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, AArch64::X4_X5_X6_X7_X8_X9_X10_X11, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64arg Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64argBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 
  };

  // GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15[] = {
    AArch64::X12_X13_X14_X15_X16_X17_X18_X19, AArch64::X14_X15_X16_X17_X18_X19_X20_X21, 
  };

  // GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15 Bit set.
  const uint8_t GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15[] = {
    AArch64::X10_X11_X12_X13_X14_X15_X16_X17, AArch64::X12_X13_X14_X15_X16_X17_X18_X19, 
  };

  // GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15[] = {
    AArch64::X8_X9_X10_X11_X12_X13_X14_X15, AArch64::X10_X11_X12_X13_X14_X15_X16_X17, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64arg Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64arg[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, AArch64::X2_X3_X4_X5_X6_X7_X8_X9, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64arg Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64argBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 
  };

  // GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15[] = {
    AArch64::X6_X7_X8_X9_X10_X11_X12_X13, AArch64::X8_X9_X10_X11_X12_X13_X14_X15, 
  };

  // GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 
  };

  // GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Register Class...
  const MCPhysReg GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15[] = {
    AArch64::X6_X7_X8_X9_X10_X11_X12_X13, 
  };

  // GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15 Bit set.
  const uint8_t GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
  };

  // GPR64x8Class_with_x8sub_0_in_rtcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_0_in_rtcGPR64[] = {
    AArch64::X16_X17_X18_X19_X20_X21_X22_X23, 
  };

  // GPR64x8Class_with_x8sub_0_in_rtcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_0_in_rtcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  };

  // GPR64x8Class_with_x8sub_2_in_rtcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_2_in_rtcGPR64[] = {
    AArch64::X14_X15_X16_X17_X18_X19_X20_X21, 
  };

  // GPR64x8Class_with_x8sub_2_in_rtcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_2_in_rtcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip[] = {
    AArch64::X8_X9_X10_X11_X12_X13_X14_X15, 
  };

  // GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
  };

  // GPR64x8Class_with_x8sub_4_in_rtcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_4_in_rtcGPR64[] = {
    AArch64::X12_X13_X14_X15_X16_X17_X18_X19, 
  };

  // GPR64x8Class_with_x8sub_4_in_rtcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_4_in_rtcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 
  };

  // GPR64x8Class_with_x8sub_6_in_GPR64arg Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_6_in_GPR64arg[] = {
    AArch64::X0_X1_X2_X3_X4_X5_X6_X7, 
  };

  // GPR64x8Class_with_x8sub_6_in_GPR64arg Bit set.
  const uint8_t GPR64x8Class_with_x8sub_6_in_GPR64argBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  };

  // GPR64x8Class_with_x8sub_6_in_rtcGPR64 Register Class...
  const MCPhysReg GPR64x8Class_with_x8sub_6_in_rtcGPR64[] = {
    AArch64::X10_X11_X12_X13_X14_X15_X16_X17, 
  };

  // GPR64x8Class_with_x8sub_6_in_rtcGPR64 Bit set.
  const uint8_t GPR64x8Class_with_x8sub_6_in_rtcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 
  };

  // MPR16 Register Class...
  const MCPhysReg MPR16[] = {
    AArch64::ZAH0, AArch64::ZAH1, 
  };

  // MPR16 Bit set.
  const uint8_t MPR16Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  };

  // MPR Register Class...
  const MCPhysReg MPR[] = {
    AArch64::ZA, 
  };

  // MPR Bit set.
  const uint8_t MPRBits[] = {
    0x00, 0x04, 
  };

  // MPR8 Register Class...
  const MCPhysReg MPR8[] = {
    AArch64::ZAB0, 
  };

  // MPR8 Bit set.
  const uint8_t MPR8Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  };

} // end anonymous namespace


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
extern const char AArch64RegClassStrings[] = {
  /* 0 */ "FPR32\0"
  /* 6 */ "GPR32\0"
  /* 12 */ "MPR32\0"
  /* 18 */ "ZPR2\0"
  /* 23 */ "ZPR3\0"
  /* 28 */ "FPR64\0"
  /* 34 */ "GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64\0"
  /* 85 */ "GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64\0"
  /* 136 */ "GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64\0"
  /* 187 */ "GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64\0"
  /* 238 */ "XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64\0"
  /* 290 */ "XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64\0"
  /* 342 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64\0"
  /* 393 */ "GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64\0"
  /* 444 */ "GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64\0"
  /* 495 */ "GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64\0"
  /* 546 */ "GPR64x8Class_with_x8sub_0_in_tcGPR64\0"
  /* 583 */ "GPR64x8Class_with_x8sub_1_in_tcGPR64\0"
  /* 620 */ "XSeqPairsClass_with_sube64_in_tcGPR64\0"
  /* 658 */ "XSeqPairsClass_with_subo64_in_tcGPR64\0"
  /* 696 */ "GPR64x8Class_with_x8sub_0_in_rtcGPR64\0"
  /* 734 */ "GPR64x8Class_with_x8sub_2_in_rtcGPR64\0"
  /* 772 */ "XSeqPairsClass_with_sube64_in_rtcGPR64\0"
  /* 811 */ "GPR64x8Class_with_x8sub_4_in_rtcGPR64\0"
  /* 849 */ "GPR64x8Class_with_x8sub_6_in_rtcGPR64\0"
  /* 887 */ "MPR64\0"
  /* 893 */ "ZPR4\0"
  /* 898 */ "GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15\0"
  /* 971 */ "GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15\0"
  /* 1044 */ "GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15\0"
  /* 1158 */ "GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15\0"
  /* 1209 */ "XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15\0"
  /* 1262 */ "WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15\0"
  /* 1315 */ "FPR16\0"
  /* 1321 */ "MPR16\0"
  /* 1327 */ "FPR128\0"
  /* 1334 */ "MPR128\0"
  /* 1341 */ "FPR8\0"
  /* 1346 */ "MPR8\0"
  /* 1351 */ "DDDD\0"
  /* 1356 */ "QQQQ\0"
  /* 1361 */ "CCR\0"
  /* 1365 */ "MPR\0"
  /* 1369 */ "PPR\0"
  /* 1373 */ "ZPR\0"
  /* 1377 */ "PPR_3b\0"
  /* 1384 */ "ZPR2_with_zsub0_in_ZPR_3b\0"
  /* 1410 */ "ZPR3_with_zsub0_in_ZPR_3b\0"
  /* 1436 */ "ZPR4_with_zsub0_in_ZPR_3b\0"
  /* 1462 */ "ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b\0"
  /* 1519 */ "ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b\0"
  /* 1576 */ "ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b\0"
  /* 1633 */ "ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b\0"
  /* 1689 */ "ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b\0"
  /* 1746 */ "ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b\0"
  /* 1802 */ "ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b\0"
  /* 1859 */ "ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b\0"
  /* 1915 */ "ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b\0"
  /* 1971 */ "ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b\0"
  /* 2028 */ "ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b\0"
  /* 2085 */ "ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b\0"
  /* 2142 */ "ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b\0"
  /* 2199 */ "ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b\0"
  /* 2255 */ "ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b\0"
  /* 2312 */ "ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b\0"
  /* 2368 */ "ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b\0"
  /* 2425 */ "ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b\0"
  /* 2481 */ "ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b\0"
  /* 2537 */ "ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b\0"
  /* 2594 */ "GPR64x8Class_with_sub_32_in_GPR32arg\0"
  /* 2631 */ "XSeqPairsClass_with_sub_32_in_GPR32arg\0"
  /* 2670 */ "WSeqPairsClass_with_sube32_in_GPR32arg\0"
  /* 2709 */ "GPR64x8Class_with_x8sub_2_in_GPR64arg\0"
  /* 2747 */ "GPR64x8Class_with_x8sub_4_in_GPR64arg\0"
  /* 2785 */ "GPR64x8Class_with_x8sub_6_in_GPR64arg\0"
  /* 2823 */ "GPR32all\0"
  /* 2832 */ "GPR64all\0"
  /* 2841 */ "WSeqPairsClass_with_subo32_in_GPR32common\0"
  /* 2883 */ "XSeqPairsClass_with_subo64_in_GPR64common\0"
  /* 2925 */ "DDDD_with_dsub0_in_FPR64_lo\0"
  /* 2953 */ "DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo\0"
  /* 3013 */ "DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo\0"
  /* 3071 */ "DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo\0"
  /* 3127 */ "DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo\0"
  /* 3187 */ "DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo\0"
  /* 3247 */ "DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo\0"
  /* 3305 */ "DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo\0"
  /* 3363 */ "DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo\0"
  /* 3423 */ "DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo\0"
  /* 3483 */ "DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo\0"
  /* 3543 */ "ZPR2_with_dsub_in_FPR64_lo\0"
  /* 3570 */ "ZPR3_with_dsub_in_FPR64_lo\0"
  /* 3597 */ "ZPR4_with_dsub_in_FPR64_lo\0"
  /* 3624 */ "QQQQ_with_dsub_in_FPR64_lo\0"
  /* 3651 */ "FPR32_with_hsub_in_FPR16_lo\0"
  /* 3679 */ "QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo\0"
  /* 3739 */ "QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo\0"
  /* 3797 */ "QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo\0"
  /* 3853 */ "QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo\0"
  /* 3913 */ "QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo\0"
  /* 3975 */ "QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo\0"
  /* 4033 */ "QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo\0"
  /* 4093 */ "QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo\0"
  /* 4153 */ "QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo\0"
  /* 4215 */ "QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo\0"
  /* 4277 */ "GPR64common_and_GPR64noip\0"
  /* 4303 */ "GPR64x8Class_with_x8sub_0_in_GPR64noip\0"
  /* 4342 */ "GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip\0"
  /* 4422 */ "GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip\0"
  /* 4545 */ "XSeqPairsClass_with_sube64_in_GPR64noip\0"
  /* 4585 */ "XSeqPairsClass_with_subo64_in_GPR64noip\0"
  /* 4625 */ "GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip\0"
  /* 4748 */ "GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip\0"
  /* 4871 */ "GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip\0"
  /* 5037 */ "GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip\0"
  /* 5162 */ "GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip\0"
  /* 5244 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 5410 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 5533 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 5699 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 5822 */ "GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 5938 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 6147 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 6313 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 6479 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 6647 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 6772 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 6897 */ "GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip\0"
  /* 6979 */ "GPR32sp\0"
  /* 6987 */ "GPR64sp\0"
  /* 6995 */ "GPR64x8Class\0"
  /* 7008 */ "WSeqPairsClass\0"
  /* 7023 */ "XSeqPairsClass\0"
  /* 7038 */ "GPR32sponly\0"
  /* 7050 */ "GPR64sponly\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

extern const MCRegisterClass AArch64MCRegisterClasses[] = {
  { FPR8, FPR8Bits, 1341, 32, sizeof(FPR8Bits), AArch64::FPR8RegClassID, 8, 1, true },
  { FPR16, FPR16Bits, 1315, 32, sizeof(FPR16Bits), AArch64::FPR16RegClassID, 16, 1, true },
  { FPR16_lo, FPR16_loBits, 3670, 16, sizeof(FPR16_loBits), AArch64::FPR16_loRegClassID, 16, 1, true },
  { PPR, PPRBits, 1369, 16, sizeof(PPRBits), AArch64::PPRRegClassID, 16, 1, true },
  { PPR_3b, PPR_3bBits, 1377, 8, sizeof(PPR_3bBits), AArch64::PPR_3bRegClassID, 16, 1, true },
  { GPR32all, GPR32allBits, 2823, 33, sizeof(GPR32allBits), AArch64::GPR32allRegClassID, 32, 1, true },
  { FPR32, FPR32Bits, 0, 32, sizeof(FPR32Bits), AArch64::FPR32RegClassID, 32, 1, true },
  { GPR32, GPR32Bits, 6, 32, sizeof(GPR32Bits), AArch64::GPR32RegClassID, 32, 1, true },
  { GPR32sp, GPR32spBits, 6979, 32, sizeof(GPR32spBits), AArch64::GPR32spRegClassID, 32, 1, true },
  { GPR32common, GPR32commonBits, 2871, 31, sizeof(GPR32commonBits), AArch64::GPR32commonRegClassID, 32, 1, true },
  { FPR32_with_hsub_in_FPR16_lo, FPR32_with_hsub_in_FPR16_loBits, 3651, 16, sizeof(FPR32_with_hsub_in_FPR16_loBits), AArch64::FPR32_with_hsub_in_FPR16_loRegClassID, 32, 1, true },
  { GPR32arg, GPR32argBits, 2622, 8, sizeof(GPR32argBits), AArch64::GPR32argRegClassID, 32, 1, true },
  { MatrixIndexGPR32_12_15, MatrixIndexGPR32_12_15Bits, 948, 4, sizeof(MatrixIndexGPR32_12_15Bits), AArch64::MatrixIndexGPR32_12_15RegClassID, 32, 1, true },
  { CCR, CCRBits, 1361, 1, sizeof(CCRBits), AArch64::CCRRegClassID, 32, -1, false },
  { GPR32sponly, GPR32sponlyBits, 7038, 1, sizeof(GPR32sponlyBits), AArch64::GPR32sponlyRegClassID, 32, 1, true },
  { WSeqPairsClass, WSeqPairsClassBits, 7008, 16, sizeof(WSeqPairsClassBits), AArch64::WSeqPairsClassRegClassID, 64, 1, true },
  { WSeqPairsClass_with_subo32_in_GPR32common, WSeqPairsClass_with_subo32_in_GPR32commonBits, 2841, 15, sizeof(WSeqPairsClass_with_subo32_in_GPR32commonBits), AArch64::WSeqPairsClass_with_subo32_in_GPR32commonRegClassID, 64, 1, true },
  { WSeqPairsClass_with_sube32_in_GPR32arg, WSeqPairsClass_with_sube32_in_GPR32argBits, 2670, 4, sizeof(WSeqPairsClass_with_sube32_in_GPR32argBits), AArch64::WSeqPairsClass_with_sube32_in_GPR32argRegClassID, 64, 1, true },
  { WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15, WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15Bits, 1262, 2, sizeof(WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15Bits), AArch64::WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15RegClassID, 64, 1, true },
  { GPR64all, GPR64allBits, 2832, 33, sizeof(GPR64allBits), AArch64::GPR64allRegClassID, 64, 1, true },
  { FPR64, FPR64Bits, 28, 32, sizeof(FPR64Bits), AArch64::FPR64RegClassID, 64, 1, true },
  { GPR64, GPR64Bits, 79, 32, sizeof(GPR64Bits), AArch64::GPR64RegClassID, 64, 1, true },
  { GPR64sp, GPR64spBits, 6987, 32, sizeof(GPR64spBits), AArch64::GPR64spRegClassID, 64, 1, true },
  { GPR64common, GPR64commonBits, 2913, 31, sizeof(GPR64commonBits), AArch64::GPR64commonRegClassID, 64, 1, true },
  { GPR64noip, GPR64noipBits, 4293, 29, sizeof(GPR64noipBits), AArch64::GPR64noipRegClassID, 64, 1, true },
  { GPR64common_and_GPR64noip, GPR64common_and_GPR64noipBits, 4277, 28, sizeof(GPR64common_and_GPR64noipBits), AArch64::GPR64common_and_GPR64noipRegClassID, 64, 1, true },
  { tcGPR64, tcGPR64Bits, 77, 19, sizeof(tcGPR64Bits), AArch64::tcGPR64RegClassID, 64, 1, true },
  { GPR64noip_and_tcGPR64, GPR64noip_and_tcGPR64Bits, 63, 17, sizeof(GPR64noip_and_tcGPR64Bits), AArch64::GPR64noip_and_tcGPR64RegClassID, 64, 1, true },
  { FPR64_lo, FPR64_loBits, 2944, 16, sizeof(FPR64_loBits), AArch64::FPR64_loRegClassID, 64, 1, true },
  { GPR64arg, GPR64argBits, 2738, 8, sizeof(GPR64argBits), AArch64::GPR64argRegClassID, 64, 1, true },
  { GPR64_with_sub_32_in_MatrixIndexGPR32_12_15, GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits, 927, 4, sizeof(GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits), AArch64::GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID, 64, 1, true },
  { rtcGPR64, rtcGPR64Bits, 725, 2, sizeof(rtcGPR64Bits), AArch64::rtcGPR64RegClassID, 64, 1, true },
  { GPR64sponly, GPR64sponlyBits, 7050, 1, sizeof(GPR64sponlyBits), AArch64::GPR64sponlyRegClassID, 64, 1, true },
  { DD, DDBits, 1353, 32, sizeof(DDBits), AArch64::DDRegClassID, 128, 1, true },
  { DD_with_dsub0_in_FPR64_lo, DD_with_dsub0_in_FPR64_loBits, 2927, 16, sizeof(DD_with_dsub0_in_FPR64_loBits), AArch64::DD_with_dsub0_in_FPR64_loRegClassID, 128, 1, true },
  { DD_with_dsub1_in_FPR64_lo, DD_with_dsub1_in_FPR64_loBits, 2987, 16, sizeof(DD_with_dsub1_in_FPR64_loBits), AArch64::DD_with_dsub1_in_FPR64_loRegClassID, 128, 1, true },
  { XSeqPairsClass, XSeqPairsClassBits, 7023, 16, sizeof(XSeqPairsClassBits), AArch64::XSeqPairsClassRegClassID, 128, 1, true },
  { DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo, DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loBits, 3071, 15, sizeof(DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loBits), AArch64::DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loRegClassID, 128, 1, true },
  { XSeqPairsClass_with_subo64_in_GPR64common, XSeqPairsClass_with_subo64_in_GPR64commonBits, 2883, 15, sizeof(XSeqPairsClass_with_subo64_in_GPR64commonBits), AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClassID, 128, 1, true },
  { XSeqPairsClass_with_subo64_in_GPR64noip, XSeqPairsClass_with_subo64_in_GPR64noipBits, 4585, 15, sizeof(XSeqPairsClass_with_subo64_in_GPR64noipBits), AArch64::XSeqPairsClass_with_subo64_in_GPR64noipRegClassID, 128, 1, true },
  { XSeqPairsClass_with_sube64_in_GPR64noip, XSeqPairsClass_with_sube64_in_GPR64noipBits, 4545, 14, sizeof(XSeqPairsClass_with_sube64_in_GPR64noipBits), AArch64::XSeqPairsClass_with_sube64_in_GPR64noipRegClassID, 128, 1, true },
  { XSeqPairsClass_with_sube64_in_tcGPR64, XSeqPairsClass_with_sube64_in_tcGPR64Bits, 620, 10, sizeof(XSeqPairsClass_with_sube64_in_tcGPR64Bits), AArch64::XSeqPairsClass_with_sube64_in_tcGPR64RegClassID, 128, 1, true },
  { XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64, XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64Bits, 238, 9, sizeof(XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64Bits), AArch64::XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClassID, 128, 1, true },
  { XSeqPairsClass_with_subo64_in_tcGPR64, XSeqPairsClass_with_subo64_in_tcGPR64Bits, 658, 9, sizeof(XSeqPairsClass_with_subo64_in_tcGPR64Bits), AArch64::XSeqPairsClass_with_subo64_in_tcGPR64RegClassID, 128, 1, true },
  { XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64, XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64Bits, 290, 8, sizeof(XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64Bits), AArch64::XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64RegClassID, 128, 1, true },
  { XSeqPairsClass_with_sub_32_in_GPR32arg, XSeqPairsClass_with_sub_32_in_GPR32argBits, 2631, 4, sizeof(XSeqPairsClass_with_sub_32_in_GPR32argBits), AArch64::XSeqPairsClass_with_sub_32_in_GPR32argRegClassID, 128, 1, true },
  { XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15, XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15Bits, 1209, 2, sizeof(XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15Bits), AArch64::XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID, 128, 1, true },
  { XSeqPairsClass_with_sube64_in_rtcGPR64, XSeqPairsClass_with_sube64_in_rtcGPR64Bits, 772, 1, sizeof(XSeqPairsClass_with_sube64_in_rtcGPR64Bits), AArch64::XSeqPairsClass_with_sube64_in_rtcGPR64RegClassID, 128, 1, true },
  { FPR128, FPR128Bits, 1327, 32, sizeof(FPR128Bits), AArch64::FPR128RegClassID, 128, 1, true },
  { ZPR, ZPRBits, 1373, 32, sizeof(ZPRBits), AArch64::ZPRRegClassID, 128, 1, true },
  { FPR128_lo, FPR128_loBits, 3729, 16, sizeof(FPR128_loBits), AArch64::FPR128_loRegClassID, 128, 1, true },
  { MPR128, MPR128Bits, 1334, 16, sizeof(MPR128Bits), AArch64::MPR128RegClassID, 128, 1, true },
  { ZPR_4b, ZPR_4bBits, 2078, 16, sizeof(ZPR_4bBits), AArch64::ZPR_4bRegClassID, 128, 1, true },
  { ZPR_3b, ZPR_3bBits, 1403, 8, sizeof(ZPR_3bBits), AArch64::ZPR_3bRegClassID, 128, 1, true },
  { DDD, DDDBits, 1352, 32, sizeof(DDDBits), AArch64::DDDRegClassID, 192, 1, true },
  { DDD_with_dsub0_in_FPR64_lo, DDD_with_dsub0_in_FPR64_loBits, 2926, 16, sizeof(DDD_with_dsub0_in_FPR64_loBits), AArch64::DDD_with_dsub0_in_FPR64_loRegClassID, 192, 1, true },
  { DDD_with_dsub1_in_FPR64_lo, DDD_with_dsub1_in_FPR64_loBits, 2986, 16, sizeof(DDD_with_dsub1_in_FPR64_loBits), AArch64::DDD_with_dsub1_in_FPR64_loRegClassID, 192, 1, true },
  { DDD_with_dsub2_in_FPR64_lo, DDD_with_dsub2_in_FPR64_loBits, 3160, 16, sizeof(DDD_with_dsub2_in_FPR64_loBits), AArch64::DDD_with_dsub2_in_FPR64_loRegClassID, 192, 1, true },
  { DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo, DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loBits, 3013, 15, sizeof(DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loBits), AArch64::DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loRegClassID, 192, 1, true },
  { DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo, DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loBits, 3305, 15, sizeof(DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loBits), AArch64::DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClassID, 192, 1, true },
  { DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo, DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loBits, 3247, 14, sizeof(DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loBits), AArch64::DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClassID, 192, 1, true },
  { DDDD, DDDDBits, 1351, 32, sizeof(DDDDBits), AArch64::DDDDRegClassID, 256, 1, true },
  { DDDD_with_dsub0_in_FPR64_lo, DDDD_with_dsub0_in_FPR64_loBits, 2925, 16, sizeof(DDDD_with_dsub0_in_FPR64_loBits), AArch64::DDDD_with_dsub0_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub1_in_FPR64_lo, DDDD_with_dsub1_in_FPR64_loBits, 2985, 16, sizeof(DDDD_with_dsub1_in_FPR64_loBits), AArch64::DDDD_with_dsub1_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub2_in_FPR64_lo, DDDD_with_dsub2_in_FPR64_loBits, 3159, 16, sizeof(DDDD_with_dsub2_in_FPR64_loBits), AArch64::DDDD_with_dsub2_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub3_in_FPR64_lo, DDDD_with_dsub3_in_FPR64_loBits, 3395, 16, sizeof(DDDD_with_dsub3_in_FPR64_loBits), AArch64::DDDD_with_dsub3_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo, DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loBits, 2953, 15, sizeof(DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loBits), AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo, DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loBits, 3187, 15, sizeof(DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loBits), AArch64::DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo, DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits, 3483, 15, sizeof(DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits), AArch64::DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo, DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loBits, 3127, 14, sizeof(DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loBits), AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo, DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits, 3423, 14, sizeof(DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits), AArch64::DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID, 256, 1, true },
  { DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo, DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits, 3363, 13, sizeof(DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loBits), AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID, 256, 1, true },
  { QQ, QQBits, 1358, 32, sizeof(QQBits), AArch64::QQRegClassID, 256, 1, true },
  { ZPR2, ZPR2Bits, 18, 32, sizeof(ZPR2Bits), AArch64::ZPR2RegClassID, 256, 1, true },
  { QQ_with_dsub_in_FPR64_lo, QQ_with_dsub_in_FPR64_loBits, 3626, 16, sizeof(QQ_with_dsub_in_FPR64_loBits), AArch64::QQ_with_dsub_in_FPR64_loRegClassID, 256, 1, true },
  { QQ_with_qsub1_in_FPR128_lo, QQ_with_qsub1_in_FPR128_loBits, 3712, 16, sizeof(QQ_with_qsub1_in_FPR128_loBits), AArch64::QQ_with_qsub1_in_FPR128_loRegClassID, 256, 1, true },
  { ZPR2_with_dsub_in_FPR64_lo, ZPR2_with_dsub_in_FPR64_loBits, 3543, 16, sizeof(ZPR2_with_dsub_in_FPR64_loBits), AArch64::ZPR2_with_dsub_in_FPR64_loRegClassID, 256, 1, true },
  { ZPR2_with_zsub1_in_ZPR_4b, ZPR2_with_zsub1_in_ZPR_4bBits, 2059, 16, sizeof(ZPR2_with_zsub1_in_ZPR_4bBits), AArch64::ZPR2_with_zsub1_in_ZPR_4bRegClassID, 256, 1, true },
  { QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo, QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loBits, 3797, 15, sizeof(QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loBits), AArch64::QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loRegClassID, 256, 1, true },
  { ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b, ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bBits, 2028, 15, sizeof(ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bBits), AArch64::ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bRegClassID, 256, 1, true },
  { ZPR2_with_zsub0_in_ZPR_3b, ZPR2_with_zsub0_in_ZPR_3bBits, 1384, 8, sizeof(ZPR2_with_zsub0_in_ZPR_3bBits), AArch64::ZPR2_with_zsub0_in_ZPR_3bRegClassID, 256, 1, true },
  { ZPR2_with_zsub1_in_ZPR_3b, ZPR2_with_zsub1_in_ZPR_3bBits, 1493, 8, sizeof(ZPR2_with_zsub1_in_ZPR_3bBits), AArch64::ZPR2_with_zsub1_in_ZPR_3bRegClassID, 256, 1, true },
  { ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b, ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bBits, 1462, 7, sizeof(ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bBits), AArch64::ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bRegClassID, 256, 1, true },
  { MPR64, MPR64Bits, 887, 8, sizeof(MPR64Bits), AArch64::MPR64RegClassID, 256, 1, true },
  { QQQ, QQQBits, 1357, 32, sizeof(QQQBits), AArch64::QQQRegClassID, 384, 1, true },
  { ZPR3, ZPR3Bits, 23, 32, sizeof(ZPR3Bits), AArch64::ZPR3RegClassID, 384, 1, true },
  { QQQ_with_dsub_in_FPR64_lo, QQQ_with_dsub_in_FPR64_loBits, 3625, 16, sizeof(QQQ_with_dsub_in_FPR64_loBits), AArch64::QQQ_with_dsub_in_FPR64_loRegClassID, 384, 1, true },
  { QQQ_with_qsub1_in_FPR128_lo, QQQ_with_qsub1_in_FPR128_loBits, 3711, 16, sizeof(QQQ_with_qsub1_in_FPR128_loBits), AArch64::QQQ_with_qsub1_in_FPR128_loRegClassID, 384, 1, true },
  { QQQ_with_qsub2_in_FPR128_lo, QQQ_with_qsub2_in_FPR128_loBits, 3885, 16, sizeof(QQQ_with_qsub2_in_FPR128_loBits), AArch64::QQQ_with_qsub2_in_FPR128_loRegClassID, 384, 1, true },
  { ZPR3_with_dsub_in_FPR64_lo, ZPR3_with_dsub_in_FPR64_loBits, 3570, 16, sizeof(ZPR3_with_dsub_in_FPR64_loBits), AArch64::ZPR3_with_dsub_in_FPR64_loRegClassID, 384, 1, true },
  { ZPR3_with_zsub1_in_ZPR_4b, ZPR3_with_zsub1_in_ZPR_4bBits, 2116, 16, sizeof(ZPR3_with_zsub1_in_ZPR_4bBits), AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClassID, 384, 1, true },
  { ZPR3_with_zsub2_in_ZPR_4b, ZPR3_with_zsub2_in_ZPR_4bBits, 2229, 16, sizeof(ZPR3_with_zsub2_in_ZPR_4bBits), AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClassID, 384, 1, true },
  { QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo, QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loBits, 3739, 15, sizeof(QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loBits), AArch64::QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loRegClassID, 384, 1, true },
  { QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo, QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loBits, 4033, 15, sizeof(QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loBits), AArch64::QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loRegClassID, 384, 1, true },
  { ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b, ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bBits, 2085, 15, sizeof(ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bBits), AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClassID, 384, 1, true },
  { ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b, ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bBits, 2199, 15, sizeof(ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bBits), AArch64::ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClassID, 384, 1, true },
  { QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo, QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loBits, 3975, 14, sizeof(QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loBits), AArch64::QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loRegClassID, 384, 1, true },
  { ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b, ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bBits, 2255, 14, sizeof(ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bBits), AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClassID, 384, 1, true },
  { ZPR3_with_zsub0_in_ZPR_3b, ZPR3_with_zsub0_in_ZPR_3bBits, 1410, 8, sizeof(ZPR3_with_zsub0_in_ZPR_3bBits), AArch64::ZPR3_with_zsub0_in_ZPR_3bRegClassID, 384, 1, true },
  { ZPR3_with_zsub1_in_ZPR_3b, ZPR3_with_zsub1_in_ZPR_3bBits, 1550, 8, sizeof(ZPR3_with_zsub1_in_ZPR_3bBits), AArch64::ZPR3_with_zsub1_in_ZPR_3bRegClassID, 384, 1, true },
  { ZPR3_with_zsub2_in_ZPR_3b, ZPR3_with_zsub2_in_ZPR_3bBits, 1663, 8, sizeof(ZPR3_with_zsub2_in_ZPR_3bBits), AArch64::ZPR3_with_zsub2_in_ZPR_3bRegClassID, 384, 1, true },
  { ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b, ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bBits, 1519, 7, sizeof(ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bBits), AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bRegClassID, 384, 1, true },
  { ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b, ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bBits, 1633, 7, sizeof(ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bBits), AArch64::ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bRegClassID, 384, 1, true },
  { ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b, ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bBits, 1689, 6, sizeof(ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bBits), AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bRegClassID, 384, 1, true },
  { QQQQ, QQQQBits, 1356, 32, sizeof(QQQQBits), AArch64::QQQQRegClassID, 512, 1, true },
  { ZPR4, ZPR4Bits, 893, 32, sizeof(ZPR4Bits), AArch64::ZPR4RegClassID, 512, 1, true },
  { QQQQ_with_dsub_in_FPR64_lo, QQQQ_with_dsub_in_FPR64_loBits, 3624, 16, sizeof(QQQQ_with_dsub_in_FPR64_loBits), AArch64::QQQQ_with_dsub_in_FPR64_loRegClassID, 512, 1, true },
  { QQQQ_with_qsub1_in_FPR128_lo, QQQQ_with_qsub1_in_FPR128_loBits, 3710, 16, sizeof(QQQQ_with_qsub1_in_FPR128_loBits), AArch64::QQQQ_with_qsub1_in_FPR128_loRegClassID, 512, 1, true },
  { QQQQ_with_qsub2_in_FPR128_lo, QQQQ_with_qsub2_in_FPR128_loBits, 3884, 16, sizeof(QQQQ_with_qsub2_in_FPR128_loBits), AArch64::QQQQ_with_qsub2_in_FPR128_loRegClassID, 512, 1, true },
  { QQQQ_with_qsub3_in_FPR128_lo, QQQQ_with_qsub3_in_FPR128_loBits, 4124, 16, sizeof(QQQQ_with_qsub3_in_FPR128_loBits), AArch64::QQQQ_with_qsub3_in_FPR128_loRegClassID, 512, 1, true },
  { ZPR4_with_dsub_in_FPR64_lo, ZPR4_with_dsub_in_FPR64_loBits, 3597, 16, sizeof(ZPR4_with_dsub_in_FPR64_loBits), AArch64::ZPR4_with_dsub_in_FPR64_loRegClassID, 512, 1, true },
  { ZPR4_with_zsub1_in_ZPR_4b, ZPR4_with_zsub1_in_ZPR_4bBits, 2173, 16, sizeof(ZPR4_with_zsub1_in_ZPR_4bBits), AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClassID, 512, 1, true },
  { ZPR4_with_zsub2_in_ZPR_4b, ZPR4_with_zsub2_in_ZPR_4bBits, 2342, 16, sizeof(ZPR4_with_zsub2_in_ZPR_4bBits), AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClassID, 512, 1, true },
  { ZPR4_with_zsub3_in_ZPR_4b, ZPR4_with_zsub3_in_ZPR_4bBits, 2455, 16, sizeof(ZPR4_with_zsub3_in_ZPR_4bBits), AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClassID, 512, 1, true },
  { QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo, QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loBits, 3679, 15, sizeof(QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loBits), AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loRegClassID, 512, 1, true },
  { QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo, QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loBits, 3913, 15, sizeof(QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loBits), AArch64::QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClassID, 512, 1, true },
  { QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo, QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loBits, 4215, 15, sizeof(QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loBits), AArch64::QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID, 512, 1, true },
  { ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b, ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bBits, 2142, 15, sizeof(ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bBits), AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClassID, 512, 1, true },
  { ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b, ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bBits, 2312, 15, sizeof(ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bBits), AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClassID, 512, 1, true },
  { ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b, ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bBits, 2481, 15, sizeof(ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bBits), AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID, 512, 1, true },
  { QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo, QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loBits, 3853, 14, sizeof(QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loBits), AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClassID, 512, 1, true },
  { QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo, QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loBits, 4153, 14, sizeof(QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loBits), AArch64::QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID, 512, 1, true },
  { ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b, ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bBits, 2368, 14, sizeof(ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bBits), AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClassID, 512, 1, true },
  { ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b, ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bBits, 2425, 14, sizeof(ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bBits), AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID, 512, 1, true },
  { QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo, QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loBits, 4093, 13, sizeof(QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loBits), AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID, 512, 1, true },
  { ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b, ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bBits, 2537, 13, sizeof(ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bBits), AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID, 512, 1, true },
  { ZPR4_with_zsub0_in_ZPR_3b, ZPR4_with_zsub0_in_ZPR_3bBits, 1436, 8, sizeof(ZPR4_with_zsub0_in_ZPR_3bBits), AArch64::ZPR4_with_zsub0_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_zsub1_in_ZPR_3b, ZPR4_with_zsub1_in_ZPR_3bBits, 1607, 8, sizeof(ZPR4_with_zsub1_in_ZPR_3bBits), AArch64::ZPR4_with_zsub1_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_zsub2_in_ZPR_3b, ZPR4_with_zsub2_in_ZPR_3bBits, 1776, 8, sizeof(ZPR4_with_zsub2_in_ZPR_3bBits), AArch64::ZPR4_with_zsub2_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_zsub3_in_ZPR_3b, ZPR4_with_zsub3_in_ZPR_3bBits, 1889, 8, sizeof(ZPR4_with_zsub3_in_ZPR_3bBits), AArch64::ZPR4_with_zsub3_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b, ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bBits, 1576, 7, sizeof(ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bBits), AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b, ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bBits, 1746, 7, sizeof(ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bBits), AArch64::ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b, ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bBits, 1915, 7, sizeof(ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bBits), AArch64::ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b, ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bBits, 1802, 6, sizeof(ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bBits), AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b, ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bBits, 1859, 6, sizeof(ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bBits), AArch64::ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID, 512, 1, true },
  { ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b, ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bBits, 1971, 5, sizeof(ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bBits), AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID, 512, 1, true },
  { GPR64x8Class, GPR64x8ClassBits, 6995, 12, sizeof(GPR64x8ClassBits), AArch64::GPR64x8ClassRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_GPR64noipBits, 4303, 11, sizeof(GPR64x8Class_with_x8sub_0_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noipBits, 4383, 11, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 4709, 11, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5371, 11, sizeof(GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits, 4463, 10, sizeof(GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 4955, 10, sizeof(GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6065, 10, sizeof(GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_tcGPR64, GPR64x8Class_with_x8sub_0_in_tcGPR64Bits, 546, 10, sizeof(GPR64x8Class_with_x8sub_0_in_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 5162, 10, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6815, 10, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6897, 10, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64, GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64Bits, 34, 9, sizeof(GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits, 4342, 9, sizeof(GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 4668, 9, sizeof(GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5330, 9, sizeof(GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_1_in_tcGPR64, GPR64x8Class_with_x8sub_1_in_tcGPR64Bits, 583, 9, sizeof(GPR64x8Class_with_x8sub_1_in_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 5037, 9, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6522, 9, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6647, 9, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6772, 9, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits, 4422, 8, sizeof(GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 4914, 8, sizeof(GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6024, 8, sizeof(GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64, GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64Bits, 85, 8, sizeof(GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 4791, 8, sizeof(GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5619, 8, sizeof(GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 4625, 8, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5287, 8, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64Bits, 136, 8, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5410, 8, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6479, 8, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6356, 7, sizeof(GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 4871, 7, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5981, 7, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits, 4748, 7, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5576, 7, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64, GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64Bits, 187, 7, sizeof(GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6147, 7, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5699, 7, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5244, 7, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64Bits, 342, 7, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 6313, 6, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5938, 6, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5533, 6, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64, GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64Bits, 393, 6, sizeof(GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64, GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64Bits, 444, 6, sizeof(GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64, GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64Bits, 495, 5, sizeof(GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_sub_32_in_GPR32arg, GPR64x8Class_with_sub_32_in_GPR32argBits, 2594, 4, sizeof(GPR64x8Class_with_sub_32_in_GPR32argBits), AArch64::GPR64x8Class_with_sub_32_in_GPR32argRegClassID, 512, 1, true },
  { MPR32, MPR32Bits, 12, 4, sizeof(MPR32Bits), AArch64::MPR32RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64arg, GPR64x8Class_with_x8sub_2_in_GPR64argBits, 2709, 3, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64argBits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64argRegClassID, 512, 1, true },
  { GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15, GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15Bits, 1158, 2, sizeof(GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15Bits), AArch64::GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15, GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits, 898, 2, sizeof(GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits), AArch64::GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15, GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits, 971, 2, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64arg, GPR64x8Class_with_x8sub_4_in_GPR64argBits, 2747, 2, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64argBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64argRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15, GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits, 1085, 2, sizeof(GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits), AArch64::GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID, 512, 1, true },
  { GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15, GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits, 1044, 1, sizeof(GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Bits), AArch64::GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_0_in_rtcGPR64, GPR64x8Class_with_x8sub_0_in_rtcGPR64Bits, 696, 1, sizeof(GPR64x8Class_with_x8sub_0_in_rtcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_0_in_rtcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_2_in_rtcGPR64, GPR64x8Class_with_x8sub_2_in_rtcGPR64Bits, 734, 1, sizeof(GPR64x8Class_with_x8sub_2_in_rtcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_2_in_rtcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip, GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits, 5822, 1, sizeof(GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipBits), AArch64::GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_4_in_rtcGPR64, GPR64x8Class_with_x8sub_4_in_rtcGPR64Bits, 811, 1, sizeof(GPR64x8Class_with_x8sub_4_in_rtcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_4_in_rtcGPR64RegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_6_in_GPR64arg, GPR64x8Class_with_x8sub_6_in_GPR64argBits, 2785, 1, sizeof(GPR64x8Class_with_x8sub_6_in_GPR64argBits), AArch64::GPR64x8Class_with_x8sub_6_in_GPR64argRegClassID, 512, 1, true },
  { GPR64x8Class_with_x8sub_6_in_rtcGPR64, GPR64x8Class_with_x8sub_6_in_rtcGPR64Bits, 849, 1, sizeof(GPR64x8Class_with_x8sub_6_in_rtcGPR64Bits), AArch64::GPR64x8Class_with_x8sub_6_in_rtcGPR64RegClassID, 512, 1, true },
  { MPR16, MPR16Bits, 1321, 2, sizeof(MPR16Bits), AArch64::MPR16RegClassID, 1024, 1, true },
  { MPR, MPRBits, 1365, 1, sizeof(MPRBits), AArch64::MPRRegClassID, 2048, 1, true },
  { MPR8, MPR8Bits, 1346, 1, sizeof(MPR8Bits), AArch64::MPR8RegClassID, 2048, 1, true },
};

// AArch64 Dwarf<->LLVM register mappings.
extern const MCRegisterInfo::DwarfLLVMRegPair AArch64DwarfFlavour0Dwarf2L[] = {
  { 0U, AArch64::W0 },
  { 1U, AArch64::W1 },
  { 2U, AArch64::W2 },
  { 3U, AArch64::W3 },
  { 4U, AArch64::W4 },
  { 5U, AArch64::W5 },
  { 6U, AArch64::W6 },
  { 7U, AArch64::W7 },
  { 8U, AArch64::W8 },
  { 9U, AArch64::W9 },
  { 10U, AArch64::W10 },
  { 11U, AArch64::W11 },
  { 12U, AArch64::W12 },
  { 13U, AArch64::W13 },
  { 14U, AArch64::W14 },
  { 15U, AArch64::W15 },
  { 16U, AArch64::W16 },
  { 17U, AArch64::W17 },
  { 18U, AArch64::W18 },
  { 19U, AArch64::W19 },
  { 20U, AArch64::W20 },
  { 21U, AArch64::W21 },
  { 22U, AArch64::W22 },
  { 23U, AArch64::W23 },
  { 24U, AArch64::W24 },
  { 25U, AArch64::W25 },
  { 26U, AArch64::W26 },
  { 27U, AArch64::W27 },
  { 28U, AArch64::W28 },
  { 29U, AArch64::W29 },
  { 30U, AArch64::W30 },
  { 31U, AArch64::WSP },
  { 46U, AArch64::VG },
  { 47U, AArch64::FFR },
  { 48U, AArch64::P0 },
  { 49U, AArch64::P1 },
  { 50U, AArch64::P2 },
  { 51U, AArch64::P3 },
  { 52U, AArch64::P4 },
  { 53U, AArch64::P5 },
  { 54U, AArch64::P6 },
  { 55U, AArch64::P7 },
  { 56U, AArch64::P8 },
  { 57U, AArch64::P9 },
  { 58U, AArch64::P10 },
  { 59U, AArch64::P11 },
  { 60U, AArch64::P12 },
  { 61U, AArch64::P13 },
  { 62U, AArch64::P14 },
  { 63U, AArch64::P15 },
  { 64U, AArch64::B0 },
  { 65U, AArch64::B1 },
  { 66U, AArch64::B2 },
  { 67U, AArch64::B3 },
  { 68U, AArch64::B4 },
  { 69U, AArch64::B5 },
  { 70U, AArch64::B6 },
  { 71U, AArch64::B7 },
  { 72U, AArch64::B8 },
  { 73U, AArch64::B9 },
  { 74U, AArch64::B10 },
  { 75U, AArch64::B11 },
  { 76U, AArch64::B12 },
  { 77U, AArch64::B13 },
  { 78U, AArch64::B14 },
  { 79U, AArch64::B15 },
  { 80U, AArch64::B16 },
  { 81U, AArch64::B17 },
  { 82U, AArch64::B18 },
  { 83U, AArch64::B19 },
  { 84U, AArch64::B20 },
  { 85U, AArch64::B21 },
  { 86U, AArch64::B22 },
  { 87U, AArch64::B23 },
  { 88U, AArch64::B24 },
  { 89U, AArch64::B25 },
  { 90U, AArch64::B26 },
  { 91U, AArch64::B27 },
  { 92U, AArch64::B28 },
  { 93U, AArch64::B29 },
  { 94U, AArch64::B30 },
  { 95U, AArch64::B31 },
  { 96U, AArch64::Z0 },
  { 97U, AArch64::Z1 },
  { 98U, AArch64::Z2 },
  { 99U, AArch64::Z3 },
  { 100U, AArch64::Z4 },
  { 101U, AArch64::Z5 },
  { 102U, AArch64::Z6 },
  { 103U, AArch64::Z7 },
  { 104U, AArch64::Z8 },
  { 105U, AArch64::Z9 },
  { 106U, AArch64::Z10 },
  { 107U, AArch64::Z11 },
  { 108U, AArch64::Z12 },
  { 109U, AArch64::Z13 },
  { 110U, AArch64::Z14 },
  { 111U, AArch64::Z15 },
  { 112U, AArch64::Z16 },
  { 113U, AArch64::Z17 },
  { 114U, AArch64::Z18 },
  { 115U, AArch64::Z19 },
  { 116U, AArch64::Z20 },
  { 117U, AArch64::Z21 },
  { 118U, AArch64::Z22 },
  { 119U, AArch64::Z23 },
  { 120U, AArch64::Z24 },
  { 121U, AArch64::Z25 },
  { 122U, AArch64::Z26 },
  { 123U, AArch64::Z27 },
  { 124U, AArch64::Z28 },
  { 125U, AArch64::Z29 },
  { 126U, AArch64::Z30 },
  { 127U, AArch64::Z31 },
};
extern const unsigned AArch64DwarfFlavour0Dwarf2LSize = array_lengthof(AArch64DwarfFlavour0Dwarf2L);

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64EHFlavour0Dwarf2L[] = {
  { 0U, AArch64::W0 },
  { 1U, AArch64::W1 },
  { 2U, AArch64::W2 },
  { 3U, AArch64::W3 },
  { 4U, AArch64::W4 },
  { 5U, AArch64::W5 },
  { 6U, AArch64::W6 },
  { 7U, AArch64::W7 },
  { 8U, AArch64::W8 },
  { 9U, AArch64::W9 },
  { 10U, AArch64::W10 },
  { 11U, AArch64::W11 },
  { 12U, AArch64::W12 },
  { 13U, AArch64::W13 },
  { 14U, AArch64::W14 },
  { 15U, AArch64::W15 },
  { 16U, AArch64::W16 },
  { 17U, AArch64::W17 },
  { 18U, AArch64::W18 },
  { 19U, AArch64::W19 },
  { 20U, AArch64::W20 },
  { 21U, AArch64::W21 },
  { 22U, AArch64::W22 },
  { 23U, AArch64::W23 },
  { 24U, AArch64::W24 },
  { 25U, AArch64::W25 },
  { 26U, AArch64::W26 },
  { 27U, AArch64::W27 },
  { 28U, AArch64::W28 },
  { 29U, AArch64::W29 },
  { 30U, AArch64::W30 },
  { 31U, AArch64::WSP },
  { 46U, AArch64::VG },
  { 47U, AArch64::FFR },
  { 48U, AArch64::P0 },
  { 49U, AArch64::P1 },
  { 50U, AArch64::P2 },
  { 51U, AArch64::P3 },
  { 52U, AArch64::P4 },
  { 53U, AArch64::P5 },
  { 54U, AArch64::P6 },
  { 55U, AArch64::P7 },
  { 56U, AArch64::P8 },
  { 57U, AArch64::P9 },
  { 58U, AArch64::P10 },
  { 59U, AArch64::P11 },
  { 60U, AArch64::P12 },
  { 61U, AArch64::P13 },
  { 62U, AArch64::P14 },
  { 63U, AArch64::P15 },
  { 64U, AArch64::B0 },
  { 65U, AArch64::B1 },
  { 66U, AArch64::B2 },
  { 67U, AArch64::B3 },
  { 68U, AArch64::B4 },
  { 69U, AArch64::B5 },
  { 70U, AArch64::B6 },
  { 71U, AArch64::B7 },
  { 72U, AArch64::B8 },
  { 73U, AArch64::B9 },
  { 74U, AArch64::B10 },
  { 75U, AArch64::B11 },
  { 76U, AArch64::B12 },
  { 77U, AArch64::B13 },
  { 78U, AArch64::B14 },
  { 79U, AArch64::B15 },
  { 80U, AArch64::B16 },
  { 81U, AArch64::B17 },
  { 82U, AArch64::B18 },
  { 83U, AArch64::B19 },
  { 84U, AArch64::B20 },
  { 85U, AArch64::B21 },
  { 86U, AArch64::B22 },
  { 87U, AArch64::B23 },
  { 88U, AArch64::B24 },
  { 89U, AArch64::B25 },
  { 90U, AArch64::B26 },
  { 91U, AArch64::B27 },
  { 92U, AArch64::B28 },
  { 93U, AArch64::B29 },
  { 94U, AArch64::B30 },
  { 95U, AArch64::B31 },
  { 96U, AArch64::Z0 },
  { 97U, AArch64::Z1 },
  { 98U, AArch64::Z2 },
  { 99U, AArch64::Z3 },
  { 100U, AArch64::Z4 },
  { 101U, AArch64::Z5 },
  { 102U, AArch64::Z6 },
  { 103U, AArch64::Z7 },
  { 104U, AArch64::Z8 },
  { 105U, AArch64::Z9 },
  { 106U, AArch64::Z10 },
  { 107U, AArch64::Z11 },
  { 108U, AArch64::Z12 },
  { 109U, AArch64::Z13 },
  { 110U, AArch64::Z14 },
  { 111U, AArch64::Z15 },
  { 112U, AArch64::Z16 },
  { 113U, AArch64::Z17 },
  { 114U, AArch64::Z18 },
  { 115U, AArch64::Z19 },
  { 116U, AArch64::Z20 },
  { 117U, AArch64::Z21 },
  { 118U, AArch64::Z22 },
  { 119U, AArch64::Z23 },
  { 120U, AArch64::Z24 },
  { 121U, AArch64::Z25 },
  { 122U, AArch64::Z26 },
  { 123U, AArch64::Z27 },
  { 124U, AArch64::Z28 },
  { 125U, AArch64::Z29 },
  { 126U, AArch64::Z30 },
  { 127U, AArch64::Z31 },
};
extern const unsigned AArch64EHFlavour0Dwarf2LSize = array_lengthof(AArch64EHFlavour0Dwarf2L);

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64DwarfFlavour0L2Dwarf[] = {
  { AArch64::FFR, 47U },
  { AArch64::FP, 29U },
  { AArch64::LR, 30U },
  { AArch64::SP, 31U },
  { AArch64::VG, 46U },
  { AArch64::WSP, 31U },
  { AArch64::WZR, 31U },
  { AArch64::XZR, 31U },
  { AArch64::B0, 64U },
  { AArch64::B1, 65U },
  { AArch64::B2, 66U },
  { AArch64::B3, 67U },
  { AArch64::B4, 68U },
  { AArch64::B5, 69U },
  { AArch64::B6, 70U },
  { AArch64::B7, 71U },
  { AArch64::B8, 72U },
  { AArch64::B9, 73U },
  { AArch64::B10, 74U },
  { AArch64::B11, 75U },
  { AArch64::B12, 76U },
  { AArch64::B13, 77U },
  { AArch64::B14, 78U },
  { AArch64::B15, 79U },
  { AArch64::B16, 80U },
  { AArch64::B17, 81U },
  { AArch64::B18, 82U },
  { AArch64::B19, 83U },
  { AArch64::B20, 84U },
  { AArch64::B21, 85U },
  { AArch64::B22, 86U },
  { AArch64::B23, 87U },
  { AArch64::B24, 88U },
  { AArch64::B25, 89U },
  { AArch64::B26, 90U },
  { AArch64::B27, 91U },
  { AArch64::B28, 92U },
  { AArch64::B29, 93U },
  { AArch64::B30, 94U },
  { AArch64::B31, 95U },
  { AArch64::D0, 64U },
  { AArch64::D1, 65U },
  { AArch64::D2, 66U },
  { AArch64::D3, 67U },
  { AArch64::D4, 68U },
  { AArch64::D5, 69U },
  { AArch64::D6, 70U },
  { AArch64::D7, 71U },
  { AArch64::D8, 72U },
  { AArch64::D9, 73U },
  { AArch64::D10, 74U },
  { AArch64::D11, 75U },
  { AArch64::D12, 76U },
  { AArch64::D13, 77U },
  { AArch64::D14, 78U },
  { AArch64::D15, 79U },
  { AArch64::D16, 80U },
  { AArch64::D17, 81U },
  { AArch64::D18, 82U },
  { AArch64::D19, 83U },
  { AArch64::D20, 84U },
  { AArch64::D21, 85U },
  { AArch64::D22, 86U },
  { AArch64::D23, 87U },
  { AArch64::D24, 88U },
  { AArch64::D25, 89U },
  { AArch64::D26, 90U },
  { AArch64::D27, 91U },
  { AArch64::D28, 92U },
  { AArch64::D29, 93U },
  { AArch64::D30, 94U },
  { AArch64::D31, 95U },
  { AArch64::H0, 64U },
  { AArch64::H1, 65U },
  { AArch64::H2, 66U },
  { AArch64::H3, 67U },
  { AArch64::H4, 68U },
  { AArch64::H5, 69U },
  { AArch64::H6, 70U },
  { AArch64::H7, 71U },
  { AArch64::H8, 72U },
  { AArch64::H9, 73U },
  { AArch64::H10, 74U },
  { AArch64::H11, 75U },
  { AArch64::H12, 76U },
  { AArch64::H13, 77U },
  { AArch64::H14, 78U },
  { AArch64::H15, 79U },
  { AArch64::H16, 80U },
  { AArch64::H17, 81U },
  { AArch64::H18, 82U },
  { AArch64::H19, 83U },
  { AArch64::H20, 84U },
  { AArch64::H21, 85U },
  { AArch64::H22, 86U },
  { AArch64::H23, 87U },
  { AArch64::H24, 88U },
  { AArch64::H25, 89U },
  { AArch64::H26, 90U },
  { AArch64::H27, 91U },
  { AArch64::H28, 92U },
  { AArch64::H29, 93U },
  { AArch64::H30, 94U },
  { AArch64::H31, 95U },
  { AArch64::P0, 48U },
  { AArch64::P1, 49U },
  { AArch64::P2, 50U },
  { AArch64::P3, 51U },
  { AArch64::P4, 52U },
  { AArch64::P5, 53U },
  { AArch64::P6, 54U },
  { AArch64::P7, 55U },
  { AArch64::P8, 56U },
  { AArch64::P9, 57U },
  { AArch64::P10, 58U },
  { AArch64::P11, 59U },
  { AArch64::P12, 60U },
  { AArch64::P13, 61U },
  { AArch64::P14, 62U },
  { AArch64::P15, 63U },
  { AArch64::Q0, 64U },
  { AArch64::Q1, 65U },
  { AArch64::Q2, 66U },
  { AArch64::Q3, 67U },
  { AArch64::Q4, 68U },
  { AArch64::Q5, 69U },
  { AArch64::Q6, 70U },
  { AArch64::Q7, 71U },
  { AArch64::Q8, 72U },
  { AArch64::Q9, 73U },
  { AArch64::Q10, 74U },
  { AArch64::Q11, 75U },
  { AArch64::Q12, 76U },
  { AArch64::Q13, 77U },
  { AArch64::Q14, 78U },
  { AArch64::Q15, 79U },
  { AArch64::Q16, 80U },
  { AArch64::Q17, 81U },
  { AArch64::Q18, 82U },
  { AArch64::Q19, 83U },
  { AArch64::Q20, 84U },
  { AArch64::Q21, 85U },
  { AArch64::Q22, 86U },
  { AArch64::Q23, 87U },
  { AArch64::Q24, 88U },
  { AArch64::Q25, 89U },
  { AArch64::Q26, 90U },
  { AArch64::Q27, 91U },
  { AArch64::Q28, 92U },
  { AArch64::Q29, 93U },
  { AArch64::Q30, 94U },
  { AArch64::Q31, 95U },
  { AArch64::S0, 64U },
  { AArch64::S1, 65U },
  { AArch64::S2, 66U },
  { AArch64::S3, 67U },
  { AArch64::S4, 68U },
  { AArch64::S5, 69U },
  { AArch64::S6, 70U },
  { AArch64::S7, 71U },
  { AArch64::S8, 72U },
  { AArch64::S9, 73U },
  { AArch64::S10, 74U },
  { AArch64::S11, 75U },
  { AArch64::S12, 76U },
  { AArch64::S13, 77U },
  { AArch64::S14, 78U },
  { AArch64::S15, 79U },
  { AArch64::S16, 80U },
  { AArch64::S17, 81U },
  { AArch64::S18, 82U },
  { AArch64::S19, 83U },
  { AArch64::S20, 84U },
  { AArch64::S21, 85U },
  { AArch64::S22, 86U },
  { AArch64::S23, 87U },
  { AArch64::S24, 88U },
  { AArch64::S25, 89U },
  { AArch64::S26, 90U },
  { AArch64::S27, 91U },
  { AArch64::S28, 92U },
  { AArch64::S29, 93U },
  { AArch64::S30, 94U },
  { AArch64::S31, 95U },
  { AArch64::W0, 0U },
  { AArch64::W1, 1U },
  { AArch64::W2, 2U },
  { AArch64::W3, 3U },
  { AArch64::W4, 4U },
  { AArch64::W5, 5U },
  { AArch64::W6, 6U },
  { AArch64::W7, 7U },
  { AArch64::W8, 8U },
  { AArch64::W9, 9U },
  { AArch64::W10, 10U },
  { AArch64::W11, 11U },
  { AArch64::W12, 12U },
  { AArch64::W13, 13U },
  { AArch64::W14, 14U },
  { AArch64::W15, 15U },
  { AArch64::W16, 16U },
  { AArch64::W17, 17U },
  { AArch64::W18, 18U },
  { AArch64::W19, 19U },
  { AArch64::W20, 20U },
  { AArch64::W21, 21U },
  { AArch64::W22, 22U },
  { AArch64::W23, 23U },
  { AArch64::W24, 24U },
  { AArch64::W25, 25U },
  { AArch64::W26, 26U },
  { AArch64::W27, 27U },
  { AArch64::W28, 28U },
  { AArch64::W29, 29U },
  { AArch64::W30, 30U },
  { AArch64::X0, 0U },
  { AArch64::X1, 1U },
  { AArch64::X2, 2U },
  { AArch64::X3, 3U },
  { AArch64::X4, 4U },
  { AArch64::X5, 5U },
  { AArch64::X6, 6U },
  { AArch64::X7, 7U },
  { AArch64::X8, 8U },
  { AArch64::X9, 9U },
  { AArch64::X10, 10U },
  { AArch64::X11, 11U },
  { AArch64::X12, 12U },
  { AArch64::X13, 13U },
  { AArch64::X14, 14U },
  { AArch64::X15, 15U },
  { AArch64::X16, 16U },
  { AArch64::X17, 17U },
  { AArch64::X18, 18U },
  { AArch64::X19, 19U },
  { AArch64::X20, 20U },
  { AArch64::X21, 21U },
  { AArch64::X22, 22U },
  { AArch64::X23, 23U },
  { AArch64::X24, 24U },
  { AArch64::X25, 25U },
  { AArch64::X26, 26U },
  { AArch64::X27, 27U },
  { AArch64::X28, 28U },
  { AArch64::Z0, 96U },
  { AArch64::Z1, 97U },
  { AArch64::Z2, 98U },
  { AArch64::Z3, 99U },
  { AArch64::Z4, 100U },
  { AArch64::Z5, 101U },
  { AArch64::Z6, 102U },
  { AArch64::Z7, 103U },
  { AArch64::Z8, 104U },
  { AArch64::Z9, 105U },
  { AArch64::Z10, 106U },
  { AArch64::Z11, 107U },
  { AArch64::Z12, 108U },
  { AArch64::Z13, 109U },
  { AArch64::Z14, 110U },
  { AArch64::Z15, 111U },
  { AArch64::Z16, 112U },
  { AArch64::Z17, 113U },
  { AArch64::Z18, 114U },
  { AArch64::Z19, 115U },
  { AArch64::Z20, 116U },
  { AArch64::Z21, 117U },
  { AArch64::Z22, 118U },
  { AArch64::Z23, 119U },
  { AArch64::Z24, 120U },
  { AArch64::Z25, 121U },
  { AArch64::Z26, 122U },
  { AArch64::Z27, 123U },
  { AArch64::Z28, 124U },
  { AArch64::Z29, 125U },
  { AArch64::Z30, 126U },
  { AArch64::Z31, 127U },
};
extern const unsigned AArch64DwarfFlavour0L2DwarfSize = array_lengthof(AArch64DwarfFlavour0L2Dwarf);

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64EHFlavour0L2Dwarf[] = {
  { AArch64::FFR, 47U },
  { AArch64::FP, 29U },
  { AArch64::LR, 30U },
  { AArch64::SP, 31U },
  { AArch64::VG, 46U },
  { AArch64::WSP, 31U },
  { AArch64::WZR, 31U },
  { AArch64::XZR, 31U },
  { AArch64::B0, 64U },
  { AArch64::B1, 65U },
  { AArch64::B2, 66U },
  { AArch64::B3, 67U },
  { AArch64::B4, 68U },
  { AArch64::B5, 69U },
  { AArch64::B6, 70U },
  { AArch64::B7, 71U },
  { AArch64::B8, 72U },
  { AArch64::B9, 73U },
  { AArch64::B10, 74U },
  { AArch64::B11, 75U },
  { AArch64::B12, 76U },
  { AArch64::B13, 77U },
  { AArch64::B14, 78U },
  { AArch64::B15, 79U },
  { AArch64::B16, 80U },
  { AArch64::B17, 81U },
  { AArch64::B18, 82U },
  { AArch64::B19, 83U },
  { AArch64::B20, 84U },
  { AArch64::B21, 85U },
  { AArch64::B22, 86U },
  { AArch64::B23, 87U },
  { AArch64::B24, 88U },
  { AArch64::B25, 89U },
  { AArch64::B26, 90U },
  { AArch64::B27, 91U },
  { AArch64::B28, 92U },
  { AArch64::B29, 93U },
  { AArch64::B30, 94U },
  { AArch64::B31, 95U },
  { AArch64::D0, 64U },
  { AArch64::D1, 65U },
  { AArch64::D2, 66U },
  { AArch64::D3, 67U },
  { AArch64::D4, 68U },
  { AArch64::D5, 69U },
  { AArch64::D6, 70U },
  { AArch64::D7, 71U },
  { AArch64::D8, 72U },
  { AArch64::D9, 73U },
  { AArch64::D10, 74U },
  { AArch64::D11, 75U },
  { AArch64::D12, 76U },
  { AArch64::D13, 77U },
  { AArch64::D14, 78U },
  { AArch64::D15, 79U },
  { AArch64::D16, 80U },
  { AArch64::D17, 81U },
  { AArch64::D18, 82U },
  { AArch64::D19, 83U },
  { AArch64::D20, 84U },
  { AArch64::D21, 85U },
  { AArch64::D22, 86U },
  { AArch64::D23, 87U },
  { AArch64::D24, 88U },
  { AArch64::D25, 89U },
  { AArch64::D26, 90U },
  { AArch64::D27, 91U },
  { AArch64::D28, 92U },
  { AArch64::D29, 93U },
  { AArch64::D30, 94U },
  { AArch64::D31, 95U },
  { AArch64::H0, 64U },
  { AArch64::H1, 65U },
  { AArch64::H2, 66U },
  { AArch64::H3, 67U },
  { AArch64::H4, 68U },
  { AArch64::H5, 69U },
  { AArch64::H6, 70U },
  { AArch64::H7, 71U },
  { AArch64::H8, 72U },
  { AArch64::H9, 73U },
  { AArch64::H10, 74U },
  { AArch64::H11, 75U },
  { AArch64::H12, 76U },
  { AArch64::H13, 77U },
  { AArch64::H14, 78U },
  { AArch64::H15, 79U },
  { AArch64::H16, 80U },
  { AArch64::H17, 81U },
  { AArch64::H18, 82U },
  { AArch64::H19, 83U },
  { AArch64::H20, 84U },
  { AArch64::H21, 85U },
  { AArch64::H22, 86U },
  { AArch64::H23, 87U },
  { AArch64::H24, 88U },
  { AArch64::H25, 89U },
  { AArch64::H26, 90U },
  { AArch64::H27, 91U },
  { AArch64::H28, 92U },
  { AArch64::H29, 93U },
  { AArch64::H30, 94U },
  { AArch64::H31, 95U },
  { AArch64::P0, 48U },
  { AArch64::P1, 49U },
  { AArch64::P2, 50U },
  { AArch64::P3, 51U },
  { AArch64::P4, 52U },
  { AArch64::P5, 53U },
  { AArch64::P6, 54U },
  { AArch64::P7, 55U },
  { AArch64::P8, 56U },
  { AArch64::P9, 57U },
  { AArch64::P10, 58U },
  { AArch64::P11, 59U },
  { AArch64::P12, 60U },
  { AArch64::P13, 61U },
  { AArch64::P14, 62U },
  { AArch64::P15, 63U },
  { AArch64::Q0, 64U },
  { AArch64::Q1, 65U },
  { AArch64::Q2, 66U },
  { AArch64::Q3, 67U },
  { AArch64::Q4, 68U },
  { AArch64::Q5, 69U },
  { AArch64::Q6, 70U },
  { AArch64::Q7, 71U },
  { AArch64::Q8, 72U },
  { AArch64::Q9, 73U },
  { AArch64::Q10, 74U },
  { AArch64::Q11, 75U },
  { AArch64::Q12, 76U },
  { AArch64::Q13, 77U },
  { AArch64::Q14, 78U },
  { AArch64::Q15, 79U },
  { AArch64::Q16, 80U },
  { AArch64::Q17, 81U },
  { AArch64::Q18, 82U },
  { AArch64::Q19, 83U },
  { AArch64::Q20, 84U },
  { AArch64::Q21, 85U },
  { AArch64::Q22, 86U },
  { AArch64::Q23, 87U },
  { AArch64::Q24, 88U },
  { AArch64::Q25, 89U },
  { AArch64::Q26, 90U },
  { AArch64::Q27, 91U },
  { AArch64::Q28, 92U },
  { AArch64::Q29, 93U },
  { AArch64::Q30, 94U },
  { AArch64::Q31, 95U },
  { AArch64::S0, 64U },
  { AArch64::S1, 65U },
  { AArch64::S2, 66U },
  { AArch64::S3, 67U },
  { AArch64::S4, 68U },
  { AArch64::S5, 69U },
  { AArch64::S6, 70U },
  { AArch64::S7, 71U },
  { AArch64::S8, 72U },
  { AArch64::S9, 73U },
  { AArch64::S10, 74U },
  { AArch64::S11, 75U },
  { AArch64::S12, 76U },
  { AArch64::S13, 77U },
  { AArch64::S14, 78U },
  { AArch64::S15, 79U },
  { AArch64::S16, 80U },
  { AArch64::S17, 81U },
  { AArch64::S18, 82U },
  { AArch64::S19, 83U },
  { AArch64::S20, 84U },
  { AArch64::S21, 85U },
  { AArch64::S22, 86U },
  { AArch64::S23, 87U },
  { AArch64::S24, 88U },
  { AArch64::S25, 89U },
  { AArch64::S26, 90U },
  { AArch64::S27, 91U },
  { AArch64::S28, 92U },
  { AArch64::S29, 93U },
  { AArch64::S30, 94U },
  { AArch64::S31, 95U },
  { AArch64::W0, 0U },
  { AArch64::W1, 1U },
  { AArch64::W2, 2U },
  { AArch64::W3, 3U },
  { AArch64::W4, 4U },
  { AArch64::W5, 5U },
  { AArch64::W6, 6U },
  { AArch64::W7, 7U },
  { AArch64::W8, 8U },
  { AArch64::W9, 9U },
  { AArch64::W10, 10U },
  { AArch64::W11, 11U },
  { AArch64::W12, 12U },
  { AArch64::W13, 13U },
  { AArch64::W14, 14U },
  { AArch64::W15, 15U },
  { AArch64::W16, 16U },
  { AArch64::W17, 17U },
  { AArch64::W18, 18U },
  { AArch64::W19, 19U },
  { AArch64::W20, 20U },
  { AArch64::W21, 21U },
  { AArch64::W22, 22U },
  { AArch64::W23, 23U },
  { AArch64::W24, 24U },
  { AArch64::W25, 25U },
  { AArch64::W26, 26U },
  { AArch64::W27, 27U },
  { AArch64::W28, 28U },
  { AArch64::W29, 29U },
  { AArch64::W30, 30U },
  { AArch64::X0, 0U },
  { AArch64::X1, 1U },
  { AArch64::X2, 2U },
  { AArch64::X3, 3U },
  { AArch64::X4, 4U },
  { AArch64::X5, 5U },
  { AArch64::X6, 6U },
  { AArch64::X7, 7U },
  { AArch64::X8, 8U },
  { AArch64::X9, 9U },
  { AArch64::X10, 10U },
  { AArch64::X11, 11U },
  { AArch64::X12, 12U },
  { AArch64::X13, 13U },
  { AArch64::X14, 14U },
  { AArch64::X15, 15U },
  { AArch64::X16, 16U },
  { AArch64::X17, 17U },
  { AArch64::X18, 18U },
  { AArch64::X19, 19U },
  { AArch64::X20, 20U },
  { AArch64::X21, 21U },
  { AArch64::X22, 22U },
  { AArch64::X23, 23U },
  { AArch64::X24, 24U },
  { AArch64::X25, 25U },
  { AArch64::X26, 26U },
  { AArch64::X27, 27U },
  { AArch64::X28, 28U },
  { AArch64::Z0, 96U },
  { AArch64::Z1, 97U },
  { AArch64::Z2, 98U },
  { AArch64::Z3, 99U },
  { AArch64::Z4, 100U },
  { AArch64::Z5, 101U },
  { AArch64::Z6, 102U },
  { AArch64::Z7, 103U },
  { AArch64::Z8, 104U },
  { AArch64::Z9, 105U },
  { AArch64::Z10, 106U },
  { AArch64::Z11, 107U },
  { AArch64::Z12, 108U },
  { AArch64::Z13, 109U },
  { AArch64::Z14, 110U },
  { AArch64::Z15, 111U },
  { AArch64::Z16, 112U },
  { AArch64::Z17, 113U },
  { AArch64::Z18, 114U },
  { AArch64::Z19, 115U },
  { AArch64::Z20, 116U },
  { AArch64::Z21, 117U },
  { AArch64::Z22, 118U },
  { AArch64::Z23, 119U },
  { AArch64::Z24, 120U },
  { AArch64::Z25, 121U },
  { AArch64::Z26, 122U },
  { AArch64::Z27, 123U },
  { AArch64::Z28, 124U },
  { AArch64::Z29, 125U },
  { AArch64::Z30, 126U },
  { AArch64::Z31, 127U },
};
extern const unsigned AArch64EHFlavour0L2DwarfSize = array_lengthof(AArch64EHFlavour0L2Dwarf);

extern const uint16_t AArch64RegEncodingTable[] = {
  0,
  0,
  29,
  30,
  0,
  31,
  0,
  31,
  31,
  31,
  0,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  0,
  1,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  0,
  1,
  2,
  3,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  22,
  0,
  2,
  4,
  6,
  8,
  10,
  12,
  14,
  16,
  18,
  20,
  30,
  0,
  2,
  4,
  6,
  8,
  10,
  12,
  14,
  16,
  18,
  20,
  22,
  24,
  26,
  28,
  30,
  28,
  0,
  2,
  4,
  6,
  8,
  10,
  12,
  14,
  16,
  18,
  20,
  22,
  24,
  26,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
};
static inline void InitAArch64MCRegisterInfo(MCRegisterInfo *RI, unsigned RA, unsigned DwarfFlavour = 0, unsigned EHFlavour = 0, unsigned PC = 0) {
  RI->InitMCRegisterInfo(AArch64RegDesc, 674, RA, PC, AArch64MCRegisterClasses, 202, AArch64RegUnitRoots, 132, AArch64RegDiffLists, AArch64LaneMaskLists, AArch64RegStrings, AArch64RegClassStrings, AArch64SubRegIdxLists, 152,
AArch64SubRegIdxRanges, AArch64RegEncodingTable);

  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapDwarfRegsToLLVMRegs(AArch64DwarfFlavour0Dwarf2L, AArch64DwarfFlavour0Dwarf2LSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapDwarfRegsToLLVMRegs(AArch64EHFlavour0Dwarf2L, AArch64EHFlavour0Dwarf2LSize, true);
    break;
  }
  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapLLVMRegsToDwarfRegs(AArch64DwarfFlavour0L2Dwarf, AArch64DwarfFlavour0L2DwarfSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapLLVMRegsToDwarfRegs(AArch64EHFlavour0L2Dwarf, AArch64EHFlavour0L2DwarfSize, true);
    break;
  }
}

} // end namespace llvm

#endif // GET_REGINFO_MC_DESC

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Register Information Header Fragment                                       *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_HEADER
#undef GET_REGINFO_HEADER

#include "llvm/CodeGen/TargetRegisterInfo.h"

namespace llvm {

class AArch64FrameLowering;

struct AArch64GenRegisterInfo : public TargetRegisterInfo {
  explicit AArch64GenRegisterInfo(unsigned RA, unsigned D = 0, unsigned E = 0,
      unsigned PC = 0, unsigned HwMode = 0);
  unsigned composeSubRegIndicesImpl(unsigned, unsigned) const override;
  LaneBitmask composeSubRegIndexLaneMaskImpl(unsigned, LaneBitmask) const override;
  LaneBitmask reverseComposeSubRegIndexLaneMaskImpl(unsigned, LaneBitmask) const override;
  const TargetRegisterClass *getSubClassWithSubReg(const TargetRegisterClass *, unsigned) const override;
  const RegClassWeight &getRegClassWeight(const TargetRegisterClass *RC) const override;
  unsigned getRegUnitWeight(unsigned RegUnit) const override;
  unsigned getNumRegPressureSets() const override;
  const char *getRegPressureSetName(unsigned Idx) const override;
  unsigned getRegPressureSetLimit(const MachineFunction &MF, unsigned Idx) const override;
  const int *getRegClassPressureSets(const TargetRegisterClass *RC) const override;
  const int *getRegUnitPressureSets(unsigned RegUnit) const override;
  ArrayRef<const char *> getRegMaskNames() const override;
  ArrayRef<const uint32_t *> getRegMasks() const override;
  /// Devirtualized TargetFrameLowering.
  static const AArch64FrameLowering *getFrameLowering(
      const MachineFunction &MF);
};

namespace AArch64 { // Register classes
  extern const TargetRegisterClass FPR8RegClass;
  extern const TargetRegisterClass FPR16RegClass;
  extern const TargetRegisterClass FPR16_loRegClass;
  extern const TargetRegisterClass PPRRegClass;
  extern const TargetRegisterClass PPR_3bRegClass;
  extern const TargetRegisterClass GPR32allRegClass;
  extern const TargetRegisterClass FPR32RegClass;
  extern const TargetRegisterClass GPR32RegClass;
  extern const TargetRegisterClass GPR32spRegClass;
  extern const TargetRegisterClass GPR32commonRegClass;
  extern const TargetRegisterClass FPR32_with_hsub_in_FPR16_loRegClass;
  extern const TargetRegisterClass GPR32argRegClass;
  extern const TargetRegisterClass MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass CCRRegClass;
  extern const TargetRegisterClass GPR32sponlyRegClass;
  extern const TargetRegisterClass WSeqPairsClassRegClass;
  extern const TargetRegisterClass WSeqPairsClass_with_subo32_in_GPR32commonRegClass;
  extern const TargetRegisterClass WSeqPairsClass_with_sube32_in_GPR32argRegClass;
  extern const TargetRegisterClass WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass GPR64allRegClass;
  extern const TargetRegisterClass FPR64RegClass;
  extern const TargetRegisterClass GPR64RegClass;
  extern const TargetRegisterClass GPR64spRegClass;
  extern const TargetRegisterClass GPR64commonRegClass;
  extern const TargetRegisterClass GPR64noipRegClass;
  extern const TargetRegisterClass GPR64common_and_GPR64noipRegClass;
  extern const TargetRegisterClass tcGPR64RegClass;
  extern const TargetRegisterClass GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass FPR64_loRegClass;
  extern const TargetRegisterClass GPR64argRegClass;
  extern const TargetRegisterClass GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass rtcGPR64RegClass;
  extern const TargetRegisterClass GPR64sponlyRegClass;
  extern const TargetRegisterClass DDRegClass;
  extern const TargetRegisterClass DD_with_dsub0_in_FPR64_loRegClass;
  extern const TargetRegisterClass DD_with_dsub1_in_FPR64_loRegClass;
  extern const TargetRegisterClass XSeqPairsClassRegClass;
  extern const TargetRegisterClass DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loRegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_subo64_in_GPR64commonRegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_subo64_in_GPR64noipRegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_sube64_in_GPR64noipRegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_sube64_in_tcGPR64RegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_subo64_in_tcGPR64RegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_sub_32_in_GPR32argRegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass XSeqPairsClass_with_sube64_in_rtcGPR64RegClass;
  extern const TargetRegisterClass FPR128RegClass;
  extern const TargetRegisterClass ZPRRegClass;
  extern const TargetRegisterClass FPR128_loRegClass;
  extern const TargetRegisterClass MPR128RegClass;
  extern const TargetRegisterClass ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR_3bRegClass;
  extern const TargetRegisterClass DDDRegClass;
  extern const TargetRegisterClass DDD_with_dsub0_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDD_with_dsub1_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDD_with_dsub2_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDDRegClass;
  extern const TargetRegisterClass DDDD_with_dsub0_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub1_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub2_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub3_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass;
  extern const TargetRegisterClass DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass;
  extern const TargetRegisterClass QQRegClass;
  extern const TargetRegisterClass ZPR2RegClass;
  extern const TargetRegisterClass QQ_with_dsub_in_FPR64_loRegClass;
  extern const TargetRegisterClass QQ_with_qsub1_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR2_with_dsub_in_FPR64_loRegClass;
  extern const TargetRegisterClass ZPR2_with_zsub1_in_ZPR_4bRegClass;
  extern const TargetRegisterClass QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR2_with_zsub0_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR2_with_zsub1_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bRegClass;
  extern const TargetRegisterClass MPR64RegClass;
  extern const TargetRegisterClass QQQRegClass;
  extern const TargetRegisterClass ZPR3RegClass;
  extern const TargetRegisterClass QQQ_with_dsub_in_FPR64_loRegClass;
  extern const TargetRegisterClass QQQ_with_qsub1_in_FPR128_loRegClass;
  extern const TargetRegisterClass QQQ_with_qsub2_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_loRegClass;
  extern const TargetRegisterClass ZPR3_with_zsub1_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR3_with_zsub2_in_ZPR_4bRegClass;
  extern const TargetRegisterClass QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loRegClass;
  extern const TargetRegisterClass QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass;
  extern const TargetRegisterClass QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR3_with_zsub0_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR3_with_zsub1_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR3_with_zsub2_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bRegClass;
  extern const TargetRegisterClass QQQQRegClass;
  extern const TargetRegisterClass ZPR4RegClass;
  extern const TargetRegisterClass QQQQ_with_dsub_in_FPR64_loRegClass;
  extern const TargetRegisterClass QQQQ_with_qsub1_in_FPR128_loRegClass;
  extern const TargetRegisterClass QQQQ_with_qsub2_in_FPR128_loRegClass;
  extern const TargetRegisterClass QQQQ_with_qsub3_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_loRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub2_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub3_in_ZPR_4bRegClass;
  extern const TargetRegisterClass QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loRegClass;
  extern const TargetRegisterClass QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass;
  extern const TargetRegisterClass QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass;
  extern const TargetRegisterClass QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass;
  extern const TargetRegisterClass QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass;
  extern const TargetRegisterClass QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass;
  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub0_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub2_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub3_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass;
  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bRegClass;
  extern const TargetRegisterClass GPR64x8ClassRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_sub_32_in_GPR32argRegClass;
  extern const TargetRegisterClass MPR32RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64argRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64argRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_rtcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_rtcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_rtcGPR64RegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_GPR64argRegClass;
  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_rtcGPR64RegClass;
  extern const TargetRegisterClass MPR16RegClass;
  extern const TargetRegisterClass MPRRegClass;
  extern const TargetRegisterClass MPR8RegClass;
} // end namespace AArch64

} // end namespace llvm

#endif // GET_REGINFO_HEADER

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Register and Register Classes Information                           *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_TARGET_DESC
#undef GET_REGINFO_TARGET_DESC

namespace llvm {

extern const MCRegisterClass AArch64MCRegisterClasses[];

static const MVT::SimpleValueType VTLists[] = {
  /* 0 */ MVT::f32, MVT::i32, MVT::Other,
  /* 3 */ MVT::i64, MVT::Other,
  /* 5 */ MVT::f16, MVT::bf16, MVT::Other,
  /* 8 */ MVT::f16, MVT::Other,
  /* 10 */ MVT::f64, MVT::i64, MVT::v2f32, MVT::v1f64, MVT::v8i8, MVT::v4i16, MVT::v2i32, MVT::v1i64, MVT::v4f16, MVT::v4bf16, MVT::Other,
  /* 21 */ MVT::v16i8, MVT::v8i16, MVT::v4i32, MVT::v2i64, MVT::v4f32, MVT::v2f64, MVT::f128, MVT::v8f16, MVT::v8bf16, MVT::Other,
  /* 31 */ MVT::v16i8, MVT::v8i16, MVT::v4i32, MVT::v2i64, MVT::v4f32, MVT::v2f64, MVT::v8f16, MVT::v8bf16, MVT::Other,
  /* 40 */ MVT::v8i8, MVT::v4i16, MVT::v2i32, MVT::v1i64, MVT::v4f16, MVT::v4bf16, MVT::v2f32, MVT::v1f64, MVT::Other,
  /* 49 */ MVT::nxv16i1, MVT::nxv8i1, MVT::nxv4i1, MVT::nxv2i1, MVT::Other,
  /* 54 */ MVT::nxv16i8, MVT::nxv8i16, MVT::nxv4i32, MVT::nxv2i64, MVT::nxv2f16, MVT::nxv4f16, MVT::nxv8f16, MVT::nxv2bf16, MVT::nxv4bf16, MVT::nxv8bf16, MVT::nxv2f32, MVT::nxv4f32, MVT::nxv2f64, MVT::Other,
  /* 68 */ MVT::Untyped, MVT::Other,
  /* 70 */ MVT::i64x8, MVT::Other,
};

static const char *const SubRegIndexNameTable[] = { "bsub", "dsub", "dsub0", "dsub1", "dsub2", "dsub3", "hsub", "qsub0", "qsub1", "qsub2", "qsub3", "ssub", "sub_32", "sube32", "sube64", "subo32", "subo64", "x8sub_0", "x8sub_1", "x8sub_2", "x8sub_3", "x8sub_4", "x8sub_5", "x8sub_6", "x8sub_7", "zasubb", "zasubd0", "zasubd1", "zasubh0", "zasubh1", "zasubq0", "zasubq1", "zasubs0", "zasubs1", "zsub", "zsub0", "zsub1", "zsub2", "zsub3", "zsub_hi", "zasubd1_then_zasubq0", "zasubd1_then_zasubq1", "zasubs1_then_zasubd0", "zasubs1_then_zasubd1", "zasubs1_then_zasubq0", "zasubs1_then_zasubq1", "zasubs1_then_zasubd1_then_zasubq0", "zasubs1_then_zasubd1_then_zasubq1", "zasubh1_then_zasubd0", "zasubh1_then_zasubd1", "zasubh1_then_zasubq0", "zasubh1_then_zasubq1", "zasubh1_then_zasubs0", "zasubh1_then_zasubs1", "zasubh1_then_zasubd1_then_zasubq0", "zasubh1_then_zasubd1_then_zasubq1", "zasubh1_then_zasubs1_then_zasubd0", "zasubh1_then_zasubs1_then_zasubd1", "zasubh1_then_zasubs1_then_zasubq0", "zasubh1_then_zasubs1_then_zasubq1", "zasubh1_then_zasubs1_then_zasubd1_then_zasubq0", "zasubh1_then_zasubs1_then_zasubd1_then_zasubq1", "dsub1_then_bsub", "dsub1_then_hsub", "dsub1_then_ssub", "dsub3_then_bsub", "dsub3_then_hsub", "dsub3_then_ssub", "dsub2_then_bsub", "dsub2_then_hsub", "dsub2_then_ssub", "qsub1_then_bsub", "qsub1_then_dsub", "qsub1_then_hsub", "qsub1_then_ssub", "qsub3_then_bsub", "qsub3_then_dsub", "qsub3_then_hsub", "qsub3_then_ssub", "qsub2_then_bsub", "qsub2_then_dsub", "qsub2_then_hsub", "qsub2_then_ssub", "x8sub_7_then_sub_32", "x8sub_6_then_sub_32", "x8sub_5_then_sub_32", "x8sub_4_then_sub_32", "x8sub_3_then_sub_32", "x8sub_2_then_sub_32", "x8sub_1_then_sub_32", "subo64_then_sub_32", "zsub1_then_bsub", "zsub1_then_dsub", "zsub1_then_hsub", "zsub1_then_ssub", "zsub1_then_zsub", "zsub1_then_zsub_hi", "zsub3_then_bsub", "zsub3_then_dsub", "zsub3_then_hsub", "zsub3_then_ssub", "zsub3_then_zsub", "zsub3_then_zsub_hi", "zsub2_then_bsub", "zsub2_then_dsub", "zsub2_then_hsub", "zsub2_then_ssub", "zsub2_then_zsub", "zsub2_then_zsub_hi", "dsub0_dsub1", "dsub0_dsub1_dsub2", "dsub1_dsub2", "dsub1_dsub2_dsub3", "dsub2_dsub3", "dsub_qsub1_then_dsub", "dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub", "dsub_qsub1_then_dsub_qsub2_then_dsub", "qsub0_qsub1", "qsub0_qsub1_qsub2", "qsub1_qsub2", "qsub1_qsub2_qsub3", "qsub2_qsub3", "qsub1_then_dsub_qsub2_then_dsub", "qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub", "qsub2_then_dsub_qsub3_then_dsub", "sub_32_x8sub_1_then_sub_32", "x8sub_0_x8sub_1", "x8sub_2_x8sub_3", "x8sub_4_x8sub_5", "x8sub_6_x8sub_7", "x8sub_6_then_sub_32_x8sub_7_then_sub_32", "x8sub_4_then_sub_32_x8sub_5_then_sub_32", "x8sub_2_then_sub_32_x8sub_3_then_sub_32", "sub_32_subo64_then_sub_32", "dsub_zsub1_then_dsub", "zsub_zsub1_then_zsub", "dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub", "dsub_zsub1_then_dsub_zsub2_then_dsub", "zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub", "zsub_zsub1_then_zsub_zsub2_then_zsub", "zsub0_zsub1", "zsub0_zsub1_zsub2", "zsub1_zsub2", "zsub1_zsub2_zsub3", "zsub2_zsub3", "zsub1_then_dsub_zsub2_then_dsub", "zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub", "zsub1_then_zsub_zsub2_then_zsub", "zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub", "zsub2_then_dsub_zsub3_then_dsub", "zsub2_then_zsub_zsub3_then_zsub", "" };


static const LaneBitmask SubRegIndexLaneMaskTable[] = {
  LaneBitmask::getAll(),
  LaneBitmask(0x0000000000000001), // bsub
  LaneBitmask(0x0000000000000001), // dsub
  LaneBitmask(0x0000000000000001), // dsub0
  LaneBitmask(0x0000000000200000), // dsub1
  LaneBitmask(0x0000000000800000), // dsub2
  LaneBitmask(0x0000000000400000), // dsub3
  LaneBitmask(0x0000000000000001), // hsub
  LaneBitmask(0x0000000000000001), // qsub0
  LaneBitmask(0x0000000001000000), // qsub1
  LaneBitmask(0x0000000004000000), // qsub2
  LaneBitmask(0x0000000002000000), // qsub3
  LaneBitmask(0x0000000000000001), // ssub
  LaneBitmask(0x0000000000000002), // sub_32
  LaneBitmask(0x0000000000000004), // sube32
  LaneBitmask(0x0000000000000002), // sube64
  LaneBitmask(0x0000000000000008), // subo32
  LaneBitmask(0x0000000400000000), // subo64
  LaneBitmask(0x0000000000000002), // x8sub_0
  LaneBitmask(0x0000000200000000), // x8sub_1
  LaneBitmask(0x0000000100000000), // x8sub_2
  LaneBitmask(0x0000000080000000), // x8sub_3
  LaneBitmask(0x0000000040000000), // x8sub_4
  LaneBitmask(0x0000000020000000), // x8sub_5
  LaneBitmask(0x0000000010000000), // x8sub_6
  LaneBitmask(0x0000000008000000), // x8sub_7
  LaneBitmask(0x00000000001FFFB0), // zasubb
  LaneBitmask(0x0000000000000030), // zasubd0
  LaneBitmask(0x0000000000000180), // zasubd1
  LaneBitmask(0x0000000000001FB0), // zasubh0
  LaneBitmask(0x00000000001FE000), // zasubh1
  LaneBitmask(0x0000000000000010), // zasubq0
  LaneBitmask(0x0000000000000020), // zasubq1
  LaneBitmask(0x00000000000001B0), // zasubs0
  LaneBitmask(0x0000000000001E00), // zasubs1
  LaneBitmask(0x0000000000000001), // zsub
  LaneBitmask(0x0000000000000041), // zsub0
  LaneBitmask(0x0000001800000000), // zsub1
  LaneBitmask(0x0000018000000000), // zsub2
  LaneBitmask(0x0000006000000000), // zsub3
  LaneBitmask(0x0000000000000040), // zsub_hi
  LaneBitmask(0x0000000000000080), // zasubd1_then_zasubq0
  LaneBitmask(0x0000000000000100), // zasubd1_then_zasubq1
  LaneBitmask(0x0000000000000600), // zasubs1_then_zasubd0
  LaneBitmask(0x0000000000001800), // zasubs1_then_zasubd1
  LaneBitmask(0x0000000000000200), // zasubs1_then_zasubq0
  LaneBitmask(0x0000000000000400), // zasubs1_then_zasubq1
  LaneBitmask(0x0000000000000800), // zasubs1_then_zasubd1_then_zasubq0
  LaneBitmask(0x0000000000001000), // zasubs1_then_zasubd1_then_zasubq1
  LaneBitmask(0x0000000000006000), // zasubh1_then_zasubd0
  LaneBitmask(0x0000000000018000), // zasubh1_then_zasubd1
  LaneBitmask(0x0000000000002000), // zasubh1_then_zasubq0
  LaneBitmask(0x0000000000004000), // zasubh1_then_zasubq1
  LaneBitmask(0x000000000001E000), // zasubh1_then_zasubs0
  LaneBitmask(0x00000000001E0000), // zasubh1_then_zasubs1
  LaneBitmask(0x0000000000008000), // zasubh1_then_zasubd1_then_zasubq0
  LaneBitmask(0x0000000000010000), // zasubh1_then_zasubd1_then_zasubq1
  LaneBitmask(0x0000000000060000), // zasubh1_then_zasubs1_then_zasubd0
  LaneBitmask(0x0000000000180000), // zasubh1_then_zasubs1_then_zasubd1
  LaneBitmask(0x0000000000020000), // zasubh1_then_zasubs1_then_zasubq0
  LaneBitmask(0x0000000000040000), // zasubh1_then_zasubs1_then_zasubq1
  LaneBitmask(0x0000000000080000), // zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
  LaneBitmask(0x0000000000100000), // zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
  LaneBitmask(0x0000000000200000), // dsub1_then_bsub
  LaneBitmask(0x0000000000200000), // dsub1_then_hsub
  LaneBitmask(0x0000000000200000), // dsub1_then_ssub
  LaneBitmask(0x0000000000400000), // dsub3_then_bsub
  LaneBitmask(0x0000000000400000), // dsub3_then_hsub
  LaneBitmask(0x0000000000400000), // dsub3_then_ssub
  LaneBitmask(0x0000000000800000), // dsub2_then_bsub
  LaneBitmask(0x0000000000800000), // dsub2_then_hsub
  LaneBitmask(0x0000000000800000), // dsub2_then_ssub
  LaneBitmask(0x0000000001000000), // qsub1_then_bsub
  LaneBitmask(0x0000000001000000), // qsub1_then_dsub
  LaneBitmask(0x0000000001000000), // qsub1_then_hsub
  LaneBitmask(0x0000000001000000), // qsub1_then_ssub
  LaneBitmask(0x0000000002000000), // qsub3_then_bsub
  LaneBitmask(0x0000000002000000), // qsub3_then_dsub
  LaneBitmask(0x0000000002000000), // qsub3_then_hsub
  LaneBitmask(0x0000000002000000), // qsub3_then_ssub
  LaneBitmask(0x0000000004000000), // qsub2_then_bsub
  LaneBitmask(0x0000000004000000), // qsub2_then_dsub
  LaneBitmask(0x0000000004000000), // qsub2_then_hsub
  LaneBitmask(0x0000000004000000), // qsub2_then_ssub
  LaneBitmask(0x0000000008000000), // x8sub_7_then_sub_32
  LaneBitmask(0x0000000010000000), // x8sub_6_then_sub_32
  LaneBitmask(0x0000000020000000), // x8sub_5_then_sub_32
  LaneBitmask(0x0000000040000000), // x8sub_4_then_sub_32
  LaneBitmask(0x0000000080000000), // x8sub_3_then_sub_32
  LaneBitmask(0x0000000100000000), // x8sub_2_then_sub_32
  LaneBitmask(0x0000000200000000), // x8sub_1_then_sub_32
  LaneBitmask(0x0000000400000000), // subo64_then_sub_32
  LaneBitmask(0x0000000800000000), // zsub1_then_bsub
  LaneBitmask(0x0000000800000000), // zsub1_then_dsub
  LaneBitmask(0x0000000800000000), // zsub1_then_hsub
  LaneBitmask(0x0000000800000000), // zsub1_then_ssub
  LaneBitmask(0x0000000800000000), // zsub1_then_zsub
  LaneBitmask(0x0000001000000000), // zsub1_then_zsub_hi
  LaneBitmask(0x0000002000000000), // zsub3_then_bsub
  LaneBitmask(0x0000002000000000), // zsub3_then_dsub
  LaneBitmask(0x0000002000000000), // zsub3_then_hsub
  LaneBitmask(0x0000002000000000), // zsub3_then_ssub
  LaneBitmask(0x0000002000000000), // zsub3_then_zsub
  LaneBitmask(0x0000004000000000), // zsub3_then_zsub_hi
  LaneBitmask(0x0000008000000000), // zsub2_then_bsub
  LaneBitmask(0x0000008000000000), // zsub2_then_dsub
  LaneBitmask(0x0000008000000000), // zsub2_then_hsub
  LaneBitmask(0x0000008000000000), // zsub2_then_ssub
  LaneBitmask(0x0000008000000000), // zsub2_then_zsub
  LaneBitmask(0x0000010000000000), // zsub2_then_zsub_hi
  LaneBitmask(0x0000000000200001), // dsub0_dsub1
  LaneBitmask(0x0000000000A00001), // dsub0_dsub1_dsub2
  LaneBitmask(0x0000000000A00000), // dsub1_dsub2
  LaneBitmask(0x0000000000E00000), // dsub1_dsub2_dsub3
  LaneBitmask(0x0000000000C00000), // dsub2_dsub3
  LaneBitmask(0x0000000001000001), // dsub_qsub1_then_dsub
  LaneBitmask(0x0000000007000001), // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  LaneBitmask(0x0000000005000001), // dsub_qsub1_then_dsub_qsub2_then_dsub
  LaneBitmask(0x0000000001000001), // qsub0_qsub1
  LaneBitmask(0x0000000005000001), // qsub0_qsub1_qsub2
  LaneBitmask(0x0000000005000000), // qsub1_qsub2
  LaneBitmask(0x0000000007000000), // qsub1_qsub2_qsub3
  LaneBitmask(0x0000000006000000), // qsub2_qsub3
  LaneBitmask(0x0000000005000000), // qsub1_then_dsub_qsub2_then_dsub
  LaneBitmask(0x0000000007000000), // qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  LaneBitmask(0x0000000006000000), // qsub2_then_dsub_qsub3_then_dsub
  LaneBitmask(0x0000000200000002), // sub_32_x8sub_1_then_sub_32
  LaneBitmask(0x0000000200000002), // x8sub_0_x8sub_1
  LaneBitmask(0x0000000180000000), // x8sub_2_x8sub_3
  LaneBitmask(0x0000000060000000), // x8sub_4_x8sub_5
  LaneBitmask(0x0000000018000000), // x8sub_6_x8sub_7
  LaneBitmask(0x0000000018000000), // x8sub_6_then_sub_32_x8sub_7_then_sub_32
  LaneBitmask(0x0000000060000000), // x8sub_4_then_sub_32_x8sub_5_then_sub_32
  LaneBitmask(0x0000000180000000), // x8sub_2_then_sub_32_x8sub_3_then_sub_32
  LaneBitmask(0x0000000400000002), // sub_32_subo64_then_sub_32
  LaneBitmask(0x0000000800000001), // dsub_zsub1_then_dsub
  LaneBitmask(0x0000000800000001), // zsub_zsub1_then_zsub
  LaneBitmask(0x000000A800000001), // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
  LaneBitmask(0x0000008800000001), // dsub_zsub1_then_dsub_zsub2_then_dsub
  LaneBitmask(0x000000A800000001), // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
  LaneBitmask(0x0000008800000001), // zsub_zsub1_then_zsub_zsub2_then_zsub
  LaneBitmask(0x0000001800000041), // zsub0_zsub1
  LaneBitmask(0x0000019800000041), // zsub0_zsub1_zsub2
  LaneBitmask(0x0000019800000000), // zsub1_zsub2
  LaneBitmask(0x000001F800000000), // zsub1_zsub2_zsub3
  LaneBitmask(0x000001E000000000), // zsub2_zsub3
  LaneBitmask(0x0000008800000000), // zsub1_then_dsub_zsub2_then_dsub
  LaneBitmask(0x000000A800000000), // zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
  LaneBitmask(0x0000008800000000), // zsub1_then_zsub_zsub2_then_zsub
  LaneBitmask(0x000000A800000000), // zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
  LaneBitmask(0x000000A000000000), // zsub2_then_dsub_zsub3_then_dsub
  LaneBitmask(0x000000A000000000), // zsub2_then_zsub_zsub3_then_zsub
 };



static const TargetRegisterInfo::RegClassInfo RegClassInfos[] = {
  // Mode = 0 (Default)
  { 8, 8, 8, VTLists+68 },    // FPR8
  { 16, 16, 16, VTLists+5 },    // FPR16
  { 16, 16, 16, VTLists+8 },    // FPR16_lo
  { 16, 16, 16, VTLists+49 },    // PPR
  { 16, 16, 16, VTLists+49 },    // PPR_3b
  { 32, 32, 32, VTLists+1 },    // GPR32all
  { 32, 32, 32, VTLists+0 },    // FPR32
  { 32, 32, 32, VTLists+1 },    // GPR32
  { 32, 32, 32, VTLists+1 },    // GPR32sp
  { 32, 32, 32, VTLists+1 },    // GPR32common
  { 32, 32, 32, VTLists+0 },    // FPR32_with_hsub_in_FPR16_lo
  { 32, 32, 32, VTLists+1 },    // GPR32arg
  { 32, 32, 32, VTLists+1 },    // MatrixIndexGPR32_12_15
  { 32, 32, 32, VTLists+1 },    // CCR
  { 32, 32, 32, VTLists+1 },    // GPR32sponly
  { 64, 64, 32, VTLists+68 },    // WSeqPairsClass
  { 64, 64, 32, VTLists+68 },    // WSeqPairsClass_with_subo32_in_GPR32common
  { 64, 64, 32, VTLists+68 },    // WSeqPairsClass_with_sube32_in_GPR32arg
  { 64, 64, 32, VTLists+68 },    // WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15
  { 64, 64, 64, VTLists+3 },    // GPR64all
  { 64, 64, 64, VTLists+10 },    // FPR64
  { 64, 64, 64, VTLists+3 },    // GPR64
  { 64, 64, 64, VTLists+3 },    // GPR64sp
  { 64, 64, 64, VTLists+3 },    // GPR64common
  { 64, 64, 64, VTLists+3 },    // GPR64noip
  { 64, 64, 64, VTLists+3 },    // GPR64common_and_GPR64noip
  { 64, 64, 64, VTLists+3 },    // tcGPR64
  { 64, 64, 64, VTLists+3 },    // GPR64noip_and_tcGPR64
  { 64, 64, 64, VTLists+40 },    // FPR64_lo
  { 64, 64, 64, VTLists+3 },    // GPR64arg
  { 64, 64, 64, VTLists+3 },    // GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
  { 64, 64, 64, VTLists+3 },    // rtcGPR64
  { 64, 64, 64, VTLists+3 },    // GPR64sponly
  { 128, 128, 64, VTLists+68 },    // DD
  { 128, 128, 64, VTLists+68 },    // DD_with_dsub0_in_FPR64_lo
  { 128, 128, 64, VTLists+68 },    // DD_with_dsub1_in_FPR64_lo
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass
  { 128, 128, 64, VTLists+68 },    // DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_subo64_in_GPR64common
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_subo64_in_GPR64noip
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_sube64_in_GPR64noip
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_sube64_in_tcGPR64
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_subo64_in_tcGPR64
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_sub_32_in_GPR32arg
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15
  { 128, 128, 64, VTLists+68 },    // XSeqPairsClass_with_sube64_in_rtcGPR64
  { 128, 128, 128, VTLists+21 },    // FPR128
  { 128, 128, 128, VTLists+54 },    // ZPR
  { 128, 128, 128, VTLists+31 },    // FPR128_lo
  { 128, 128, 128, VTLists+68 },    // MPR128
  { 128, 128, 128, VTLists+54 },    // ZPR_4b
  { 128, 128, 128, VTLists+54 },    // ZPR_3b
  { 192, 192, 64, VTLists+68 },    // DDD
  { 192, 192, 64, VTLists+68 },    // DDD_with_dsub0_in_FPR64_lo
  { 192, 192, 64, VTLists+68 },    // DDD_with_dsub1_in_FPR64_lo
  { 192, 192, 64, VTLists+68 },    // DDD_with_dsub2_in_FPR64_lo
  { 192, 192, 64, VTLists+68 },    // DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
  { 192, 192, 64, VTLists+68 },    // DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
  { 192, 192, 64, VTLists+68 },    // DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub0_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub1_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub2_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub3_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
  { 256, 256, 64, VTLists+68 },    // DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
  { 256, 256, 128, VTLists+68 },    // QQ
  { 256, 256, 128, VTLists+68 },    // ZPR2
  { 256, 256, 128, VTLists+68 },    // QQ_with_dsub_in_FPR64_lo
  { 256, 256, 128, VTLists+68 },    // QQ_with_qsub1_in_FPR128_lo
  { 256, 256, 128, VTLists+68 },    // ZPR2_with_dsub_in_FPR64_lo
  { 256, 256, 128, VTLists+68 },    // ZPR2_with_zsub1_in_ZPR_4b
  { 256, 256, 128, VTLists+68 },    // QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
  { 256, 256, 128, VTLists+68 },    // ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
  { 256, 256, 128, VTLists+68 },    // ZPR2_with_zsub0_in_ZPR_3b
  { 256, 256, 128, VTLists+68 },    // ZPR2_with_zsub1_in_ZPR_3b
  { 256, 256, 128, VTLists+68 },    // ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
  { 256, 256, 256, VTLists+68 },    // MPR64
  { 384, 384, 128, VTLists+68 },    // QQQ
  { 384, 384, 128, VTLists+68 },    // ZPR3
  { 384, 384, 128, VTLists+68 },    // QQQ_with_dsub_in_FPR64_lo
  { 384, 384, 128, VTLists+68 },    // QQQ_with_qsub1_in_FPR128_lo
  { 384, 384, 128, VTLists+68 },    // QQQ_with_qsub2_in_FPR128_lo
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_dsub_in_FPR64_lo
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_zsub1_in_ZPR_4b
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_zsub2_in_ZPR_4b
  { 384, 384, 128, VTLists+68 },    // QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
  { 384, 384, 128, VTLists+68 },    // QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
  { 384, 384, 128, VTLists+68 },    // QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_zsub0_in_ZPR_3b
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_zsub1_in_ZPR_3b
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_zsub2_in_ZPR_3b
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
  { 384, 384, 128, VTLists+68 },    // ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // QQQQ
  { 512, 512, 128, VTLists+68 },    // ZPR4
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_dsub_in_FPR64_lo
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_qsub1_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_qsub2_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_qsub3_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_dsub_in_FPR64_lo
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub1_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub2_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub3_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub0_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub1_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub2_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub3_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
  { 512, 512, 128, VTLists+68 },    // ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_1_in_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_sub_32_in_GPR32arg
  { 512, 512, 512, VTLists+68 },    // MPR32
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64arg
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64arg
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_0_in_rtcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_2_in_rtcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_4_in_rtcGPR64
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_6_in_GPR64arg
  { 512, 512, 512, VTLists+70 },    // GPR64x8Class_with_x8sub_6_in_rtcGPR64
  { 1024, 1024, 1024, VTLists+68 },    // MPR16
  { 2048, 2048, 2048, VTLists+68 },    // MPR
  { 2048, 2048, 2048, VTLists+68 },    // MPR8
};

static const TargetRegisterClass *const NullRegClasses[] = { nullptr };

static const uint32_t FPR8SubClassMask[] = {
  0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x10100446, 0xfff7002e, 0xfff7ffff, 0xffffffff, 0x000000ff, 0x00000000, 0x00000000, // bsub
  0x00000000, 0xffc0002e, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_then_bsub
  0x00000000, 0xe0000000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub3_then_bsub
  0x00000000, 0xffc00000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_then_bsub
  0x00000000, 0x00000000, 0x31d04d00, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_bsub
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub3_then_bsub
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_bsub
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_bsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_bsub
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_bsub
};

static const uint32_t FPR16SubClassMask[] = {
  0x00000006, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x10100440, 0xfff7002e, 0xfff7ffff, 0xffffffff, 0x000000ff, 0x00000000, 0x00000000, // hsub
  0x00000000, 0xffc0002e, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_then_hsub
  0x00000000, 0xe0000000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub3_then_hsub
  0x00000000, 0xffc00000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_then_hsub
  0x00000000, 0x00000000, 0x31d04d00, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_hsub
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub3_then_hsub
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_hsub
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_hsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_hsub
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_hsub
};

static const uint32_t FPR16_loSubClassMask[] = {
  0x00000004, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x10000400, 0x54b40024, 0x5245d4a4, 0x752444a7, 0x000000a4, 0x00000000, 0x00000000, // hsub
  0x00000000, 0x9d000028, 0x000000ec, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_then_hsub
  0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub3_then_hsub
  0x00000000, 0x1a000000, 0x000000f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_then_hsub
  0x00000000, 0x00000000, 0x30804800, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_hsub
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // qsub3_then_hsub
  0x00000000, 0x00000000, 0x21000000, 0x13181001, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_hsub
  0x00000000, 0x00000000, 0xc407a000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_hsub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_hsub
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub2_then_hsub
};

static const uint32_t PPRSubClassMask[] = {
  0x00000018, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
};

static const uint32_t PPR_3bSubClassMask[] = {
  0x00000010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
};

static const uint32_t GPR32allSubClassMask[] = {
  0x00005ba0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0xefe80000, 0x0000ffd1, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // sub_32
  0x00078000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube32
  0x00078000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_3_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_1_then_sub_32
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64_then_sub_32
};

static const uint32_t FPR32SubClassMask[] = {
  0x00000440, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x10100000, 0xfff7002e, 0xfff7ffff, 0xffffffff, 0x000000ff, 0x00000000, 0x00000000, // ssub
  0x00000000, 0xffc0002e, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_then_ssub
  0x00000000, 0xe0000000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub3_then_ssub
  0x00000000, 0xffc00000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_then_ssub
  0x00000000, 0x00000000, 0x31d04d00, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_ssub
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub3_then_ssub
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_ssub
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_ssub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_ssub
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_ssub
};

static const uint32_t GPR32SubClassMask[] = {
  0x00001a80, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0xefa00000, 0x0000ffd0, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // sub_32
  0x00078000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube32
  0x00078000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_3_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_1_then_sub_32
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64_then_sub_32
};

static const uint32_t GPR32spSubClassMask[] = {
  0x00005b00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0xeec00000, 0x0000ffd1, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // sub_32
  0x00078000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube32
  0x00070000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_3_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_1_then_sub_32
  0x00000000, 0x0000ff40, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64_then_sub_32
};

static const uint32_t GPR32commonSubClassMask[] = {
  0x00001a00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0xee800000, 0x0000ffd0, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // sub_32
  0x00078000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube32
  0x00070000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_3_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_1_then_sub_32
  0x00000000, 0x0000ff40, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64_then_sub_32
};

static const uint32_t FPR32_with_hsub_in_FPR16_loSubClassMask[] = {
  0x00000400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x10000000, 0x54b40024, 0x5245d4a4, 0x752444a7, 0x000000a4, 0x00000000, 0x00000000, // ssub
  0x00000000, 0x9d000028, 0x000000ec, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_then_ssub
  0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub3_then_ssub
  0x00000000, 0x1a000000, 0x000000f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_then_ssub
  0x00000000, 0x00000000, 0x30804800, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_ssub
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // qsub3_then_ssub
  0x00000000, 0x00000000, 0x21000000, 0x13181001, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_ssub
  0x00000000, 0x00000000, 0xc407a000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_ssub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_ssub
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub2_then_ssub
};

static const uint32_t GPR32argSubClassMask[] = {
  0x00000800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x20000000, 0x00002000, 0x00000000, 0x00000000, 0x00000000, 0x45000000, 0x00000021, // sub_32
  0x00020000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube32
  0x00020000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000020, // x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000020, // x8sub_6_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000020, // x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000020, // x8sub_4_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x44000000, 0x00000020, // x8sub_3_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x44000000, 0x00000020, // x8sub_2_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x45000000, 0x00000021, // x8sub_1_then_sub_32
  0x00000000, 0x00002000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64_then_sub_32
};

static const uint32_t MatrixIndexGPR32_12_15SubClassMask[] = {
  0x00001000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x40000000, 0x00004000, 0x00000000, 0x00000000, 0x00000000, 0x08000000, 0x00000014, // sub_32
  0x00040000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube32
  0x00040000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x00000009, // x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x00000009, // x8sub_6_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0x00000048, // x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0x00000048, // x8sub_4_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000050, // x8sub_3_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000050, // x8sub_2_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000, 0x00000014, // x8sub_1_then_sub_32
  0x00000000, 0x00004000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64_then_sub_32
};

static const uint32_t CCRSubClassMask[] = {
  0x00002000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
};

static const uint32_t GPR32sponlySubClassMask[] = {
  0x00004000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sub_32
};

static const uint32_t WSeqPairsClassSubClassMask[] = {
  0x00078000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // sub_32_x8sub_1_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6_then_sub_32_x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4_then_sub_32_x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2_then_sub_32_x8sub_3_then_sub_32
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sub_32_subo64_then_sub_32
};

static const uint32_t WSeqPairsClass_with_subo32_in_GPR32commonSubClassMask[] = {
  0x00070000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // sub_32_x8sub_1_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6_then_sub_32_x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4_then_sub_32_x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2_then_sub_32_x8sub_3_then_sub_32
  0x00000000, 0x0000ff40, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sub_32_subo64_then_sub_32
};

static const uint32_t WSeqPairsClass_with_sube32_in_GPR32argSubClassMask[] = {
  0x00020000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x45000000, 0x00000021, // sub_32_x8sub_1_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000020, // x8sub_6_then_sub_32_x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000020, // x8sub_4_then_sub_32_x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x44000000, 0x00000020, // x8sub_2_then_sub_32_x8sub_3_then_sub_32
  0x00000000, 0x00002000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sub_32_subo64_then_sub_32
};

static const uint32_t WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15SubClassMask[] = {
  0x00040000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000, 0x00000014, // sub_32_x8sub_1_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x00000009, // x8sub_6_then_sub_32_x8sub_7_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0x00000048, // x8sub_4_then_sub_32_x8sub_5_then_sub_32
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000050, // x8sub_2_then_sub_32_x8sub_3_then_sub_32
  0x00000000, 0x00004000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sub_32_subo64_then_sub_32
};

static const uint32_t GPR64allSubClassMask[] = {
  0xefe80000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_7
};

static const uint32_t FPR64SubClassMask[] = {
  0x10100000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00370000, 0xfff7ff00, 0xffffffff, 0x000000ff, 0x00000000, 0x00000000, // dsub
  0x00000000, 0xffc0002e, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0
  0x00000000, 0xffc0002e, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1
  0x00000000, 0xffc00000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2
  0x00000000, 0xe0000000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub3
  0x00000000, 0x00000000, 0x31d04d00, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub3_then_dsub
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_dsub
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_dsub
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_dsub
};

static const uint32_t GPR64SubClassMask[] = {
  0xefa00000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_7
};

static const uint32_t GPR64spSubClassMask[] = {
  0xeec00000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x0000ff40, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_7
};

static const uint32_t GPR64commonSubClassMask[] = {
  0xee800000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x0000ff40, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_7
};

static const uint32_t GPR64noipSubClassMask[] = {
  0x6b000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00007500, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x00007580, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xee10e200, 0xfdee6781, 0x0000007d, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xee10e200, 0xfdee6781, 0x0000007d, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x36262400, 0xf5f93eb8, 0x0000007b, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x36262400, 0xf5f93eb8, 0x0000007b, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5a4a4800, 0xe5bfcaca, 0x0000006f, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5a4a4800, 0xe5bfcaca, 0x0000006f, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9c8c9000, 0xcdddd5d4, 0x0000003f, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9c8c9000, 0xcdddd5d4, 0x0000003f, // x8sub_7
};

static const uint32_t GPR64common_and_GPR64noipSubClassMask[] = {
  0x6a000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00007500, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x00007500, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xee10e200, 0xfdee6781, 0x0000007d, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xee10e200, 0xfdee6781, 0x0000007d, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x36262400, 0xf5f93eb8, 0x0000007b, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x36262400, 0xf5f93eb8, 0x0000007b, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5a4a4800, 0xe5bfcaca, 0x0000006f, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5a4a4800, 0xe5bfcaca, 0x0000006f, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9c8c9000, 0xcdddd5d4, 0x0000003f, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9c8c9000, 0xcdddd5d4, 0x0000003f, // x8sub_7
};

static const uint32_t tcGPR64SubClassMask[] = {
  0xec000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x0000fe00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x0000f800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe1f10000, 0xfdffff7f, 0x0000007f, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000, 0xfdf6b927, 0x0000007f, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000, 0xfdf6b927, 0x0000007f, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfde62101, 0x0000007d, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfde62101, 0x0000007d, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5e02000, 0x00000079, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5e02000, 0x00000079, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a00000, 0x00000069, // x8sub_7
};

static const uint32_t GPR64noip_and_tcGPR64SubClassMask[] = {
  0x68000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00007400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x00007000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe0100000, 0xfdee6701, 0x0000007d, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfde62101, 0x0000007d, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5f03820, 0x0000007b, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5e02000, 0x00000079, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a60000, 0x0000006d, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a00000, 0x00000069, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5c00000, 0x00000039, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5800000, 0x00000029, // x8sub_7
};

static const uint32_t FPR64_loSubClassMask[] = {
  0x10000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00340000, 0x5245d400, 0x752444a7, 0x000000a4, 0x00000000, 0x00000000, // dsub
  0x00000000, 0x54800024, 0x000000a4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0
  0x00000000, 0x9d000028, 0x000000ec, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1
  0x00000000, 0x1a000000, 0x000000f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2
  0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub3
  0x00000000, 0x00000000, 0x30804800, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // qsub3_then_dsub
  0x00000000, 0x00000000, 0x21000000, 0x13181001, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_dsub
  0x00000000, 0x00000000, 0xc407a000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_dsub
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub2_then_dsub
};

static const uint32_t GPR64argSubClassMask[] = {
  0x20000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00002000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x00002000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x45000000, 0x00000021, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x45000000, 0x00000021, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x44000000, 0x00000020, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x44000000, 0x00000020, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000020, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000020, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000020, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000020, // x8sub_7
};

static const uint32_t GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask[] = {
  0x40000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00004000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x00004000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000, 0x00000014, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000, 0x00000014, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000050, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000050, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0x00000048, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0x00000048, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x00000009, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x00000009, // x8sub_7
};

static const uint32_t rtcGPR64SubClassMask[] = {
  0x80000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00008000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // sube64
  0x00000000, 0x00008000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // subo64
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000002, // x8sub_0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000002, // x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000004, // x8sub_2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000004, // x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000010, // x8sub_4
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000010, // x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, // x8sub_6
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, // x8sub_7
};

static const uint32_t GPR64sponlySubClassMask[] = {
  0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
};

static const uint32_t DDSubClassMask[] = {
  0x00000000, 0x0000002e, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0xffc00000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1
  0x00000000, 0xffc00000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2
  0x00000000, 0xe0000000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_dsub3
  0x00000000, 0x00000000, 0x31d04d00, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DD_with_dsub0_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000024, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x54800000, 0x000000a4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1
  0x00000000, 0x9d000000, 0x000000ec, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2
  0x00000000, 0x00000000, 0x000000f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_dsub3
  0x00000000, 0x00000000, 0x10404400, 0x11040401, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub
  0x00000000, 0x00000000, 0x30800000, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x13181000, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x42059000, 0x642040a6, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub
  0x00000000, 0x00000000, 0xc4000000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DD_with_dsub1_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000028, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x9d000000, 0x000000ec, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1
  0x00000000, 0x1a000000, 0x000000f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2
  0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_dsub3
  0x00000000, 0x00000000, 0x30804800, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub
  0x00000000, 0x00000000, 0x21000000, 0x13181001, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0xc407a000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t XSeqPairsClassSubClassMask[] = {
  0x00000000, 0x0000ffd0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6_x8sub_7
};

static const uint32_t DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000020, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x14000000, 0x000000a4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1
  0x00000000, 0x18000000, 0x000000e8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2
  0x00000000, 0x00000000, 0x000000d0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub2_dsub3
  0x00000000, 0x00000000, 0x10004000, 0x11040001, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub
  0x00000000, 0x00000000, 0x20000000, 0x13080001, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x12100000, 0x00000000, 0x00000000, 0x00000000, // qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x40058000, 0x642000a6, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub
  0x00000000, 0x00000000, 0x80000000, 0xec4000ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, // zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t XSeqPairsClass_with_subo64_in_GPR64commonSubClassMask[] = {
  0x00000000, 0x0000ff40, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_subo64_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00007580, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xee10e200, 0xfdee6781, 0x0000007d, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x36262400, 0xf5f93eb8, 0x0000007b, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5a4a4800, 0xe5bfcaca, 0x0000006f, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9c8c9000, 0xcdddd5d4, 0x0000003f, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_sube64_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00007500, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xee10e200, 0xfdee6781, 0x0000007d, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x36262400, 0xf5f93eb8, 0x0000007b, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5a4a4800, 0xe5bfcaca, 0x0000006f, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9c8c9000, 0xcdddd5d4, 0x0000003f, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_sube64_in_tcGPR64SubClassMask[] = {
  0x00000000, 0x0000fe00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe1f10000, 0xfdffff7f, 0x0000007f, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000, 0xfdf6b927, 0x0000007f, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfde62101, 0x0000007d, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5e02000, 0x00000079, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00007400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe0100000, 0xfdee6701, 0x0000007d, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5f03820, 0x0000007b, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a60000, 0x0000006d, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5c00000, 0x00000039, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_subo64_in_tcGPR64SubClassMask[] = {
  0x00000000, 0x0000f800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000, 0xfdf6b927, 0x0000007f, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfde62101, 0x0000007d, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5e02000, 0x00000079, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a00000, 0x00000069, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00007000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfde62101, 0x0000007d, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5e02000, 0x00000079, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a00000, 0x00000069, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5800000, 0x00000029, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_sub_32_in_GPR32argSubClassMask[] = {
  0x00000000, 0x00002000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x45000000, 0x00000021, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x44000000, 0x00000020, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000020, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000020, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask[] = {
  0x00000000, 0x00004000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000, 0x00000014, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000050, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0x00000048, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x00000009, // x8sub_6_x8sub_7
};

static const uint32_t XSeqPairsClass_with_sube64_in_rtcGPR64SubClassMask[] = {
  0x00000000, 0x00008000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000002, // x8sub_0_x8sub_1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000004, // x8sub_2_x8sub_3
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000010, // x8sub_4_x8sub_5
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, // x8sub_6_x8sub_7
};

static const uint32_t FPR128SubClassMask[] = {
  0x00000000, 0x00050000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x31d04d00, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub0
  0x00000000, 0x00000000, 0x31d04d00, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub1
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub2
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub3
  0x00000000, 0x00320000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_zsub
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_zsub
};

static const uint32_t ZPRSubClassMask[] = {
  0x00000000, 0x00320000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub0
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub2
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub3
};

static const uint32_t FPR128_loSubClassMask[] = {
  0x00000000, 0x00040000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x10404400, 0x11040401, 0x00000000, 0x00000000, 0x00000000, // qsub0
  0x00000000, 0x00000000, 0x30804800, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // qsub1
  0x00000000, 0x00000000, 0x21000000, 0x13181001, 0x00000000, 0x00000000, 0x00000000, // qsub2
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // qsub3
  0x00000000, 0x00300000, 0x42059000, 0x642040a6, 0x000000a4, 0x00000000, 0x00000000, // zsub
  0x00000000, 0x00000000, 0xc407a000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub3_then_zsub
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub2_then_zsub
};

static const uint32_t MPR128SubClassMask[] = {
  0x00000000, 0x00080000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00080000, 0x00000000, 0x00000000, 0x02000000, 0x00000380, // zasubq0
  0x00000000, 0x00000000, 0x00080000, 0x00000000, 0x00000000, 0x02000000, 0x00000380, // zasubq1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000, 0x00000380, // zasubd1_then_zasubq0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000, 0x00000380, // zasubd1_then_zasubq1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000380, // zasubs1_then_zasubq0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000380, // zasubs1_then_zasubq1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000380, // zasubs1_then_zasubd1_then_zasubq0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000380, // zasubs1_then_zasubd1_then_zasubq1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubq0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubq1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubd1_then_zasubq0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubd1_then_zasubq1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubs1_then_zasubq0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubs1_then_zasubq1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
};

static const uint32_t ZPR_4bSubClassMask[] = {
  0x00000000, 0x00300000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x42059000, 0x642040a6, 0x000000a4, 0x00000000, 0x00000000, // zsub0
  0x00000000, 0x00000000, 0xc407a000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub2
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub3
};

static const uint32_t ZPR_3bSubClassMask[] = {
  0x00000000, 0x00200000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00050000, 0x400000a4, 0x000000a4, 0x00000000, 0x00000000, // zsub0
  0x00000000, 0x00000000, 0x00060000, 0x800000e8, 0x000000ec, 0x00000000, 0x00000000, // zsub1
  0x00000000, 0x00000000, 0x00000000, 0x000000d0, 0x000000f9, 0x00000000, 0x00000000, // zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, // zsub3
};

static const uint32_t DDDSubClassMask[] = {
  0x00000000, 0x1fc00000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0xe0000000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1_dsub2
  0x00000000, 0xe0000000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2_dsub3
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDD_with_dsub0_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x14800000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x40000000, 0x000000a4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1_dsub2
  0x00000000, 0x80000000, 0x000000ec, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2_dsub3
  0x00000000, 0x00000000, 0x10400000, 0x11040401, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x130c0800, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x42000000, 0x642040a6, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xec608000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDD_with_dsub1_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x1d000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x80000000, 0x000000ec, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1_dsub2
  0x00000000, 0x00000000, 0x000000f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2_dsub3
  0x00000000, 0x00000000, 0x30800000, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x13181000, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0xc4000000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDD_with_dsub2_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x1a000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x000000f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1_dsub2
  0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2_dsub3
  0x00000000, 0x00000000, 0x21000000, 0x13181001, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x14000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x000000a4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1_dsub2
  0x00000000, 0x00000000, 0x000000e8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2_dsub3
  0x00000000, 0x00000000, 0x10000000, 0x11040001, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x13080000, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x40000000, 0x642000a6, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xec400000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x18000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x000000e8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1_dsub2
  0x00000000, 0x00000000, 0x000000d0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2_dsub3
  0x00000000, 0x00000000, 0x20000000, 0x13080001, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x12100000, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x80000000, 0xec4000ee, 0x000000ec, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x10000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x000000a0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub0_dsub1_dsub2
  0x00000000, 0x00000000, 0x000000c0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, // dsub1_dsub2_dsub3
  0x00000000, 0x00000000, 0x00000000, 0x11000001, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x12000000, 0x00000000, 0x00000000, 0x00000000, // qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x640000a6, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8000000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDDSubClassMask[] = {
  0x00000000, 0xe0000000, 0x000000ff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub0_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x40000000, 0x000000a4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x11040400, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x64204000, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub1_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x80000000, 0x000000ec, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x130c0800, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xec608000, 0x000000ec, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub2_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x000000f9, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x13181000, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub3_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x000000a4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x11040000, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x64200000, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x000000e8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x13080000, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xec400000, 0x000000ec, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x000000d0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x12100000, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x000000a0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x11000000, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x64000000, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x000000c0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x12000000, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0xe8000000, 0x000000ec, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000080, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000000, 0x00000000, 0x00000000, // dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
  0x00000000, 0x00000000, 0x00000000, 0x60000000, 0x000000a4, 0x00000000, 0x00000000, // dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
};

static const uint32_t QQSubClassMask[] = {
  0x00000000, 0x00000000, 0x00004d00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1
  0x00000000, 0x00000000, 0x31d00000, 0x131c3d01, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub2_qsub3
  0x00000000, 0x00000000, 0xce27b200, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR2SubClassMask[] = {
  0x00000000, 0x00000000, 0x0007b200, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub0_zsub1
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub2_zsub3
};

static const uint32_t QQ_with_dsub_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00004400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x10400000, 0x11040401, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1
  0x00000000, 0x00000000, 0x30800000, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x13181000, 0x00000000, 0x00000000, 0x00000000, // qsub2_qsub3
  0x00000000, 0x00000000, 0x42059000, 0x642040a6, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub
  0x00000000, 0x00000000, 0xc4000000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQ_with_qsub1_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00004800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x30800000, 0x130c0801, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1
  0x00000000, 0x00000000, 0x21000000, 0x13181001, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // qsub2_qsub3
  0x00000000, 0x00000000, 0xc407a000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR2_with_dsub_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00059000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x42000000, 0x642040a6, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1
  0x00000000, 0x00000000, 0xc4000000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // zsub2_zsub3
};

static const uint32_t ZPR2_with_zsub1_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x0007a000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0xc4000000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub0_zsub1
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub2_zsub3
};

static const uint32_t QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00004000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x10000000, 0x11040001, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1
  0x00000000, 0x00000000, 0x20000000, 0x13080001, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x12100000, 0x00000000, 0x00000000, 0x00000000, // qsub2_qsub3
  0x00000000, 0x00000000, 0x40058000, 0x642000a6, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub
  0x00000000, 0x00000000, 0x80000000, 0xec4000ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, // zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00058000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x40000000, 0x642000a6, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1
  0x00000000, 0x00000000, 0x80000000, 0xec4000ee, 0x000000ec, 0x00000000, 0x00000000, // zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, // zsub2_zsub3
};

static const uint32_t ZPR2_with_zsub0_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00050000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x400000a4, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1
  0x00000000, 0x00000000, 0x00000000, 0x800000e8, 0x000000ec, 0x00000000, 0x00000000, // zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000f9, 0x00000000, 0x00000000, // zsub2_zsub3
};

static const uint32_t ZPR2_with_zsub1_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00060000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x800000e8, 0x000000ec, 0x00000000, 0x00000000, // zsub0_zsub1
  0x00000000, 0x00000000, 0x00000000, 0x000000d0, 0x000000f9, 0x00000000, 0x00000000, // zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, // zsub2_zsub3
};

static const uint32_t ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00040000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x000000a0, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1
  0x00000000, 0x00000000, 0x00000000, 0x000000c0, 0x000000e8, 0x00000000, 0x00000000, // zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000d0, 0x00000000, 0x00000000, // zsub2_zsub3
};

static const uint32_t MPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00080000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000, 0x00000380, // zasubd0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000, 0x00000380, // zasubd1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000380, // zasubs1_then_zasubd0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000380, // zasubs1_then_zasubd1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubd0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubd1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubs1_then_zasubd0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubs1_then_zasubd1
};

static const uint32_t QQQSubClassMask[] = {
  0x00000000, 0x00000000, 0x31d00000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2_qsub3
  0x00000000, 0x00000000, 0xce200000, 0xece3c2fe, 0x000000ff, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR3SubClassMask[] = {
  0x00000000, 0x00000000, 0xce200000, 0x000000fe, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t QQQ_with_dsub_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x10400000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x11040400, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x130c0800, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2_qsub3
  0x00000000, 0x00000000, 0x42000000, 0x642040a6, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xec608000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQ_with_qsub1_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x30800000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x130c0800, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x13181000, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2_qsub3
  0x00000000, 0x00000000, 0xc4000000, 0xec6080ee, 0x000000ec, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQ_with_qsub2_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x21000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x13181000, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2_qsub3
  0x00000000, 0x00000000, 0x88000000, 0xecc100fe, 0x000000fd, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR3_with_dsub_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x42000000, 0x000000a6, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x64204000, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xec608000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_zsub1_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0xc4000000, 0x000000ee, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xec608000, 0x000000ec, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_zsub2_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x88000000, 0x000000fe, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x10000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x11040000, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x13080000, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2_qsub3
  0x00000000, 0x00000000, 0x40000000, 0x642000a6, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xec400000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x20000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x13080000, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x12100000, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2_qsub3
  0x00000000, 0x00000000, 0x80000000, 0xec4000ee, 0x000000ec, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x40000000, 0x000000a6, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x64200000, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xec400000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x80000000, 0x000000ee, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xec400000, 0x000000ec, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x11000000, 0x00000000, 0x00000000, 0x00000000, // qsub0_qsub1_qsub2
  0x00000000, 0x00000000, 0x00000000, 0x12000000, 0x00000000, 0x00000000, 0x00000000, // qsub1_qsub2_qsub3
  0x00000000, 0x00000000, 0x00000000, 0x640000a6, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub
  0x00000000, 0x00000000, 0x00000000, 0xe8000000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x000000a6, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x64000000, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0xe8000000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_zsub0_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x000000a4, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x000000ec, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_zsub1_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x000000e8, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x000000ec, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000f9, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_zsub2_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x000000d0, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000f9, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x000000a0, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000a4, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000e8, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x000000c0, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000e8, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000d0, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000080, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000a0, 0x00000000, 0x00000000, // zsub0_zsub1_zsub2
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000c0, 0x00000000, 0x00000000, // zsub1_zsub2_zsub3
};

static const uint32_t QQQQSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x131c3d00, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR4SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0xece3c200, 0x000000ff, 0x00000000, 0x00000000, 
};

static const uint32_t QQQQ_with_dsub_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x11040400, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x64204000, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQQ_with_qsub1_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x130c0800, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xec608000, 0x000000ec, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQQ_with_qsub2_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x13181000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQQ_with_qsub3_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x12102000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR4_with_dsub_in_FPR64_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x64204000, 0x000000a4, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub1_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0xec608000, 0x000000ec, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub2_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0xecc10000, 0x000000fd, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub3_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0xe8820000, 0x000000ff, 0x00000000, 0x00000000, 
};

static const uint32_t QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x11040000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x64200000, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x13080000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xec400000, 0x000000ec, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x12100000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x64200000, 0x000000a4, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0xec400000, 0x000000ec, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0xe8800000, 0x000000fd, 0x00000000, 0x00000000, 
};

static const uint32_t QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x11000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x64000000, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x12000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0xe8000000, 0x000000ec, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x64000000, 0x000000a4, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0xe8000000, 0x000000ec, 0x00000000, 0x00000000, 
};

static const uint32_t QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x60000000, 0x000000a4, 0x00000000, 0x00000000, // zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
};

static const uint32_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x60000000, 0x000000a4, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub0_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x000000a4, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub1_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x000000ec, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub2_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000f9, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub3_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000d2, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000a4, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000e8, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000d0, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000a0, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000c0, 0x00000000, 0x00000000, 
};

static const uint32_t ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000080, 0x00000000, 0x00000000, 
};

static const uint32_t GPR64x8ClassSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffff00, 0xfdffffff, 0x0000007f, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xee10e200, 0xfdee6781, 0x0000007d, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x36262400, 0xf5f93eb8, 0x0000007b, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5a4a4800, 0xe5bfcaca, 0x0000006f, 
};

static const uint32_t GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9c8c9000, 0xcdddd5d4, 0x0000003f, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x26002000, 0xf5e82680, 0x00000079, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x4a004000, 0xe5ae4280, 0x0000006d, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x8c008000, 0xcdcc4580, 0x0000003d, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe1f10000, 0xfdffff7f, 0x0000007f, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x12020000, 0xe5b90a88, 0x0000006b, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x14040000, 0xc5d91490, 0x0000003b, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x18080000, 0xc59dc0c0, 0x0000002f, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe0100000, 0xfdee6701, 0x0000007d, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20200000, 0xf5f93e38, 0x0000007b, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40400000, 0xe5bfca4a, 0x0000006f, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80800000, 0xcdddd554, 0x0000003f, 
};

static const uint32_t GPR64x8Class_with_x8sub_1_in_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000, 0xfdf6b927, 0x0000007f, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000, 0xe5a80280, 0x00000069, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x04000000, 0xc5c80480, 0x00000039, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000, 0xc58c4080, 0x0000002d, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0xc5990080, 0x0000002b, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0xf5e82600, 0x00000079, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0xe5ae4200, 0x0000006d, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0xcdcc4500, 0x0000003d, 
};

static const uint32_t GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfde62101, 0x0000007d, 
};

static const uint32_t GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5b68802, 0x0000006f, 
};

static const uint32_t GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xcdd49104, 0x0000003f, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5b90a08, 0x0000006b, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5d91410, 0x0000003b, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5f03820, 0x0000007b, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc59dc040, 0x0000002f, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5880080, 0x00000029, 
};

static const uint32_t GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xcdc40100, 0x0000003d, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a80200, 0x00000069, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5c80400, 0x00000039, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5b00800, 0x0000006b, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5d01000, 0x0000003b, 
};

static const uint32_t GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xf5e02000, 0x00000079, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc58c4000, 0x0000002d, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5948000, 0x0000002f, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5990000, 0x0000002b, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a60000, 0x0000006d, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5840000, 0x0000002d, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5880000, 0x00000029, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5900000, 0x0000002b, 
};

static const uint32_t GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xe5a00000, 0x00000069, 
};

static const uint32_t GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5c00000, 0x00000039, 
};

static const uint32_t GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xc5800000, 0x00000029, 
};

static const uint32_t GPR64x8Class_with_sub_32_in_GPR32argSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x45000000, 0x00000021, 
};

static const uint32_t MPR32SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000380, // zasubs0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000380, // zasubs1
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubs0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1_then_zasubs1
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64argSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x44000000, 0x00000020, 
};

static const uint32_t GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x08000000, 0x00000014, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x00000050, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0x00000048, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64argSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40000000, 0x00000020, 
};

static const uint32_t GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 0x00000009, 
};

static const uint32_t GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 
};

static const uint32_t GPR64x8Class_with_x8sub_0_in_rtcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000002, 
};

static const uint32_t GPR64x8Class_with_x8sub_2_in_rtcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000004, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000008, 
};

static const uint32_t GPR64x8Class_with_x8sub_4_in_rtcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000010, 
};

static const uint32_t GPR64x8Class_with_x8sub_6_in_GPR64argSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000020, 
};

static const uint32_t GPR64x8Class_with_x8sub_6_in_rtcGPR64SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
};

static const uint32_t MPR16SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000080, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh0
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000300, // zasubh1
};

static const uint32_t MPRSubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000100, 
};

static const uint32_t MPR8SubClassMask[] = {
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000200, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000100, // zasubb
};

static const uint16_t SuperRegIdxSeqs[] = {
  /* 0 */ 13, 0,
  /* 2 */ 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0,
  /* 13 */ 26, 0,
  /* 15 */ 29, 30, 0,
  /* 18 */ 36, 37, 38, 39, 0,
  /* 23 */ 33, 34, 53, 54, 0,
  /* 28 */ 27, 28, 43, 44, 49, 50, 57, 58, 0,
  /* 37 */ 31, 32, 41, 42, 45, 46, 47, 48, 51, 52, 55, 56, 59, 60, 61, 62, 0,
  /* 54 */ 13, 14, 16, 84, 85, 86, 87, 88, 89, 90, 91, 0,
  /* 66 */ 1, 63, 66, 69, 72, 76, 80, 92, 98, 104, 0,
  /* 77 */ 2, 3, 4, 5, 6, 73, 77, 81, 93, 99, 105, 0,
  /* 89 */ 7, 64, 67, 70, 74, 78, 82, 94, 100, 106, 0,
  /* 100 */ 12, 65, 68, 71, 75, 79, 83, 95, 101, 107, 0,
  /* 111 */ 8, 9, 10, 11, 35, 96, 102, 108, 0,
  /* 120 */ 127, 128, 129, 130, 0,
  /* 125 */ 126, 131, 132, 133, 134, 0,
  /* 131 */ 116, 137, 0,
  /* 134 */ 139, 0,
  /* 136 */ 142, 144, 0,
  /* 139 */ 141, 143, 145, 0,
  /* 143 */ 111, 113, 117, 124, 138, 147, 0,
  /* 150 */ 119, 121, 140, 149, 0,
  /* 155 */ 110, 112, 114, 115, 123, 125, 135, 146, 150, 0,
  /* 165 */ 118, 120, 122, 136, 148, 151, 0,
};

static const TargetRegisterClass *const FPR16_loSuperclasses[] = {
  &AArch64::FPR16RegClass,
  nullptr
};

static const TargetRegisterClass *const PPR_3bSuperclasses[] = {
  &AArch64::PPRRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR32Superclasses[] = {
  &AArch64::GPR32allRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR32spSuperclasses[] = {
  &AArch64::GPR32allRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR32commonSuperclasses[] = {
  &AArch64::GPR32allRegClass,
  &AArch64::GPR32RegClass,
  &AArch64::GPR32spRegClass,
  nullptr
};

static const TargetRegisterClass *const FPR32_with_hsub_in_FPR16_loSuperclasses[] = {
  &AArch64::FPR32RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR32argSuperclasses[] = {
  &AArch64::GPR32allRegClass,
  &AArch64::GPR32RegClass,
  &AArch64::GPR32spRegClass,
  &AArch64::GPR32commonRegClass,
  nullptr
};

static const TargetRegisterClass *const MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::GPR32allRegClass,
  &AArch64::GPR32RegClass,
  &AArch64::GPR32spRegClass,
  &AArch64::GPR32commonRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR32sponlySuperclasses[] = {
  &AArch64::GPR32allRegClass,
  &AArch64::GPR32spRegClass,
  nullptr
};

static const TargetRegisterClass *const WSeqPairsClass_with_subo32_in_GPR32commonSuperclasses[] = {
  &AArch64::WSeqPairsClassRegClass,
  nullptr
};

static const TargetRegisterClass *const WSeqPairsClass_with_sube32_in_GPR32argSuperclasses[] = {
  &AArch64::WSeqPairsClassRegClass,
  &AArch64::WSeqPairsClass_with_subo32_in_GPR32commonRegClass,
  nullptr
};

static const TargetRegisterClass *const WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::WSeqPairsClassRegClass,
  &AArch64::WSeqPairsClass_with_subo32_in_GPR32commonRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64Superclasses[] = {
  &AArch64::GPR64allRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64spSuperclasses[] = {
  &AArch64::GPR64allRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64commonSuperclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64RegClass,
  &AArch64::GPR64spRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64noipSuperclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64common_and_GPR64noipSuperclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64RegClass,
  &AArch64::GPR64spRegClass,
  &AArch64::GPR64commonRegClass,
  &AArch64::GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const tcGPR64Superclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64RegClass,
  &AArch64::GPR64spRegClass,
  &AArch64::GPR64commonRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64RegClass,
  &AArch64::GPR64spRegClass,
  &AArch64::GPR64commonRegClass,
  &AArch64::GPR64noipRegClass,
  &AArch64::GPR64common_and_GPR64noipRegClass,
  &AArch64::tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const FPR64_loSuperclasses[] = {
  &AArch64::FPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64argSuperclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64RegClass,
  &AArch64::GPR64spRegClass,
  &AArch64::GPR64commonRegClass,
  &AArch64::GPR64noipRegClass,
  &AArch64::GPR64common_and_GPR64noipRegClass,
  &AArch64::tcGPR64RegClass,
  &AArch64::GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64RegClass,
  &AArch64::GPR64spRegClass,
  &AArch64::GPR64commonRegClass,
  &AArch64::GPR64noipRegClass,
  &AArch64::GPR64common_and_GPR64noipRegClass,
  &AArch64::tcGPR64RegClass,
  &AArch64::GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const rtcGPR64Superclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64RegClass,
  &AArch64::GPR64spRegClass,
  &AArch64::GPR64commonRegClass,
  &AArch64::tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64sponlySuperclasses[] = {
  &AArch64::GPR64allRegClass,
  &AArch64::GPR64spRegClass,
  nullptr
};

static const TargetRegisterClass *const DD_with_dsub0_in_FPR64_loSuperclasses[] = {
  &AArch64::DDRegClass,
  nullptr
};

static const TargetRegisterClass *const DD_with_dsub1_in_FPR64_loSuperclasses[] = {
  &AArch64::DDRegClass,
  nullptr
};

static const TargetRegisterClass *const DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loSuperclasses[] = {
  &AArch64::DDRegClass,
  &AArch64::DD_with_dsub0_in_FPR64_loRegClass,
  &AArch64::DD_with_dsub1_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_subo64_in_GPR64commonSuperclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_subo64_in_GPR64noipSuperclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_sube64_in_GPR64noipSuperclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_sube64_in_tcGPR64Superclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64noipRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_GPR64noipRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_subo64_in_tcGPR64Superclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64noipRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_GPR64noipRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_sub_32_in_GPR32argSuperclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64noipRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_GPR64noipRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64noipRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_GPR64noipRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const XSeqPairsClass_with_sube64_in_rtcGPR64Superclasses[] = {
  &AArch64::XSeqPairsClassRegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
  &AArch64::XSeqPairsClass_with_sube64_in_tcGPR64RegClass,
  &AArch64::XSeqPairsClass_with_subo64_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const FPR128_loSuperclasses[] = {
  &AArch64::FPR128RegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR_4bSuperclasses[] = {
  &AArch64::ZPRRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR_3bSuperclasses[] = {
  &AArch64::ZPRRegClass,
  &AArch64::ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const DDD_with_dsub0_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDRegClass,
  nullptr
};

static const TargetRegisterClass *const DDD_with_dsub1_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDRegClass,
  nullptr
};

static const TargetRegisterClass *const DDD_with_dsub2_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDRegClass,
  nullptr
};

static const TargetRegisterClass *const DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDRegClass,
  &AArch64::DDD_with_dsub0_in_FPR64_loRegClass,
  &AArch64::DDD_with_dsub1_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDRegClass,
  &AArch64::DDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDD_with_dsub2_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDRegClass,
  &AArch64::DDD_with_dsub0_in_FPR64_loRegClass,
  &AArch64::DDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDD_with_dsub2_in_FPR64_loRegClass,
  &AArch64::DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub0_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub1_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub2_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub3_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  &AArch64::DDDD_with_dsub0_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub2_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  &AArch64::DDDD_with_dsub2_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub3_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  &AArch64::DDDD_with_dsub0_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub2_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub2_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub3_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSuperclasses[] = {
  &AArch64::DDDDRegClass,
  &AArch64::DDDD_with_dsub0_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub2_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub3_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass,
  &AArch64::DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass,
  nullptr
};

static const TargetRegisterClass *const QQ_with_dsub_in_FPR64_loSuperclasses[] = {
  &AArch64::QQRegClass,
  nullptr
};

static const TargetRegisterClass *const QQ_with_qsub1_in_FPR128_loSuperclasses[] = {
  &AArch64::QQRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR2_with_dsub_in_FPR64_loSuperclasses[] = {
  &AArch64::ZPR2RegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR2_with_zsub1_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR2RegClass,
  nullptr
};

static const TargetRegisterClass *const QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loSuperclasses[] = {
  &AArch64::QQRegClass,
  &AArch64::QQ_with_dsub_in_FPR64_loRegClass,
  &AArch64::QQ_with_qsub1_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR2RegClass,
  &AArch64::ZPR2_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR2_with_zsub1_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR2_with_zsub0_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR2RegClass,
  &AArch64::ZPR2_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR2_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR2_with_zsub1_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR2RegClass,
  &AArch64::ZPR2_with_zsub1_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR2RegClass,
  &AArch64::ZPR2_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR2_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR2_with_zsub0_in_ZPR_3bRegClass,
  &AArch64::ZPR2_with_zsub1_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQ_with_dsub_in_FPR64_loSuperclasses[] = {
  &AArch64::QQQRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQ_with_qsub1_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQ_with_qsub2_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_dsub_in_FPR64_loSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_zsub1_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_zsub2_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  nullptr
};

static const TargetRegisterClass *const QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQRegClass,
  &AArch64::QQQ_with_dsub_in_FPR64_loRegClass,
  &AArch64::QQQ_with_qsub1_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQRegClass,
  &AArch64::QQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQ_with_qsub2_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQRegClass,
  &AArch64::QQQ_with_dsub_in_FPR64_loRegClass,
  &AArch64::QQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQ_with_qsub2_in_FPR128_loRegClass,
  &AArch64::QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_zsub0_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_zsub1_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_zsub2_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub0_in_ZPR_3bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR3RegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR3_with_zsub0_in_ZPR_3bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR3_with_zsub2_in_ZPR_3bRegClass,
  &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_dsub_in_FPR64_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_qsub1_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_qsub2_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_qsub3_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_dsub_in_FPR64_loSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub1_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub2_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub3_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  &AArch64::QQQQ_with_dsub_in_FPR64_loRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub2_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  &AArch64::QQQQ_with_qsub2_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub3_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  &AArch64::QQQQ_with_dsub_in_FPR64_loRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub2_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub2_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub3_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loSuperclasses[] = {
  &AArch64::QQQQRegClass,
  &AArch64::QQQQ_with_dsub_in_FPR64_loRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub2_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub3_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass,
  &AArch64::QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub0_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub1_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub2_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub3_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub0_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub0_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bSuperclasses[] = {
  &AArch64::ZPR4RegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_loRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
  &AArch64::ZPR4_with_zsub0_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub3_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bRegClass,
  &AArch64::ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_1_in_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_sub_32_in_GPR32argSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64argSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_sub_32_in_GPR32argRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64argSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_sub_32_in_GPR32argRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64argRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_sub_32_in_GPR32argRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_0_in_rtcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_2_in_rtcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_4_in_rtcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_6_in_GPR64argSuperclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_sub_32_in_GPR32argRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64argRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64argRegClass,
  nullptr
};

static const TargetRegisterClass *const GPR64x8Class_with_x8sub_6_in_rtcGPR64Superclasses[] = {
  &AArch64::GPR64x8ClassRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
  &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
  &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
  &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
  nullptr
};


static inline unsigned GPR32AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<MCPhysReg> GPR32GetRawAllocationOrder(const MachineFunction &MF) {
  static const MCPhysReg AltOrder1[] = { AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WZR, AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7 };
  const MCRegisterClass &MCR = AArch64MCRegisterClasses[AArch64::GPR32RegClassID];
  const ArrayRef<MCPhysReg> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = GPR32AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned GPR32spAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<MCPhysReg> GPR32spGetRawAllocationOrder(const MachineFunction &MF) {
  static const MCPhysReg AltOrder1[] = { AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WSP, AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7 };
  const MCRegisterClass &MCR = AArch64MCRegisterClasses[AArch64::GPR32spRegClassID];
  const ArrayRef<MCPhysReg> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = GPR32spAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned GPR32commonAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<MCPhysReg> GPR32commonGetRawAllocationOrder(const MachineFunction &MF) {
  static const MCPhysReg AltOrder1[] = { AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7 };
  const MCRegisterClass &MCR = AArch64MCRegisterClasses[AArch64::GPR32commonRegClassID];
  const ArrayRef<MCPhysReg> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = GPR32commonAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned GPR64AltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<MCPhysReg> GPR64GetRawAllocationOrder(const MachineFunction &MF) {
  static const MCPhysReg AltOrder1[] = { AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::XZR, AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7 };
  const MCRegisterClass &MCR = AArch64MCRegisterClasses[AArch64::GPR64RegClassID];
  const ArrayRef<MCPhysReg> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = GPR64AltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned GPR64spAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<MCPhysReg> GPR64spGetRawAllocationOrder(const MachineFunction &MF) {
  static const MCPhysReg AltOrder1[] = { AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::SP, AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7 };
  const MCRegisterClass &MCR = AArch64MCRegisterClasses[AArch64::GPR64spRegClassID];
  const ArrayRef<MCPhysReg> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = GPR64spAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

static inline unsigned GPR64commonAltOrderSelect(const MachineFunction &MF) { return 1; }

static ArrayRef<MCPhysReg> GPR64commonGetRawAllocationOrder(const MachineFunction &MF) {
  static const MCPhysReg AltOrder1[] = { AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7 };
  const MCRegisterClass &MCR = AArch64MCRegisterClasses[AArch64::GPR64commonRegClassID];
  const ArrayRef<MCPhysReg> Order[] = {
    makeArrayRef(MCR.begin(), MCR.getNumRegs()),
    makeArrayRef(AltOrder1)
  };
  const unsigned Select = GPR64commonAltOrderSelect(MF);
  assert(Select < 2);
  return Order[Select];
}

namespace AArch64 {   // Register class instances
  extern const TargetRegisterClass FPR8RegClass = {
    &AArch64MCRegisterClasses[FPR8RegClassID],
    FPR8SubClassMask,
    SuperRegIdxSeqs + 66,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass FPR16RegClass = {
    &AArch64MCRegisterClasses[FPR16RegClassID],
    FPR16SubClassMask,
    SuperRegIdxSeqs + 89,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass FPR16_loRegClass = {
    &AArch64MCRegisterClasses[FPR16_loRegClassID],
    FPR16_loSubClassMask,
    SuperRegIdxSeqs + 89,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    FPR16_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass PPRRegClass = {
    &AArch64MCRegisterClasses[PPRRegClassID],
    PPRSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass PPR_3bRegClass = {
    &AArch64MCRegisterClasses[PPR_3bRegClassID],
    PPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    PPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR32allRegClass = {
    &AArch64MCRegisterClasses[GPR32allRegClassID],
    GPR32allSubClassMask,
    SuperRegIdxSeqs + 54,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass FPR32RegClass = {
    &AArch64MCRegisterClasses[FPR32RegClassID],
    FPR32SubClassMask,
    SuperRegIdxSeqs + 100,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass GPR32RegClass = {
    &AArch64MCRegisterClasses[GPR32RegClassID],
    GPR32SubClassMask,
    SuperRegIdxSeqs + 54,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR32Superclasses,
    GPR32GetRawAllocationOrder
  };

  extern const TargetRegisterClass GPR32spRegClass = {
    &AArch64MCRegisterClasses[GPR32spRegClassID],
    GPR32spSubClassMask,
    SuperRegIdxSeqs + 54,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR32spSuperclasses,
    GPR32spGetRawAllocationOrder
  };

  extern const TargetRegisterClass GPR32commonRegClass = {
    &AArch64MCRegisterClasses[GPR32commonRegClassID],
    GPR32commonSubClassMask,
    SuperRegIdxSeqs + 54,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR32commonSuperclasses,
    GPR32commonGetRawAllocationOrder
  };

  extern const TargetRegisterClass FPR32_with_hsub_in_FPR16_loRegClass = {
    &AArch64MCRegisterClasses[FPR32_with_hsub_in_FPR16_loRegClassID],
    FPR32_with_hsub_in_FPR16_loSubClassMask,
    SuperRegIdxSeqs + 100,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    FPR32_with_hsub_in_FPR16_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR32argRegClass = {
    &AArch64MCRegisterClasses[GPR32argRegClassID],
    GPR32argSubClassMask,
    SuperRegIdxSeqs + 54,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR32argSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[MatrixIndexGPR32_12_15RegClassID],
    MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 54,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass CCRRegClass = {
    &AArch64MCRegisterClasses[CCRRegClassID],
    CCRSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass GPR32sponlyRegClass = {
    &AArch64MCRegisterClasses[GPR32sponlyRegClassID],
    GPR32sponlySubClassMask,
    SuperRegIdxSeqs + 0,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR32sponlySuperclasses,
    nullptr
  };

  extern const TargetRegisterClass WSeqPairsClassRegClass = {
    &AArch64MCRegisterClasses[WSeqPairsClassRegClassID],
    WSeqPairsClassSubClassMask,
    SuperRegIdxSeqs + 125,
    LaneBitmask(0x000000000000000C),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass WSeqPairsClass_with_subo32_in_GPR32commonRegClass = {
    &AArch64MCRegisterClasses[WSeqPairsClass_with_subo32_in_GPR32commonRegClassID],
    WSeqPairsClass_with_subo32_in_GPR32commonSubClassMask,
    SuperRegIdxSeqs + 125,
    LaneBitmask(0x000000000000000C),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    WSeqPairsClass_with_subo32_in_GPR32commonSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass WSeqPairsClass_with_sube32_in_GPR32argRegClass = {
    &AArch64MCRegisterClasses[WSeqPairsClass_with_sube32_in_GPR32argRegClassID],
    WSeqPairsClass_with_sube32_in_GPR32argSubClassMask,
    SuperRegIdxSeqs + 125,
    LaneBitmask(0x000000000000000C),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    WSeqPairsClass_with_sube32_in_GPR32argSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15RegClassID],
    WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 125,
    LaneBitmask(0x000000000000000C),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64allRegClass = {
    &AArch64MCRegisterClasses[GPR64allRegClassID],
    GPR64allSubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass FPR64RegClass = {
    &AArch64MCRegisterClasses[FPR64RegClassID],
    FPR64SubClassMask,
    SuperRegIdxSeqs + 77,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64RegClassID],
    GPR64SubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64Superclasses,
    GPR64GetRawAllocationOrder
  };

  extern const TargetRegisterClass GPR64spRegClass = {
    &AArch64MCRegisterClasses[GPR64spRegClassID],
    GPR64spSubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64spSuperclasses,
    GPR64spGetRawAllocationOrder
  };

  extern const TargetRegisterClass GPR64commonRegClass = {
    &AArch64MCRegisterClasses[GPR64commonRegClassID],
    GPR64commonSubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64commonSuperclasses,
    GPR64commonGetRawAllocationOrder
  };

  extern const TargetRegisterClass GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64noipRegClassID],
    GPR64noipSubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64common_and_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64common_and_GPR64noipRegClassID],
    GPR64common_and_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64common_and_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass tcGPR64RegClass = {
    &AArch64MCRegisterClasses[tcGPR64RegClassID],
    tcGPR64SubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64noip_and_tcGPR64RegClassID],
    GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass FPR64_loRegClass = {
    &AArch64MCRegisterClasses[FPR64_loRegClassID],
    FPR64_loSubClassMask,
    SuperRegIdxSeqs + 77,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64argRegClass = {
    &AArch64MCRegisterClasses[GPR64argRegClassID],
    GPR64argSubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64argSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID],
    GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass rtcGPR64RegClass = {
    &AArch64MCRegisterClasses[rtcGPR64RegClassID],
    rtcGPR64SubClassMask,
    SuperRegIdxSeqs + 2,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    rtcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64sponlyRegClass = {
    &AArch64MCRegisterClasses[GPR64sponlyRegClassID],
    GPR64sponlySubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x0000000000000002),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    GPR64sponlySuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDRegClass = {
    &AArch64MCRegisterClasses[DDRegClassID],
    DDSubClassMask,
    SuperRegIdxSeqs + 155,
    LaneBitmask(0x0000000000200001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass DD_with_dsub0_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DD_with_dsub0_in_FPR64_loRegClassID],
    DD_with_dsub0_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 155,
    LaneBitmask(0x0000000000200001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DD_with_dsub0_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DD_with_dsub1_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DD_with_dsub1_in_FPR64_loRegClassID],
    DD_with_dsub1_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 155,
    LaneBitmask(0x0000000000200001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DD_with_dsub1_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClassRegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClassRegClassID],
    XSeqPairsClassSubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loRegClassID],
    DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 155,
    LaneBitmask(0x0000000000200001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_subo64_in_GPR64commonRegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_subo64_in_GPR64commonRegClassID],
    XSeqPairsClass_with_subo64_in_GPR64commonSubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_subo64_in_GPR64commonSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_subo64_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_subo64_in_GPR64noipRegClassID],
    XSeqPairsClass_with_subo64_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_subo64_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_sube64_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_sube64_in_GPR64noipRegClassID],
    XSeqPairsClass_with_sube64_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_sube64_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_sube64_in_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_sube64_in_tcGPR64RegClassID],
    XSeqPairsClass_with_sube64_in_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_sube64_in_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClassID],
    XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_subo64_in_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_subo64_in_tcGPR64RegClassID],
    XSeqPairsClass_with_subo64_in_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_subo64_in_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64RegClassID],
    XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_sub_32_in_GPR32argRegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_sub_32_in_GPR32argRegClassID],
    XSeqPairsClass_with_sub_32_in_GPR32argSubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_sub_32_in_GPR32argSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID],
    XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass XSeqPairsClass_with_sube64_in_rtcGPR64RegClass = {
    &AArch64MCRegisterClasses[XSeqPairsClass_with_sube64_in_rtcGPR64RegClassID],
    XSeqPairsClass_with_sube64_in_rtcGPR64SubClassMask,
    SuperRegIdxSeqs + 120,
    LaneBitmask(0x0000000400000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    XSeqPairsClass_with_sube64_in_rtcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass FPR128RegClass = {
    &AArch64MCRegisterClasses[FPR128RegClassID],
    FPR128SubClassMask,
    SuperRegIdxSeqs + 111,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass ZPRRegClass = {
    &AArch64MCRegisterClasses[ZPRRegClassID],
    ZPRSubClassMask,
    SuperRegIdxSeqs + 18,
    LaneBitmask(0x0000000000000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass FPR128_loRegClass = {
    &AArch64MCRegisterClasses[FPR128_loRegClassID],
    FPR128_loSubClassMask,
    SuperRegIdxSeqs + 111,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass MPR128RegClass = {
    &AArch64MCRegisterClasses[MPR128RegClassID],
    MPR128SubClassMask,
    SuperRegIdxSeqs + 37,
    LaneBitmask(0x0000000000000001),
    0,
    0x00, /* TSFlags */
    false, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR_4bRegClassID],
    ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 18,
    LaneBitmask(0x0000000000000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR_3bRegClassID],
    ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 18,
    LaneBitmask(0x0000000000000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDRegClass = {
    &AArch64MCRegisterClasses[DDDRegClassID],
    DDDSubClassMask,
    SuperRegIdxSeqs + 143,
    LaneBitmask(0x0000000000A00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass DDD_with_dsub0_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDD_with_dsub0_in_FPR64_loRegClassID],
    DDD_with_dsub0_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 143,
    LaneBitmask(0x0000000000A00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDD_with_dsub0_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDD_with_dsub1_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDD_with_dsub1_in_FPR64_loRegClassID],
    DDD_with_dsub1_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 143,
    LaneBitmask(0x0000000000A00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDD_with_dsub1_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDD_with_dsub2_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDD_with_dsub2_in_FPR64_loRegClassID],
    DDD_with_dsub2_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 143,
    LaneBitmask(0x0000000000A00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDD_with_dsub2_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loRegClassID],
    DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 143,
    LaneBitmask(0x0000000000A00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClassID],
    DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 143,
    LaneBitmask(0x0000000000A00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClassID],
    DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 143,
    LaneBitmask(0x0000000000A00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDDRegClass = {
    &AArch64MCRegisterClasses[DDDDRegClassID],
    DDDDSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub0_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub0_in_FPR64_loRegClassID],
    DDDD_with_dsub0_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub0_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub1_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub1_in_FPR64_loRegClassID],
    DDDD_with_dsub1_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub1_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub2_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub2_in_FPR64_loRegClassID],
    DDDD_with_dsub2_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub2_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub3_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub3_in_FPR64_loRegClassID],
    DDDD_with_dsub3_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub3_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loRegClassID],
    DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClassID],
    DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID],
    DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClassID],
    DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID],
    DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClassID],
    DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 131,
    LaneBitmask(0x0000000000E00001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQRegClass = {
    &AArch64MCRegisterClasses[QQRegClassID],
    QQSubClassMask,
    SuperRegIdxSeqs + 165,
    LaneBitmask(0x0000000001000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR2RegClass = {
    &AArch64MCRegisterClasses[ZPR2RegClassID],
    ZPR2SubClassMask,
    SuperRegIdxSeqs + 139,
    LaneBitmask(0x0000001800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass QQ_with_dsub_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[QQ_with_dsub_in_FPR64_loRegClassID],
    QQ_with_dsub_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 165,
    LaneBitmask(0x0000000001000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQ_with_dsub_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQ_with_qsub1_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQ_with_qsub1_in_FPR128_loRegClassID],
    QQ_with_qsub1_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 165,
    LaneBitmask(0x0000000001000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQ_with_qsub1_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR2_with_dsub_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[ZPR2_with_dsub_in_FPR64_loRegClassID],
    ZPR2_with_dsub_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 139,
    LaneBitmask(0x0000001800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR2_with_dsub_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR2_with_zsub1_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR2_with_zsub1_in_ZPR_4bRegClassID],
    ZPR2_with_zsub1_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 139,
    LaneBitmask(0x0000001800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR2_with_zsub1_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loRegClassID],
    QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 165,
    LaneBitmask(0x0000000001000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bRegClassID],
    ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 139,
    LaneBitmask(0x0000001800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR2_with_zsub0_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR2_with_zsub0_in_ZPR_3bRegClassID],
    ZPR2_with_zsub0_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 139,
    LaneBitmask(0x0000001800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR2_with_zsub0_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR2_with_zsub1_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR2_with_zsub1_in_ZPR_3bRegClassID],
    ZPR2_with_zsub1_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 139,
    LaneBitmask(0x0000001800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR2_with_zsub1_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bRegClassID],
    ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 139,
    LaneBitmask(0x0000001800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass MPR64RegClass = {
    &AArch64MCRegisterClasses[MPR64RegClassID],
    MPR64SubClassMask,
    SuperRegIdxSeqs + 28,
    LaneBitmask(0x0000000000000030),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass QQQRegClass = {
    &AArch64MCRegisterClasses[QQQRegClassID],
    QQQSubClassMask,
    SuperRegIdxSeqs + 150,
    LaneBitmask(0x0000000005000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3RegClass = {
    &AArch64MCRegisterClasses[ZPR3RegClassID],
    ZPR3SubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass QQQ_with_dsub_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[QQQ_with_dsub_in_FPR64_loRegClassID],
    QQQ_with_dsub_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 150,
    LaneBitmask(0x0000000005000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQ_with_dsub_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQ_with_qsub1_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQ_with_qsub1_in_FPR128_loRegClassID],
    QQQ_with_qsub1_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 150,
    LaneBitmask(0x0000000005000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQ_with_qsub1_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQ_with_qsub2_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQ_with_qsub2_in_FPR128_loRegClassID],
    QQQ_with_qsub2_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 150,
    LaneBitmask(0x0000000005000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQ_with_qsub2_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_dsub_in_FPR64_loRegClassID],
    ZPR3_with_dsub_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_dsub_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_zsub1_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_zsub1_in_ZPR_4bRegClassID],
    ZPR3_with_zsub1_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_zsub1_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_zsub2_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_zsub2_in_ZPR_4bRegClassID],
    ZPR3_with_zsub2_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_zsub2_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loRegClassID],
    QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 150,
    LaneBitmask(0x0000000005000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loRegClassID],
    QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 150,
    LaneBitmask(0x0000000005000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClassID],
    ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClassID],
    ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loRegClassID],
    QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 150,
    LaneBitmask(0x0000000005000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClassID],
    ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_zsub0_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_zsub0_in_ZPR_3bRegClassID],
    ZPR3_with_zsub0_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_zsub0_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_zsub1_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_zsub1_in_ZPR_3bRegClassID],
    ZPR3_with_zsub1_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_zsub1_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_zsub2_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_zsub2_in_ZPR_3bRegClassID],
    ZPR3_with_zsub2_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_zsub2_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bRegClassID],
    ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bRegClassID],
    ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bRegClassID],
    ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 136,
    LaneBitmask(0x0000019800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQRegClass = {
    &AArch64MCRegisterClasses[QQQQRegClassID],
    QQQQSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4RegClass = {
    &AArch64MCRegisterClasses[ZPR4RegClassID],
    ZPR4SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_dsub_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_dsub_in_FPR64_loRegClassID],
    QQQQ_with_dsub_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_dsub_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_qsub1_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_qsub1_in_FPR128_loRegClassID],
    QQQQ_with_qsub1_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_qsub1_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_qsub2_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_qsub2_in_FPR128_loRegClassID],
    QQQQ_with_qsub2_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_qsub2_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_qsub3_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_qsub3_in_FPR128_loRegClassID],
    QQQQ_with_qsub3_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_qsub3_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_loRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_dsub_in_FPR64_loRegClassID],
    ZPR4_with_dsub_in_FPR64_loSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_dsub_in_FPR64_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub1_in_ZPR_4bRegClassID],
    ZPR4_with_zsub1_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub1_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub2_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub2_in_ZPR_4bRegClassID],
    ZPR4_with_zsub2_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub2_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub3_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub3_in_ZPR_4bRegClassID],
    ZPR4_with_zsub3_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub3_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loRegClassID],
    QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClassID],
    QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID],
    QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClassID],
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClassID],
    ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID],
    ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClassID],
    QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID],
    QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClassID],
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID],
    ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass = {
    &AArch64MCRegisterClasses[QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClassID],
    QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loSubClassMask,
    SuperRegIdxSeqs + 134,
    LaneBitmask(0x0000000007000001),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClassID],
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub0_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub0_in_ZPR_3bRegClassID],
    ZPR4_with_zsub0_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub0_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub1_in_ZPR_3bRegClassID],
    ZPR4_with_zsub1_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub1_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub2_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub2_in_ZPR_3bRegClassID],
    ZPR4_with_zsub2_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub2_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub3_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub3_in_ZPR_3bRegClassID],
    ZPR4_with_zsub3_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub3_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bRegClassID],
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClassID],
    ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID],
    ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bRegClassID],
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID],
    ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bRegClass = {
    &AArch64MCRegisterClasses[ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bRegClassID],
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x000001F800000041),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8ClassRegClass = {
    &AArch64MCRegisterClasses[GPR64x8ClassRegClassID],
    GPR64x8ClassSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_0_in_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_1_in_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_1_in_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_1_in_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClassID],
    GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_sub_32_in_GPR32argRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_sub_32_in_GPR32argRegClassID],
    GPR64x8Class_with_sub_32_in_GPR32argSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_sub_32_in_GPR32argSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass MPR32RegClass = {
    &AArch64MCRegisterClasses[MPR32RegClassID],
    MPR32SubClassMask,
    SuperRegIdxSeqs + 23,
    LaneBitmask(0x00000000000001B0),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64argRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64argRegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64argSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64argSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID],
    GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID],
    GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64argRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64argRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64argSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64argSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID],
    GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClassID],
    GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_0_in_rtcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_0_in_rtcGPR64RegClassID],
    GPR64x8Class_with_x8sub_0_in_rtcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_0_in_rtcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_2_in_rtcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_2_in_rtcGPR64RegClassID],
    GPR64x8Class_with_x8sub_2_in_rtcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_2_in_rtcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClassID],
    GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_4_in_rtcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_4_in_rtcGPR64RegClassID],
    GPR64x8Class_with_x8sub_4_in_rtcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_4_in_rtcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_GPR64argRegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_6_in_GPR64argRegClassID],
    GPR64x8Class_with_x8sub_6_in_GPR64argSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_6_in_GPR64argSuperclasses,
    nullptr
  };

  extern const TargetRegisterClass GPR64x8Class_with_x8sub_6_in_rtcGPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64x8Class_with_x8sub_6_in_rtcGPR64RegClassID],
    GPR64x8Class_with_x8sub_6_in_rtcGPR64SubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000003F8000002),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    true, /* CoveredBySubRegs */
    GPR64x8Class_with_x8sub_6_in_rtcGPR64Superclasses,
    nullptr
  };

  extern const TargetRegisterClass MPR16RegClass = {
    &AArch64MCRegisterClasses[MPR16RegClassID],
    MPR16SubClassMask,
    SuperRegIdxSeqs + 15,
    LaneBitmask(0x0000000000001FB0),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass MPRRegClass = {
    &AArch64MCRegisterClasses[MPRRegClassID],
    MPRSubClassMask,
    SuperRegIdxSeqs + 1,
    LaneBitmask(0x00000000001FFFB0),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

  extern const TargetRegisterClass MPR8RegClass = {
    &AArch64MCRegisterClasses[MPR8RegClassID],
    MPR8SubClassMask,
    SuperRegIdxSeqs + 13,
    LaneBitmask(0x00000000001FFFB0),
    0,
    0x00, /* TSFlags */
    true, /* HasDisjunctSubRegs */
    false, /* CoveredBySubRegs */
    NullRegClasses,
    nullptr
  };

} // end namespace AArch64

namespace {
  const TargetRegisterClass *const RegisterClasses[] = {
    &AArch64::FPR8RegClass,
    &AArch64::FPR16RegClass,
    &AArch64::FPR16_loRegClass,
    &AArch64::PPRRegClass,
    &AArch64::PPR_3bRegClass,
    &AArch64::GPR32allRegClass,
    &AArch64::FPR32RegClass,
    &AArch64::GPR32RegClass,
    &AArch64::GPR32spRegClass,
    &AArch64::GPR32commonRegClass,
    &AArch64::FPR32_with_hsub_in_FPR16_loRegClass,
    &AArch64::GPR32argRegClass,
    &AArch64::MatrixIndexGPR32_12_15RegClass,
    &AArch64::CCRRegClass,
    &AArch64::GPR32sponlyRegClass,
    &AArch64::WSeqPairsClassRegClass,
    &AArch64::WSeqPairsClass_with_subo32_in_GPR32commonRegClass,
    &AArch64::WSeqPairsClass_with_sube32_in_GPR32argRegClass,
    &AArch64::WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15RegClass,
    &AArch64::GPR64allRegClass,
    &AArch64::FPR64RegClass,
    &AArch64::GPR64RegClass,
    &AArch64::GPR64spRegClass,
    &AArch64::GPR64commonRegClass,
    &AArch64::GPR64noipRegClass,
    &AArch64::GPR64common_and_GPR64noipRegClass,
    &AArch64::tcGPR64RegClass,
    &AArch64::GPR64noip_and_tcGPR64RegClass,
    &AArch64::FPR64_loRegClass,
    &AArch64::GPR64argRegClass,
    &AArch64::GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
    &AArch64::rtcGPR64RegClass,
    &AArch64::GPR64sponlyRegClass,
    &AArch64::DDRegClass,
    &AArch64::DD_with_dsub0_in_FPR64_loRegClass,
    &AArch64::DD_with_dsub1_in_FPR64_loRegClass,
    &AArch64::XSeqPairsClassRegClass,
    &AArch64::DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_loRegClass,
    &AArch64::XSeqPairsClass_with_subo64_in_GPR64commonRegClass,
    &AArch64::XSeqPairsClass_with_subo64_in_GPR64noipRegClass,
    &AArch64::XSeqPairsClass_with_sube64_in_GPR64noipRegClass,
    &AArch64::XSeqPairsClass_with_sube64_in_tcGPR64RegClass,
    &AArch64::XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::XSeqPairsClass_with_subo64_in_tcGPR64RegClass,
    &AArch64::XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::XSeqPairsClass_with_sub_32_in_GPR32argRegClass,
    &AArch64::XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
    &AArch64::XSeqPairsClass_with_sube64_in_rtcGPR64RegClass,
    &AArch64::FPR128RegClass,
    &AArch64::ZPRRegClass,
    &AArch64::FPR128_loRegClass,
    &AArch64::MPR128RegClass,
    &AArch64::ZPR_4bRegClass,
    &AArch64::ZPR_3bRegClass,
    &AArch64::DDDRegClass,
    &AArch64::DDD_with_dsub0_in_FPR64_loRegClass,
    &AArch64::DDD_with_dsub1_in_FPR64_loRegClass,
    &AArch64::DDD_with_dsub2_in_FPR64_loRegClass,
    &AArch64::DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_loRegClass,
    &AArch64::DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClass,
    &AArch64::DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_loRegClass,
    &AArch64::DDDDRegClass,
    &AArch64::DDDD_with_dsub0_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub1_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub2_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub3_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass,
    &AArch64::DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_loRegClass,
    &AArch64::QQRegClass,
    &AArch64::ZPR2RegClass,
    &AArch64::QQ_with_dsub_in_FPR64_loRegClass,
    &AArch64::QQ_with_qsub1_in_FPR128_loRegClass,
    &AArch64::ZPR2_with_dsub_in_FPR64_loRegClass,
    &AArch64::ZPR2_with_zsub1_in_ZPR_4bRegClass,
    &AArch64::QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_loRegClass,
    &AArch64::ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4bRegClass,
    &AArch64::ZPR2_with_zsub0_in_ZPR_3bRegClass,
    &AArch64::ZPR2_with_zsub1_in_ZPR_3bRegClass,
    &AArch64::ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3bRegClass,
    &AArch64::MPR64RegClass,
    &AArch64::QQQRegClass,
    &AArch64::ZPR3RegClass,
    &AArch64::QQQ_with_dsub_in_FPR64_loRegClass,
    &AArch64::QQQ_with_qsub1_in_FPR128_loRegClass,
    &AArch64::QQQ_with_qsub2_in_FPR128_loRegClass,
    &AArch64::ZPR3_with_dsub_in_FPR64_loRegClass,
    &AArch64::ZPR3_with_zsub1_in_ZPR_4bRegClass,
    &AArch64::ZPR3_with_zsub2_in_ZPR_4bRegClass,
    &AArch64::QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_loRegClass,
    &AArch64::QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_loRegClass,
    &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4bRegClass,
    &AArch64::ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
    &AArch64::QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_loRegClass,
    &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4bRegClass,
    &AArch64::ZPR3_with_zsub0_in_ZPR_3bRegClass,
    &AArch64::ZPR3_with_zsub1_in_ZPR_3bRegClass,
    &AArch64::ZPR3_with_zsub2_in_ZPR_3bRegClass,
    &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3bRegClass,
    &AArch64::ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3bRegClass,
    &AArch64::ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3bRegClass,
    &AArch64::QQQQRegClass,
    &AArch64::ZPR4RegClass,
    &AArch64::QQQQ_with_dsub_in_FPR64_loRegClass,
    &AArch64::QQQQ_with_qsub1_in_FPR128_loRegClass,
    &AArch64::QQQQ_with_qsub2_in_FPR128_loRegClass,
    &AArch64::QQQQ_with_qsub3_in_FPR128_loRegClass,
    &AArch64::ZPR4_with_dsub_in_FPR64_loRegClass,
    &AArch64::ZPR4_with_zsub1_in_ZPR_4bRegClass,
    &AArch64::ZPR4_with_zsub2_in_ZPR_4bRegClass,
    &AArch64::ZPR4_with_zsub3_in_ZPR_4bRegClass,
    &AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_loRegClass,
    &AArch64::QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass,
    &AArch64::QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass,
    &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4bRegClass,
    &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
    &AArch64::ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
    &AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_loRegClass,
    &AArch64::QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass,
    &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4bRegClass,
    &AArch64::ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
    &AArch64::QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_loRegClass,
    &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4bRegClass,
    &AArch64::ZPR4_with_zsub0_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_zsub1_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_zsub2_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_zsub3_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3bRegClass,
    &AArch64::ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3bRegClass,
    &AArch64::GPR64x8ClassRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64RegClass,
    &AArch64::GPR64x8Class_with_sub_32_in_GPR32argRegClass,
    &AArch64::MPR32RegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64argRegClass,
    &AArch64::GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64argRegClass,
    &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
    &AArch64::GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15RegClass,
    &AArch64::GPR64x8Class_with_x8sub_0_in_rtcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_2_in_rtcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noipRegClass,
    &AArch64::GPR64x8Class_with_x8sub_4_in_rtcGPR64RegClass,
    &AArch64::GPR64x8Class_with_x8sub_6_in_GPR64argRegClass,
    &AArch64::GPR64x8Class_with_x8sub_6_in_rtcGPR64RegClass,
    &AArch64::MPR16RegClass,
    &AArch64::MPRRegClass,
    &AArch64::MPR8RegClass,
  };
} // end anonymous namespace

static const uint8_t CostPerUseTable[] = { 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, };


static const bool InAllocatableClassTable[] = { 
false, false, true, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, };


static const TargetRegisterInfoDesc AArch64RegInfoDesc = { // Extra Descriptors
CostPerUseTable, 1, InAllocatableClassTable};

unsigned AArch64GenRegisterInfo::composeSubRegIndicesImpl(unsigned IdxA, unsigned IdxB) const {
  static const uint8_t RowMap[151] = {
    0, 0, 0, 1, 2, 3, 0, 0, 4, 5, 6, 0, 0, 0, 0, 0, 1, 0, 2, 3, 4, 5, 6, 7, 8, 0, 0, 1, 0, 2, 0, 0, 0, 3, 0, 0, 7, 8, 9, 0, 0, 0, 3, 4, 0, 0, 0, 0, 2, 5, 0, 0, 2, 6, 0, 0, 6, 7, 0, 0, 0, 0, 0, 1, 1, 0, 3, 3, 0, 2, 2, 0, 4, 4, 4, 0, 6, 6, 6, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 0, 0, 9, 9, 9, 9, 0, 0, 8, 8, 8, 8, 0, 0, 0, 1, 1, 2, 10, 10, 10, 0, 0, 4, 4, 5, 4, 4, 5, 0, 0, 3, 5, 7, 1, 2, 3, 4, 11, 10, 11, 11, 10, 10, 0, 0, 7, 7, 8, 7, 7, 7, 7, 8, 8, 
  };
  static const uint8_t Rows[12][151] = {
    { AArch64::bsub, AArch64::dsub, AArch64::dsub0, AArch64::dsub1, AArch64::dsub2, 0, AArch64::hsub, AArch64::qsub0, AArch64::qsub1, AArch64::qsub2, 0, AArch64::ssub, AArch64::sub_32, AArch64::sub_32, AArch64::x8sub_0, AArch64::x8sub_1_then_sub_32, AArch64::x8sub_1, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubd0, AArch64::zasubd1, AArch64::zasubh0, AArch64::zasubh1, AArch64::zasubq0, AArch64::zasubq1, AArch64::zasubs0, AArch64::zasubs1, AArch64::zsub, AArch64::zsub0, AArch64::zsub1, AArch64::zsub2, 0, AArch64::zsub_hi, AArch64::zasubd1_then_zasubq0, AArch64::zasubd1_then_zasubq1, AArch64::zasubs1_then_zasubd0, AArch64::zasubs1_then_zasubd1, AArch64::zasubs1_then_zasubq0, AArch64::zasubs1_then_zasubq1, AArch64::zasubs1_then_zasubd1_then_zasubq0, AArch64::zasubs1_then_zasubd1_then_zasubq1, AArch64::zasubh1_then_zasubd0, AArch64::zasubh1_then_zasubd1, AArch64::zasubh1_then_zasubq0, AArch64::zasubh1_then_zasubq1, AArch64::zasubh1_then_zasubs0, AArch64::zasubh1_then_zasubs1, AArch64::zasubh1_then_zasubd1_then_zasubq0, AArch64::zasubh1_then_zasubd1_then_zasubq1, AArch64::zasubh1_then_zasubs1_then_zasubd0, AArch64::zasubh1_then_zasubs1_then_zasubd1, AArch64::zasubh1_then_zasubs1_then_zasubq0, AArch64::zasubh1_then_zasubs1_then_zasubq1, AArch64::zasubh1_then_zasubs1_then_zasubd1_then_zasubq0, AArch64::zasubh1_then_zasubs1_then_zasubd1_then_zasubq1, AArch64::dsub1_then_bsub, AArch64::dsub1_then_hsub, AArch64::dsub1_then_ssub, 0, 0, 0, AArch64::dsub2_then_bsub, AArch64::dsub2_then_hsub, AArch64::dsub2_then_ssub, AArch64::qsub1_then_bsub, AArch64::qsub1_then_dsub, AArch64::qsub1_then_hsub, AArch64::qsub1_then_ssub, 0, 0, 0, 0, AArch64::qsub2_then_bsub, AArch64::qsub2_then_dsub, AArch64::qsub2_then_hsub, AArch64::qsub2_then_ssub, 0, 0, 0, 0, 0, 0, 0, AArch64::x8sub_1_then_sub_32, AArch64::zsub1_then_bsub, AArch64::zsub1_then_dsub, AArch64::zsub1_then_hsub, AArch64::zsub1_then_ssub, AArch64::zsub1_then_zsub, AArch64::zsub1_then_zsub_hi, 0, 0, 0, 0, 0, 0, AArch64::zsub2_then_bsub, AArch64::zsub2_then_dsub, AArch64::zsub2_then_hsub, AArch64::zsub2_then_ssub, AArch64::zsub2_then_zsub, AArch64::zsub2_then_zsub_hi, AArch64::dsub0_dsub1, 0, AArch64::dsub1_dsub2, 0, 0, AArch64::dsub_qsub1_then_dsub, 0, AArch64::dsub_qsub1_then_dsub_qsub2_then_dsub, AArch64::qsub0_qsub1, 0, AArch64::qsub1_qsub2, 0, 0, AArch64::qsub1_then_dsub_qsub2_then_dsub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::sub_32_x8sub_1_then_sub_32, AArch64::dsub_zsub1_then_dsub, AArch64::zsub_zsub1_then_zsub, 0, AArch64::dsub_zsub1_then_dsub_zsub2_then_dsub, 0, AArch64::zsub_zsub1_then_zsub_zsub2_then_zsub, AArch64::zsub0_zsub1, 0, AArch64::zsub1_zsub2, 0, 0, AArch64::zsub1_then_dsub_zsub2_then_dsub, 0, AArch64::zsub1_then_zsub_zsub2_then_zsub, 0, 0, 0, },
    { AArch64::dsub1_then_bsub, 0, AArch64::dsub1, AArch64::dsub2, AArch64::dsub3, 0, AArch64::dsub1_then_hsub, 0, 0, 0, 0, AArch64::dsub1_then_ssub, AArch64::subo64_then_sub_32, AArch64::x8sub_6_then_sub_32, 0, AArch64::x8sub_7_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubd1_then_zasubq0, AArch64::zasubd1_then_zasubq1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::dsub2_then_bsub, AArch64::dsub2_then_hsub, AArch64::dsub2_then_ssub, 0, 0, 0, AArch64::dsub3_then_bsub, AArch64::dsub3_then_hsub, AArch64::dsub3_then_ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::dsub1_dsub2, 0, AArch64::dsub2_dsub3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::dsub2_then_bsub, 0, AArch64::dsub2, AArch64::dsub3, 0, 0, AArch64::dsub2_then_hsub, 0, 0, 0, 0, AArch64::dsub2_then_ssub, AArch64::x8sub_1_then_sub_32, AArch64::x8sub_4_then_sub_32, 0, AArch64::x8sub_5_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubh1_then_zasubd0, AArch64::zasubh1_then_zasubd1, 0, 0, AArch64::zasubh1_then_zasubq0, AArch64::zasubh1_then_zasubq1, AArch64::zasubh1_then_zasubs0, AArch64::zasubh1_then_zasubs1, 0, 0, 0, 0, 0, 0, AArch64::zasubh1_then_zasubd1_then_zasubq0, AArch64::zasubh1_then_zasubd1_then_zasubq1, AArch64::zasubh1_then_zasubs1_then_zasubd0, AArch64::zasubh1_then_zasubs1_then_zasubd1, AArch64::zasubh1_then_zasubs1_then_zasubq0, AArch64::zasubh1_then_zasubs1_then_zasubq1, AArch64::zasubh1_then_zasubs1_then_zasubd1_then_zasubq0, AArch64::zasubh1_then_zasubs1_then_zasubd1_then_zasubq1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::dsub3_then_bsub, AArch64::dsub3_then_hsub, AArch64::dsub3_then_ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::dsub3_then_bsub, 0, 0, 0, 0, 0, AArch64::dsub3_then_hsub, 0, 0, 0, 0, AArch64::dsub3_then_ssub, AArch64::x8sub_2_then_sub_32, AArch64::x8sub_2_then_sub_32, AArch64::x8sub_2, AArch64::x8sub_3_then_sub_32, AArch64::x8sub_3, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubs1_then_zasubd0, AArch64::zasubs1_then_zasubd1, 0, 0, AArch64::zasubs1_then_zasubq0, AArch64::zasubs1_then_zasubq1, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubs1_then_zasubd1_then_zasubq0, AArch64::zasubs1_then_zasubd1_then_zasubq1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::x8sub_3_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::x8sub_2_then_sub_32_x8sub_3_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::qsub1_then_bsub, AArch64::qsub1_then_dsub, AArch64::qsub1_then_dsub, AArch64::qsub2_then_dsub, AArch64::qsub3_then_dsub, 0, AArch64::qsub1_then_hsub, AArch64::qsub1, AArch64::qsub2, AArch64::qsub3, 0, AArch64::qsub1_then_ssub, AArch64::x8sub_3_then_sub_32, AArch64::sub_32, 0, AArch64::subo64_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubs1_then_zasubd1_then_zasubq0, AArch64::zasubs1_then_zasubd1_then_zasubq1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::qsub2_then_bsub, AArch64::qsub2_then_hsub, AArch64::qsub2_then_ssub, 0, 0, 0, AArch64::qsub3_then_bsub, AArch64::qsub3_then_hsub, AArch64::qsub3_then_ssub, AArch64::qsub2_then_bsub, AArch64::qsub2_then_dsub, AArch64::qsub2_then_hsub, AArch64::qsub2_then_ssub, 0, 0, 0, 0, AArch64::qsub3_then_bsub, AArch64::qsub3_then_dsub, AArch64::qsub3_then_hsub, AArch64::qsub3_then_ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::qsub1_then_dsub_qsub2_then_dsub, 0, AArch64::qsub2_then_dsub_qsub3_then_dsub, 0, 0, AArch64::qsub1_then_dsub_qsub2_then_dsub, 0, AArch64::qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub, AArch64::qsub1_qsub2, 0, AArch64::qsub2_qsub3, 0, 0, AArch64::qsub2_then_dsub_qsub3_then_dsub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::qsub2_then_bsub, AArch64::qsub2_then_dsub, AArch64::qsub2_then_dsub, AArch64::qsub3_then_dsub, 0, 0, AArch64::qsub2_then_hsub, AArch64::qsub2, AArch64::qsub3, 0, 0, AArch64::qsub2_then_ssub, AArch64::x8sub_4_then_sub_32, 0, AArch64::x8sub_4, 0, AArch64::x8sub_5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubh1_then_zasubd1_then_zasubq0, AArch64::zasubh1_then_zasubd1_then_zasubq1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::qsub3_then_bsub, AArch64::qsub3_then_hsub, AArch64::qsub3_then_ssub, 0, 0, 0, 0, 0, 0, AArch64::qsub3_then_bsub, AArch64::qsub3_then_dsub, AArch64::qsub3_then_hsub, AArch64::qsub3_then_ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::x8sub_5_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::qsub2_then_dsub_qsub3_then_dsub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::x8sub_4_then_sub_32_x8sub_5_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::qsub3_then_bsub, AArch64::qsub3_then_dsub, 0, 0, 0, 0, AArch64::qsub3_then_hsub, 0, 0, 0, 0, AArch64::qsub3_then_ssub, AArch64::x8sub_5_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubh1_then_zasubs1_then_zasubd0, AArch64::zasubh1_then_zasubs1_then_zasubd1, 0, 0, AArch64::zasubh1_then_zasubs1_then_zasubq0, AArch64::zasubh1_then_zasubs1_then_zasubq1, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubh1_then_zasubs1_then_zasubd1_then_zasubq0, AArch64::zasubh1_then_zasubs1_then_zasubd1_then_zasubq1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::zsub1_then_bsub, AArch64::zsub1_then_dsub, AArch64::zsub1_then_dsub, AArch64::zsub2_then_dsub, AArch64::zsub3_then_dsub, 0, AArch64::zsub1_then_hsub, AArch64::zsub1_then_zsub, AArch64::zsub2_then_zsub, AArch64::zsub3_then_zsub, 0, AArch64::zsub1_then_ssub, AArch64::x8sub_6_then_sub_32, 0, AArch64::x8sub_6, 0, AArch64::x8sub_7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zasubh1_then_zasubs1_then_zasubd1_then_zasubq0, AArch64::zasubh1_then_zasubs1_then_zasubd1_then_zasubq1, 0, 0, AArch64::zsub1_then_zsub, AArch64::zsub1, AArch64::zsub2, AArch64::zsub3, 0, AArch64::zsub1_then_zsub_hi, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zsub2_then_bsub, AArch64::zsub2_then_hsub, AArch64::zsub2_then_ssub, 0, 0, 0, AArch64::zsub3_then_bsub, AArch64::zsub3_then_hsub, AArch64::zsub3_then_ssub, AArch64::zsub2_then_bsub, AArch64::zsub2_then_dsub, AArch64::zsub2_then_hsub, AArch64::zsub2_then_ssub, 0, 0, 0, 0, AArch64::zsub3_then_bsub, AArch64::zsub3_then_dsub, AArch64::zsub3_then_hsub, AArch64::zsub3_then_ssub, 0, 0, 0, 0, 0, 0, 0, AArch64::x8sub_7_then_sub_32, AArch64::zsub2_then_bsub, AArch64::zsub2_then_dsub, AArch64::zsub2_then_hsub, AArch64::zsub2_then_ssub, AArch64::zsub2_then_zsub, AArch64::zsub2_then_zsub_hi, 0, 0, 0, 0, 0, 0, AArch64::zsub3_then_bsub, AArch64::zsub3_then_dsub, AArch64::zsub3_then_hsub, AArch64::zsub3_then_ssub, AArch64::zsub3_then_zsub, AArch64::zsub3_then_zsub_hi, AArch64::zsub1_then_dsub_zsub2_then_dsub, 0, AArch64::zsub2_then_dsub_zsub3_then_dsub, 0, 0, AArch64::zsub1_then_dsub_zsub2_then_dsub, 0, AArch64::zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub, AArch64::zsub1_then_zsub_zsub2_then_zsub, 0, AArch64::zsub2_then_zsub_zsub3_then_zsub, 0, 0, AArch64::zsub2_then_dsub_zsub3_then_dsub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::x8sub_6_then_sub_32_x8sub_7_then_sub_32, AArch64::zsub1_then_dsub_zsub2_then_dsub, AArch64::zsub1_then_zsub_zsub2_then_zsub, 0, AArch64::zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub, 0, AArch64::zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub, AArch64::zsub1_zsub2, 0, AArch64::zsub2_zsub3, 0, 0, AArch64::zsub2_then_dsub_zsub3_then_dsub, 0, AArch64::zsub2_then_zsub_zsub3_then_zsub, 0, 0, 0, },
    { AArch64::zsub2_then_bsub, AArch64::zsub2_then_dsub, AArch64::zsub2_then_dsub, AArch64::zsub3_then_dsub, 0, 0, AArch64::zsub2_then_hsub, AArch64::zsub2_then_zsub, AArch64::zsub3_then_zsub, 0, 0, AArch64::zsub2_then_ssub, AArch64::x8sub_7_then_sub_32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zsub2_then_zsub, AArch64::zsub2, AArch64::zsub3, 0, 0, AArch64::zsub2_then_zsub_hi, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zsub3_then_bsub, AArch64::zsub3_then_hsub, AArch64::zsub3_then_ssub, 0, 0, 0, 0, 0, 0, AArch64::zsub3_then_bsub, AArch64::zsub3_then_dsub, AArch64::zsub3_then_hsub, AArch64::zsub3_then_ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zsub3_then_bsub, AArch64::zsub3_then_dsub, AArch64::zsub3_then_hsub, AArch64::zsub3_then_ssub, AArch64::zsub3_then_zsub, AArch64::zsub3_then_zsub_hi, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zsub2_then_dsub_zsub3_then_dsub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zsub2_then_dsub_zsub3_then_dsub, AArch64::zsub2_then_zsub_zsub3_then_zsub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::zsub3_then_bsub, AArch64::zsub3_then_dsub, 0, 0, 0, 0, AArch64::zsub3_then_hsub, 0, 0, 0, 0, AArch64::zsub3_then_ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zsub3_then_zsub, 0, 0, 0, 0, AArch64::zsub3_then_zsub_hi, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::bsub, AArch64::dsub, AArch64::dsub, AArch64::qsub1_then_dsub, AArch64::qsub2_then_dsub, AArch64::qsub3_then_dsub, AArch64::hsub, AArch64::zsub, AArch64::zsub1_then_zsub, AArch64::zsub2_then_zsub, AArch64::zsub3_then_zsub, AArch64::ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::qsub1_then_bsub, AArch64::qsub1_then_hsub, AArch64::qsub1_then_ssub, AArch64::qsub3_then_bsub, AArch64::qsub3_then_hsub, AArch64::qsub3_then_ssub, AArch64::qsub2_then_bsub, AArch64::qsub2_then_hsub, AArch64::qsub2_then_ssub, AArch64::zsub1_then_bsub, AArch64::zsub1_then_dsub, AArch64::zsub1_then_hsub, AArch64::zsub1_then_ssub, AArch64::zsub3_then_bsub, AArch64::zsub3_then_dsub, AArch64::zsub3_then_hsub, AArch64::zsub3_then_ssub, AArch64::zsub2_then_bsub, AArch64::zsub2_then_dsub, AArch64::zsub2_then_hsub, AArch64::zsub2_then_ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::dsub_qsub1_then_dsub, AArch64::dsub_qsub1_then_dsub_qsub2_then_dsub, AArch64::qsub1_then_dsub_qsub2_then_dsub, AArch64::qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub, AArch64::qsub2_then_dsub_qsub3_then_dsub, AArch64::dsub_zsub1_then_dsub, AArch64::dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub, AArch64::dsub_zsub1_then_dsub_zsub2_then_dsub, AArch64::zsub_zsub1_then_zsub, AArch64::zsub_zsub1_then_zsub_zsub2_then_zsub, AArch64::zsub1_then_zsub_zsub2_then_zsub, AArch64::zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub, AArch64::zsub2_then_zsub_zsub3_then_zsub, AArch64::zsub1_then_dsub_zsub2_then_dsub, AArch64::zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub, AArch64::zsub2_then_dsub_zsub3_then_dsub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { AArch64::bsub, 0, AArch64::dsub, AArch64::zsub1_then_dsub, AArch64::zsub2_then_dsub, AArch64::zsub3_then_dsub, AArch64::hsub, 0, 0, 0, 0, AArch64::ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::zsub1_then_bsub, AArch64::zsub1_then_hsub, AArch64::zsub1_then_ssub, AArch64::zsub3_then_bsub, AArch64::zsub3_then_hsub, AArch64::zsub3_then_ssub, AArch64::zsub2_then_bsub, AArch64::zsub2_then_hsub, AArch64::zsub2_then_ssub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, AArch64::dsub_zsub1_then_dsub, AArch64::dsub_zsub1_then_dsub_zsub2_then_dsub, AArch64::zsub1_then_dsub_zsub2_then_dsub, AArch64::zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub, AArch64::zsub2_then_dsub_zsub3_then_dsub, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  };

  --IdxA; assert(IdxA < 151);
  --IdxB; assert(IdxB < 151);
  return Rows[RowMap[IdxA]][IdxB];
}

  struct MaskRolOp {
    LaneBitmask Mask;
    uint8_t  RotateLeft;
  };
  static const MaskRolOp LaneMaskComposeSequences[] = {
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  0 }, { LaneBitmask::getNone(), 0 },   // Sequence 0
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 21 }, { LaneBitmask::getNone(), 0 },   // Sequence 2
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 23 }, { LaneBitmask::getNone(), 0 },   // Sequence 4
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 22 }, { LaneBitmask::getNone(), 0 },   // Sequence 6
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 24 }, { LaneBitmask::getNone(), 0 },   // Sequence 8
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 26 }, { LaneBitmask::getNone(), 0 },   // Sequence 10
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 25 }, { LaneBitmask::getNone(), 0 },   // Sequence 12
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  1 }, { LaneBitmask::getNone(), 0 },   // Sequence 14
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  2 }, { LaneBitmask::getNone(), 0 },   // Sequence 16
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  3 }, { LaneBitmask::getNone(), 0 },   // Sequence 18
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 33 }, { LaneBitmask::getNone(), 0 },   // Sequence 20
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 32 }, { LaneBitmask::getNone(), 0 },   // Sequence 22
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 31 }, { LaneBitmask::getNone(), 0 },   // Sequence 24
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 30 }, { LaneBitmask::getNone(), 0 },   // Sequence 26
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 29 }, { LaneBitmask::getNone(), 0 },   // Sequence 28
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 28 }, { LaneBitmask::getNone(), 0 },   // Sequence 30
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 27 }, { LaneBitmask::getNone(), 0 },   // Sequence 32
    { LaneBitmask(0x0000000000000030),  9 }, { LaneBitmask(0x0000000000001F80),  8 }, { LaneBitmask::getNone(), 0 },   // Sequence 34
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  4 }, { LaneBitmask::getNone(), 0 },   // Sequence 37
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  5 }, { LaneBitmask::getNone(), 0 },   // Sequence 39
    { LaneBitmask(0x0000000000000030),  5 }, { LaneBitmask(0x0000000000000180),  4 }, { LaneBitmask::getNone(), 0 },   // Sequence 41
    { LaneBitmask(0x0000000000000001), 35 }, { LaneBitmask(0x0000000000000040), 30 }, { LaneBitmask::getNone(), 0 },   // Sequence 44
    { LaneBitmask(0x0000000000000001), 39 }, { LaneBitmask(0x0000000000000040), 34 }, { LaneBitmask::getNone(), 0 },   // Sequence 47
    { LaneBitmask(0x0000000000000001), 37 }, { LaneBitmask(0x0000000000000040), 32 }, { LaneBitmask::getNone(), 0 },   // Sequence 50
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  6 }, { LaneBitmask::getNone(), 0 },   // Sequence 53
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  7 }, { LaneBitmask::getNone(), 0 },   // Sequence 55
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  8 }, { LaneBitmask::getNone(), 0 },   // Sequence 57
    { LaneBitmask(0xFFFFFFFFFFFFFFFF),  9 }, { LaneBitmask::getNone(), 0 },   // Sequence 59
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 10 }, { LaneBitmask::getNone(), 0 },   // Sequence 61
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 11 }, { LaneBitmask::getNone(), 0 },   // Sequence 63
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 12 }, { LaneBitmask::getNone(), 0 },   // Sequence 65
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 13 }, { LaneBitmask::getNone(), 0 },   // Sequence 67
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 14 }, { LaneBitmask::getNone(), 0 },   // Sequence 69
    { LaneBitmask(0x0000000000000030),  9 }, { LaneBitmask(0x0000000000000180),  8 }, { LaneBitmask::getNone(), 0 },   // Sequence 71
    { LaneBitmask(0x0000000000000030), 13 }, { LaneBitmask(0x0000000000000180), 12 }, { LaneBitmask::getNone(), 0 },   // Sequence 74
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 15 }, { LaneBitmask::getNone(), 0 },   // Sequence 77
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 16 }, { LaneBitmask::getNone(), 0 },   // Sequence 79
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 17 }, { LaneBitmask::getNone(), 0 },   // Sequence 81
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 18 }, { LaneBitmask::getNone(), 0 },   // Sequence 83
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 19 }, { LaneBitmask::getNone(), 0 },   // Sequence 85
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 20 }, { LaneBitmask::getNone(), 0 },   // Sequence 87
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 34 }, { LaneBitmask::getNone(), 0 },   // Sequence 89
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 35 }, { LaneBitmask::getNone(), 0 },   // Sequence 91
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 36 }, { LaneBitmask::getNone(), 0 },   // Sequence 93
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 37 }, { LaneBitmask::getNone(), 0 },   // Sequence 95
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 38 }, { LaneBitmask::getNone(), 0 },   // Sequence 97
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 39 }, { LaneBitmask::getNone(), 0 },   // Sequence 99
    { LaneBitmask(0xFFFFFFFFFFFFFFFF), 40 }, { LaneBitmask::getNone(), 0 },   // Sequence 101
    { LaneBitmask(0x0000000000000001), 21 }, { LaneBitmask(0x0000000000200000),  2 }, { LaneBitmask::getNone(), 0 },   // Sequence 103
    { LaneBitmask(0x0000000000000001), 21 }, { LaneBitmask(0x0000000000200000),  2 }, { LaneBitmask(0x0000000000800000), 63 }, { LaneBitmask::getNone(), 0 },   // Sequence 106
    { LaneBitmask(0x0000000000000001), 23 }, { LaneBitmask(0x0000000000200000),  1 }, { LaneBitmask::getNone(), 0 },   // Sequence 110
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000000200000),  3 }, { LaneBitmask::getNone(), 0 },   // Sequence 113
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000000E00000),  3 }, { LaneBitmask::getNone(), 0 },   // Sequence 116
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000000A00000),  3 }, { LaneBitmask::getNone(), 0 },   // Sequence 119
    { LaneBitmask(0x0000000000000001), 24 }, { LaneBitmask(0x0000000001000000),  2 }, { LaneBitmask::getNone(), 0 },   // Sequence 122
    { LaneBitmask(0x0000000000000001), 24 }, { LaneBitmask(0x0000000001000000),  2 }, { LaneBitmask(0x0000000004000000), 63 }, { LaneBitmask::getNone(), 0 },   // Sequence 125
    { LaneBitmask(0x0000000000000001), 26 }, { LaneBitmask(0x0000000001000000),  1 }, { LaneBitmask::getNone(), 0 },   // Sequence 129
    { LaneBitmask(0x0000000000000001), 24 }, { LaneBitmask(0x0000000000200000),  5 }, { LaneBitmask::getNone(), 0 },   // Sequence 132
    { LaneBitmask(0x0000000000000001), 24 }, { LaneBitmask(0x0000000000200000),  5 }, { LaneBitmask(0x0000000000800000),  2 }, { LaneBitmask::getNone(), 0 },   // Sequence 135
    { LaneBitmask(0x0000000000000001), 26 }, { LaneBitmask(0x0000000000200000),  4 }, { LaneBitmask::getNone(), 0 },   // Sequence 139
    { LaneBitmask(0x0000000000000004), 63 }, { LaneBitmask(0x0000000000000008), 30 }, { LaneBitmask::getNone(), 0 },   // Sequence 142
    { LaneBitmask(0x0000000000000002),  0 }, { LaneBitmask(0x0000000400000000), 63 }, { LaneBitmask::getNone(), 0 },   // Sequence 145
    { LaneBitmask(0x0000000000000002), 31 }, { LaneBitmask(0x0000000400000000), 61 }, { LaneBitmask::getNone(), 0 },   // Sequence 148
    { LaneBitmask(0x0000000000000002), 29 }, { LaneBitmask(0x0000000400000000), 59 }, { LaneBitmask::getNone(), 0 },   // Sequence 151
    { LaneBitmask(0x0000000000000002), 27 }, { LaneBitmask(0x0000000400000000), 57 }, { LaneBitmask::getNone(), 0 },   // Sequence 154
    { LaneBitmask(0x0000000000000004), 26 }, { LaneBitmask(0x0000000000000008), 24 }, { LaneBitmask::getNone(), 0 },   // Sequence 157
    { LaneBitmask(0x0000000000000004), 28 }, { LaneBitmask(0x0000000000000008), 26 }, { LaneBitmask::getNone(), 0 },   // Sequence 160
    { LaneBitmask(0x0000000000000004), 30 }, { LaneBitmask(0x0000000000000008), 28 }, { LaneBitmask::getNone(), 0 },   // Sequence 163
    { LaneBitmask(0x0000000000000004), 63 }, { LaneBitmask(0x0000000000000008), 31 }, { LaneBitmask::getNone(), 0 },   // Sequence 166
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000000200000), 14 }, { LaneBitmask::getNone(), 0 },   // Sequence 169
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000001000000), 11 }, { LaneBitmask::getNone(), 0 },   // Sequence 172
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000000200000), 14 }, { LaneBitmask(0x0000000000400000), 15 }, { LaneBitmask(0x0000000000800000), 16 }, { LaneBitmask::getNone(), 0 },   // Sequence 175
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000000200000), 14 }, { LaneBitmask(0x0000000000800000), 16 }, { LaneBitmask::getNone(), 0 },   // Sequence 180
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000001000000), 11 }, { LaneBitmask(0x0000000002000000), 12 }, { LaneBitmask(0x0000000004000000), 13 }, { LaneBitmask::getNone(), 0 },   // Sequence 184
    { LaneBitmask(0x0000000000000001),  0 }, { LaneBitmask(0x0000000001000000), 11 }, { LaneBitmask(0x0000000004000000), 13 }, { LaneBitmask::getNone(), 0 },   // Sequence 189
    { LaneBitmask(0x0000000000000001), 35 }, { LaneBitmask(0x0000000000000040), 30 }, { LaneBitmask(0x0000001800000000),  4 }, { LaneBitmask::getNone(), 0 },   // Sequence 193
    { LaneBitmask(0x0000000000000001), 35 }, { LaneBitmask(0x0000000000000040), 30 }, { LaneBitmask(0x0000001800000000),  4 }, { LaneBitmask(0x0000018000000000), 62 }, { LaneBitmask::getNone(), 0 },   // Sequence 197
    { LaneBitmask(0x0000000000000001), 39 }, { LaneBitmask(0x0000000000000040), 34 }, { LaneBitmask(0x0000001800000000),  2 }, { LaneBitmask::getNone(), 0 },   // Sequence 202
    { LaneBitmask(0x0000000000000001), 35 }, { LaneBitmask(0x0000000000200000), 18 }, { LaneBitmask::getNone(), 0 },   // Sequence 206
    { LaneBitmask(0x0000000000000001), 35 }, { LaneBitmask(0x0000000000200000), 18 }, { LaneBitmask(0x0000000000800000), 14 }, { LaneBitmask::getNone(), 0 },   // Sequence 209
    { LaneBitmask(0x0000000000000001), 35 }, { LaneBitmask(0x0000000001000000), 15 }, { LaneBitmask::getNone(), 0 },   // Sequence 213
    { LaneBitmask(0x0000000000000001), 35 }, { LaneBitmask(0x0000000001000000), 15 }, { LaneBitmask(0x0000000004000000), 11 }, { LaneBitmask::getNone(), 0 },   // Sequence 216
    { LaneBitmask(0x0000000000000001), 39 }, { LaneBitmask(0x0000000000200000), 16 }, { LaneBitmask::getNone(), 0 },   // Sequence 220
    { LaneBitmask(0x0000000000000001), 39 }, { LaneBitmask(0x0000000001000000), 13 }, { LaneBitmask::getNone(), 0 }  // Sequence 223
  };
  static const MaskRolOp *const CompositeSequences[] = {
    &LaneMaskComposeSequences[0], // to bsub
    &LaneMaskComposeSequences[0], // to dsub
    &LaneMaskComposeSequences[0], // to dsub0
    &LaneMaskComposeSequences[2], // to dsub1
    &LaneMaskComposeSequences[4], // to dsub2
    &LaneMaskComposeSequences[6], // to dsub3
    &LaneMaskComposeSequences[0], // to hsub
    &LaneMaskComposeSequences[0], // to qsub0
    &LaneMaskComposeSequences[8], // to qsub1
    &LaneMaskComposeSequences[10], // to qsub2
    &LaneMaskComposeSequences[12], // to qsub3
    &LaneMaskComposeSequences[0], // to ssub
    &LaneMaskComposeSequences[14], // to sub_32
    &LaneMaskComposeSequences[16], // to sube32
    &LaneMaskComposeSequences[0], // to sube64
    &LaneMaskComposeSequences[18], // to subo32
    &LaneMaskComposeSequences[20], // to subo64
    &LaneMaskComposeSequences[0], // to x8sub_0
    &LaneMaskComposeSequences[22], // to x8sub_1
    &LaneMaskComposeSequences[24], // to x8sub_2
    &LaneMaskComposeSequences[26], // to x8sub_3
    &LaneMaskComposeSequences[28], // to x8sub_4
    &LaneMaskComposeSequences[30], // to x8sub_5
    &LaneMaskComposeSequences[32], // to x8sub_6
    &LaneMaskComposeSequences[10], // to x8sub_7
    &LaneMaskComposeSequences[0], // to zasubb
    &LaneMaskComposeSequences[0], // to zasubd0
    &LaneMaskComposeSequences[18], // to zasubd1
    &LaneMaskComposeSequences[0], // to zasubh0
    &LaneMaskComposeSequences[34], // to zasubh1
    &LaneMaskComposeSequences[37], // to zasubq0
    &LaneMaskComposeSequences[39], // to zasubq1
    &LaneMaskComposeSequences[0], // to zasubs0
    &LaneMaskComposeSequences[41], // to zasubs1
    &LaneMaskComposeSequences[0], // to zsub
    &LaneMaskComposeSequences[0], // to zsub0
    &LaneMaskComposeSequences[44], // to zsub1
    &LaneMaskComposeSequences[47], // to zsub2
    &LaneMaskComposeSequences[50], // to zsub3
    &LaneMaskComposeSequences[53], // to zsub_hi
    &LaneMaskComposeSequences[55], // to zasubd1_then_zasubq0
    &LaneMaskComposeSequences[57], // to zasubd1_then_zasubq1
    &LaneMaskComposeSequences[39], // to zasubs1_then_zasubd0
    &LaneMaskComposeSequences[55], // to zasubs1_then_zasubd1
    &LaneMaskComposeSequences[59], // to zasubs1_then_zasubq0
    &LaneMaskComposeSequences[61], // to zasubs1_then_zasubq1
    &LaneMaskComposeSequences[63], // to zasubs1_then_zasubd1_then_zasubq0
    &LaneMaskComposeSequences[65], // to zasubs1_then_zasubd1_then_zasubq1
    &LaneMaskComposeSequences[59], // to zasubh1_then_zasubd0
    &LaneMaskComposeSequences[63], // to zasubh1_then_zasubd1
    &LaneMaskComposeSequences[67], // to zasubh1_then_zasubq0
    &LaneMaskComposeSequences[69], // to zasubh1_then_zasubq1
    &LaneMaskComposeSequences[71], // to zasubh1_then_zasubs0
    &LaneMaskComposeSequences[74], // to zasubh1_then_zasubs1
    &LaneMaskComposeSequences[77], // to zasubh1_then_zasubd1_then_zasubq0
    &LaneMaskComposeSequences[79], // to zasubh1_then_zasubd1_then_zasubq1
    &LaneMaskComposeSequences[67], // to zasubh1_then_zasubs1_then_zasubd0
    &LaneMaskComposeSequences[77], // to zasubh1_then_zasubs1_then_zasubd1
    &LaneMaskComposeSequences[81], // to zasubh1_then_zasubs1_then_zasubq0
    &LaneMaskComposeSequences[83], // to zasubh1_then_zasubs1_then_zasubq1
    &LaneMaskComposeSequences[85], // to zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
    &LaneMaskComposeSequences[87], // to zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
    &LaneMaskComposeSequences[2], // to dsub1_then_bsub
    &LaneMaskComposeSequences[2], // to dsub1_then_hsub
    &LaneMaskComposeSequences[2], // to dsub1_then_ssub
    &LaneMaskComposeSequences[6], // to dsub3_then_bsub
    &LaneMaskComposeSequences[6], // to dsub3_then_hsub
    &LaneMaskComposeSequences[6], // to dsub3_then_ssub
    &LaneMaskComposeSequences[4], // to dsub2_then_bsub
    &LaneMaskComposeSequences[4], // to dsub2_then_hsub
    &LaneMaskComposeSequences[4], // to dsub2_then_ssub
    &LaneMaskComposeSequences[8], // to qsub1_then_bsub
    &LaneMaskComposeSequences[8], // to qsub1_then_dsub
    &LaneMaskComposeSequences[8], // to qsub1_then_hsub
    &LaneMaskComposeSequences[8], // to qsub1_then_ssub
    &LaneMaskComposeSequences[12], // to qsub3_then_bsub
    &LaneMaskComposeSequences[12], // to qsub3_then_dsub
    &LaneMaskComposeSequences[12], // to qsub3_then_hsub
    &LaneMaskComposeSequences[12], // to qsub3_then_ssub
    &LaneMaskComposeSequences[10], // to qsub2_then_bsub
    &LaneMaskComposeSequences[10], // to qsub2_then_dsub
    &LaneMaskComposeSequences[10], // to qsub2_then_hsub
    &LaneMaskComposeSequences[10], // to qsub2_then_ssub
    &LaneMaskComposeSequences[32], // to x8sub_7_then_sub_32
    &LaneMaskComposeSequences[30], // to x8sub_6_then_sub_32
    &LaneMaskComposeSequences[28], // to x8sub_5_then_sub_32
    &LaneMaskComposeSequences[26], // to x8sub_4_then_sub_32
    &LaneMaskComposeSequences[24], // to x8sub_3_then_sub_32
    &LaneMaskComposeSequences[22], // to x8sub_2_then_sub_32
    &LaneMaskComposeSequences[20], // to x8sub_1_then_sub_32
    &LaneMaskComposeSequences[89], // to subo64_then_sub_32
    &LaneMaskComposeSequences[91], // to zsub1_then_bsub
    &LaneMaskComposeSequences[91], // to zsub1_then_dsub
    &LaneMaskComposeSequences[91], // to zsub1_then_hsub
    &LaneMaskComposeSequences[91], // to zsub1_then_ssub
    &LaneMaskComposeSequences[91], // to zsub1_then_zsub
    &LaneMaskComposeSequences[93], // to zsub1_then_zsub_hi
    &LaneMaskComposeSequences[95], // to zsub3_then_bsub
    &LaneMaskComposeSequences[95], // to zsub3_then_dsub
    &LaneMaskComposeSequences[95], // to zsub3_then_hsub
    &LaneMaskComposeSequences[95], // to zsub3_then_ssub
    &LaneMaskComposeSequences[95], // to zsub3_then_zsub
    &LaneMaskComposeSequences[97], // to zsub3_then_zsub_hi
    &LaneMaskComposeSequences[99], // to zsub2_then_bsub
    &LaneMaskComposeSequences[99], // to zsub2_then_dsub
    &LaneMaskComposeSequences[99], // to zsub2_then_hsub
    &LaneMaskComposeSequences[99], // to zsub2_then_ssub
    &LaneMaskComposeSequences[99], // to zsub2_then_zsub
    &LaneMaskComposeSequences[101], // to zsub2_then_zsub_hi
    &LaneMaskComposeSequences[0], // to dsub0_dsub1
    &LaneMaskComposeSequences[0], // to dsub0_dsub1_dsub2
    &LaneMaskComposeSequences[103], // to dsub1_dsub2
    &LaneMaskComposeSequences[106], // to dsub1_dsub2_dsub3
    &LaneMaskComposeSequences[110], // to dsub2_dsub3
    &LaneMaskComposeSequences[113], // to dsub_qsub1_then_dsub
    &LaneMaskComposeSequences[116], // to dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
    &LaneMaskComposeSequences[119], // to dsub_qsub1_then_dsub_qsub2_then_dsub
    &LaneMaskComposeSequences[0], // to qsub0_qsub1
    &LaneMaskComposeSequences[0], // to qsub0_qsub1_qsub2
    &LaneMaskComposeSequences[122], // to qsub1_qsub2
    &LaneMaskComposeSequences[125], // to qsub1_qsub2_qsub3
    &LaneMaskComposeSequences[129], // to qsub2_qsub3
    &LaneMaskComposeSequences[132], // to qsub1_then_dsub_qsub2_then_dsub
    &LaneMaskComposeSequences[135], // to qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
    &LaneMaskComposeSequences[139], // to qsub2_then_dsub_qsub3_then_dsub
    &LaneMaskComposeSequences[142], // to sub_32_x8sub_1_then_sub_32
    &LaneMaskComposeSequences[145], // to x8sub_0_x8sub_1
    &LaneMaskComposeSequences[148], // to x8sub_2_x8sub_3
    &LaneMaskComposeSequences[151], // to x8sub_4_x8sub_5
    &LaneMaskComposeSequences[154], // to x8sub_6_x8sub_7
    &LaneMaskComposeSequences[157], // to x8sub_6_then_sub_32_x8sub_7_then_sub_32
    &LaneMaskComposeSequences[160], // to x8sub_4_then_sub_32_x8sub_5_then_sub_32
    &LaneMaskComposeSequences[163], // to x8sub_2_then_sub_32_x8sub_3_then_sub_32
    &LaneMaskComposeSequences[166], // to sub_32_subo64_then_sub_32
    &LaneMaskComposeSequences[169], // to dsub_zsub1_then_dsub
    &LaneMaskComposeSequences[172], // to zsub_zsub1_then_zsub
    &LaneMaskComposeSequences[175], // to dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
    &LaneMaskComposeSequences[180], // to dsub_zsub1_then_dsub_zsub2_then_dsub
    &LaneMaskComposeSequences[184], // to zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
    &LaneMaskComposeSequences[189], // to zsub_zsub1_then_zsub_zsub2_then_zsub
    &LaneMaskComposeSequences[0], // to zsub0_zsub1
    &LaneMaskComposeSequences[0], // to zsub0_zsub1_zsub2
    &LaneMaskComposeSequences[193], // to zsub1_zsub2
    &LaneMaskComposeSequences[197], // to zsub1_zsub2_zsub3
    &LaneMaskComposeSequences[202], // to zsub2_zsub3
    &LaneMaskComposeSequences[206], // to zsub1_then_dsub_zsub2_then_dsub
    &LaneMaskComposeSequences[209], // to zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
    &LaneMaskComposeSequences[213], // to zsub1_then_zsub_zsub2_then_zsub
    &LaneMaskComposeSequences[216], // to zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
    &LaneMaskComposeSequences[220], // to zsub2_then_dsub_zsub3_then_dsub
    &LaneMaskComposeSequences[223] // to zsub2_then_zsub_zsub3_then_zsub
  };

LaneBitmask AArch64GenRegisterInfo::composeSubRegIndexLaneMaskImpl(unsigned IdxA, LaneBitmask LaneMask) const {
  --IdxA; assert(IdxA < 151 && "Subregister index out of bounds");
  LaneBitmask Result;
  for (const MaskRolOp *Ops = CompositeSequences[IdxA]; Ops->Mask.any(); ++Ops) {
    LaneBitmask::Type M = LaneMask.getAsInteger() & Ops->Mask.getAsInteger();
    if (unsigned S = Ops->RotateLeft)
      Result |= LaneBitmask((M << S) | (M >> (LaneBitmask::BitWidth - S)));
    else
      Result |= LaneBitmask(M);
  }
  return Result;
}

LaneBitmask AArch64GenRegisterInfo::reverseComposeSubRegIndexLaneMaskImpl(unsigned IdxA,  LaneBitmask LaneMask) const {
  LaneMask &= getSubRegIndexLaneMask(IdxA);
  --IdxA; assert(IdxA < 151 && "Subregister index out of bounds");
  LaneBitmask Result;
  for (const MaskRolOp *Ops = CompositeSequences[IdxA]; Ops->Mask.any(); ++Ops) {
    LaneBitmask::Type M = LaneMask.getAsInteger();
    if (unsigned S = Ops->RotateLeft)
      Result |= LaneBitmask((M >> S) | (M << (LaneBitmask::BitWidth - S)));
    else
      Result |= LaneBitmask(M);
  }
  return Result;
}

const TargetRegisterClass *AArch64GenRegisterInfo::getSubClassWithSubReg(const TargetRegisterClass *RC, unsigned Idx) const {
  static const uint8_t Table[202][151] = {
    {	// FPR8
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// FPR16
      2,	// bsub -> FPR16
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// FPR16_lo
      3,	// bsub -> FPR16_lo
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// PPR
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// PPR_3b
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR32all
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// FPR32
      7,	// bsub -> FPR32
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      7,	// hsub -> FPR32
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR32
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR32sp
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR32common
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// FPR32_with_hsub_in_FPR16_lo
      11,	// bsub -> FPR32_with_hsub_in_FPR16_lo
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      11,	// hsub -> FPR32_with_hsub_in_FPR16_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR32arg
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// CCR
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR32sponly
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// WSeqPairsClass
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      16,	// sube32 -> WSeqPairsClass
      0,	// sube64
      16,	// subo32 -> WSeqPairsClass
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// WSeqPairsClass_with_subo32_in_GPR32common
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      17,	// sube32 -> WSeqPairsClass_with_subo32_in_GPR32common
      0,	// sube64
      17,	// subo32 -> WSeqPairsClass_with_subo32_in_GPR32common
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// WSeqPairsClass_with_sube32_in_GPR32arg
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      18,	// sube32 -> WSeqPairsClass_with_sube32_in_GPR32arg
      0,	// sube64
      18,	// subo32 -> WSeqPairsClass_with_sube32_in_GPR32arg
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      19,	// sube32 -> WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15
      0,	// sube64
      19,	// subo32 -> WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64all
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      20,	// sub_32 -> GPR64all
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// FPR64
      21,	// bsub -> FPR64
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      21,	// hsub -> FPR64
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      21,	// ssub -> FPR64
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      22,	// sub_32 -> GPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64sp
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      23,	// sub_32 -> GPR64sp
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64common
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      24,	// sub_32 -> GPR64common
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      25,	// sub_32 -> GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64common_and_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      26,	// sub_32 -> GPR64common_and_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      27,	// sub_32 -> tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      28,	// sub_32 -> GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// FPR64_lo
      29,	// bsub -> FPR64_lo
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      29,	// hsub -> FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      29,	// ssub -> FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64arg
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      30,	// sub_32 -> GPR64arg
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      31,	// sub_32 -> GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// rtcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      32,	// sub_32 -> rtcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64sponly
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      33,	// sub_32 -> GPR64sponly
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DD
      34,	// bsub -> DD
      0,	// dsub
      34,	// dsub0 -> DD
      34,	// dsub1 -> DD
      0,	// dsub2
      0,	// dsub3
      34,	// hsub -> DD
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      34,	// ssub -> DD
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      34,	// dsub1_then_bsub -> DD
      34,	// dsub1_then_hsub -> DD
      34,	// dsub1_then_ssub -> DD
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DD_with_dsub0_in_FPR64_lo
      35,	// bsub -> DD_with_dsub0_in_FPR64_lo
      0,	// dsub
      35,	// dsub0 -> DD_with_dsub0_in_FPR64_lo
      35,	// dsub1 -> DD_with_dsub0_in_FPR64_lo
      0,	// dsub2
      0,	// dsub3
      35,	// hsub -> DD_with_dsub0_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      35,	// ssub -> DD_with_dsub0_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      35,	// dsub1_then_bsub -> DD_with_dsub0_in_FPR64_lo
      35,	// dsub1_then_hsub -> DD_with_dsub0_in_FPR64_lo
      35,	// dsub1_then_ssub -> DD_with_dsub0_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DD_with_dsub1_in_FPR64_lo
      36,	// bsub -> DD_with_dsub1_in_FPR64_lo
      0,	// dsub
      36,	// dsub0 -> DD_with_dsub1_in_FPR64_lo
      36,	// dsub1 -> DD_with_dsub1_in_FPR64_lo
      0,	// dsub2
      0,	// dsub3
      36,	// hsub -> DD_with_dsub1_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      36,	// ssub -> DD_with_dsub1_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      36,	// dsub1_then_bsub -> DD_with_dsub1_in_FPR64_lo
      36,	// dsub1_then_hsub -> DD_with_dsub1_in_FPR64_lo
      36,	// dsub1_then_ssub -> DD_with_dsub1_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      37,	// sub_32 -> XSeqPairsClass
      0,	// sube32
      37,	// sube64 -> XSeqPairsClass
      0,	// subo32
      37,	// subo64 -> XSeqPairsClass
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      37,	// subo64_then_sub_32 -> XSeqPairsClass
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      37,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      38,	// bsub -> DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      0,	// dsub
      38,	// dsub0 -> DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      38,	// dsub1 -> DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      0,	// dsub2
      0,	// dsub3
      38,	// hsub -> DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      38,	// ssub -> DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      38,	// dsub1_then_bsub -> DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      38,	// dsub1_then_hsub -> DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      38,	// dsub1_then_ssub -> DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_subo64_in_GPR64common
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      39,	// sub_32 -> XSeqPairsClass_with_subo64_in_GPR64common
      0,	// sube32
      39,	// sube64 -> XSeqPairsClass_with_subo64_in_GPR64common
      0,	// subo32
      39,	// subo64 -> XSeqPairsClass_with_subo64_in_GPR64common
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      39,	// subo64_then_sub_32 -> XSeqPairsClass_with_subo64_in_GPR64common
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      39,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_subo64_in_GPR64common
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_subo64_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      40,	// sub_32 -> XSeqPairsClass_with_subo64_in_GPR64noip
      0,	// sube32
      40,	// sube64 -> XSeqPairsClass_with_subo64_in_GPR64noip
      0,	// subo32
      40,	// subo64 -> XSeqPairsClass_with_subo64_in_GPR64noip
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      40,	// subo64_then_sub_32 -> XSeqPairsClass_with_subo64_in_GPR64noip
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      40,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_subo64_in_GPR64noip
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_sube64_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      41,	// sub_32 -> XSeqPairsClass_with_sube64_in_GPR64noip
      0,	// sube32
      41,	// sube64 -> XSeqPairsClass_with_sube64_in_GPR64noip
      0,	// subo32
      41,	// subo64 -> XSeqPairsClass_with_sube64_in_GPR64noip
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      41,	// subo64_then_sub_32 -> XSeqPairsClass_with_sube64_in_GPR64noip
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      41,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_sube64_in_GPR64noip
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_sube64_in_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      42,	// sub_32 -> XSeqPairsClass_with_sube64_in_tcGPR64
      0,	// sube32
      42,	// sube64 -> XSeqPairsClass_with_sube64_in_tcGPR64
      0,	// subo32
      42,	// subo64 -> XSeqPairsClass_with_sube64_in_tcGPR64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      42,	// subo64_then_sub_32 -> XSeqPairsClass_with_sube64_in_tcGPR64
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      42,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_sube64_in_tcGPR64
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      43,	// sub_32 -> XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64
      0,	// sube32
      43,	// sube64 -> XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64
      0,	// subo32
      43,	// subo64 -> XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      43,	// subo64_then_sub_32 -> XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      43,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_subo64_in_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      44,	// sub_32 -> XSeqPairsClass_with_subo64_in_tcGPR64
      0,	// sube32
      44,	// sube64 -> XSeqPairsClass_with_subo64_in_tcGPR64
      0,	// subo32
      44,	// subo64 -> XSeqPairsClass_with_subo64_in_tcGPR64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      44,	// subo64_then_sub_32 -> XSeqPairsClass_with_subo64_in_tcGPR64
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      44,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_subo64_in_tcGPR64
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      45,	// sub_32 -> XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64
      0,	// sube32
      45,	// sube64 -> XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64
      0,	// subo32
      45,	// subo64 -> XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      45,	// subo64_then_sub_32 -> XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      45,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_sub_32_in_GPR32arg
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      46,	// sub_32 -> XSeqPairsClass_with_sub_32_in_GPR32arg
      0,	// sube32
      46,	// sube64 -> XSeqPairsClass_with_sub_32_in_GPR32arg
      0,	// subo32
      46,	// subo64 -> XSeqPairsClass_with_sub_32_in_GPR32arg
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      46,	// subo64_then_sub_32 -> XSeqPairsClass_with_sub_32_in_GPR32arg
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      46,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_sub_32_in_GPR32arg
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      47,	// sub_32 -> XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sube32
      47,	// sube64 -> XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// subo32
      47,	// subo64 -> XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      47,	// subo64_then_sub_32 -> XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      47,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// XSeqPairsClass_with_sube64_in_rtcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      48,	// sub_32 -> XSeqPairsClass_with_sube64_in_rtcGPR64
      0,	// sube32
      48,	// sube64 -> XSeqPairsClass_with_sube64_in_rtcGPR64
      0,	// subo32
      48,	// subo64 -> XSeqPairsClass_with_sube64_in_rtcGPR64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      48,	// subo64_then_sub_32 -> XSeqPairsClass_with_sube64_in_rtcGPR64
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      48,	// sub_32_subo64_then_sub_32 -> XSeqPairsClass_with_sube64_in_rtcGPR64
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// FPR128
      49,	// bsub -> FPR128
      49,	// dsub -> FPR128
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      49,	// hsub -> FPR128
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      49,	// ssub -> FPR128
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR
      50,	// bsub -> ZPR
      50,	// dsub -> ZPR
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      50,	// hsub -> ZPR
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      50,	// ssub -> ZPR
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      50,	// zsub -> ZPR
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      50,	// zsub_hi -> ZPR
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// FPR128_lo
      51,	// bsub -> FPR128_lo
      51,	// dsub -> FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      51,	// hsub -> FPR128_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      51,	// ssub -> FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// MPR128
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR_4b
      53,	// bsub -> ZPR_4b
      53,	// dsub -> ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      53,	// hsub -> ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      53,	// ssub -> ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      53,	// zsub -> ZPR_4b
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      53,	// zsub_hi -> ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR_3b
      54,	// bsub -> ZPR_3b
      54,	// dsub -> ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      54,	// hsub -> ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      54,	// ssub -> ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      54,	// zsub -> ZPR_3b
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      54,	// zsub_hi -> ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDD
      55,	// bsub -> DDD
      0,	// dsub
      55,	// dsub0 -> DDD
      55,	// dsub1 -> DDD
      55,	// dsub2 -> DDD
      0,	// dsub3
      55,	// hsub -> DDD
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      55,	// ssub -> DDD
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      55,	// dsub1_then_bsub -> DDD
      55,	// dsub1_then_hsub -> DDD
      55,	// dsub1_then_ssub -> DDD
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      55,	// dsub2_then_bsub -> DDD
      55,	// dsub2_then_hsub -> DDD
      55,	// dsub2_then_ssub -> DDD
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      55,	// dsub0_dsub1 -> DDD
      0,	// dsub0_dsub1_dsub2
      55,	// dsub1_dsub2 -> DDD
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDD_with_dsub0_in_FPR64_lo
      56,	// bsub -> DDD_with_dsub0_in_FPR64_lo
      0,	// dsub
      56,	// dsub0 -> DDD_with_dsub0_in_FPR64_lo
      56,	// dsub1 -> DDD_with_dsub0_in_FPR64_lo
      56,	// dsub2 -> DDD_with_dsub0_in_FPR64_lo
      0,	// dsub3
      56,	// hsub -> DDD_with_dsub0_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      56,	// ssub -> DDD_with_dsub0_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      56,	// dsub1_then_bsub -> DDD_with_dsub0_in_FPR64_lo
      56,	// dsub1_then_hsub -> DDD_with_dsub0_in_FPR64_lo
      56,	// dsub1_then_ssub -> DDD_with_dsub0_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      56,	// dsub2_then_bsub -> DDD_with_dsub0_in_FPR64_lo
      56,	// dsub2_then_hsub -> DDD_with_dsub0_in_FPR64_lo
      56,	// dsub2_then_ssub -> DDD_with_dsub0_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      56,	// dsub0_dsub1 -> DDD_with_dsub0_in_FPR64_lo
      0,	// dsub0_dsub1_dsub2
      56,	// dsub1_dsub2 -> DDD_with_dsub0_in_FPR64_lo
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDD_with_dsub1_in_FPR64_lo
      57,	// bsub -> DDD_with_dsub1_in_FPR64_lo
      0,	// dsub
      57,	// dsub0 -> DDD_with_dsub1_in_FPR64_lo
      57,	// dsub1 -> DDD_with_dsub1_in_FPR64_lo
      57,	// dsub2 -> DDD_with_dsub1_in_FPR64_lo
      0,	// dsub3
      57,	// hsub -> DDD_with_dsub1_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      57,	// ssub -> DDD_with_dsub1_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      57,	// dsub1_then_bsub -> DDD_with_dsub1_in_FPR64_lo
      57,	// dsub1_then_hsub -> DDD_with_dsub1_in_FPR64_lo
      57,	// dsub1_then_ssub -> DDD_with_dsub1_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      57,	// dsub2_then_bsub -> DDD_with_dsub1_in_FPR64_lo
      57,	// dsub2_then_hsub -> DDD_with_dsub1_in_FPR64_lo
      57,	// dsub2_then_ssub -> DDD_with_dsub1_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      57,	// dsub0_dsub1 -> DDD_with_dsub1_in_FPR64_lo
      0,	// dsub0_dsub1_dsub2
      57,	// dsub1_dsub2 -> DDD_with_dsub1_in_FPR64_lo
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDD_with_dsub2_in_FPR64_lo
      58,	// bsub -> DDD_with_dsub2_in_FPR64_lo
      0,	// dsub
      58,	// dsub0 -> DDD_with_dsub2_in_FPR64_lo
      58,	// dsub1 -> DDD_with_dsub2_in_FPR64_lo
      58,	// dsub2 -> DDD_with_dsub2_in_FPR64_lo
      0,	// dsub3
      58,	// hsub -> DDD_with_dsub2_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      58,	// ssub -> DDD_with_dsub2_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      58,	// dsub1_then_bsub -> DDD_with_dsub2_in_FPR64_lo
      58,	// dsub1_then_hsub -> DDD_with_dsub2_in_FPR64_lo
      58,	// dsub1_then_ssub -> DDD_with_dsub2_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      58,	// dsub2_then_bsub -> DDD_with_dsub2_in_FPR64_lo
      58,	// dsub2_then_hsub -> DDD_with_dsub2_in_FPR64_lo
      58,	// dsub2_then_ssub -> DDD_with_dsub2_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      58,	// dsub0_dsub1 -> DDD_with_dsub2_in_FPR64_lo
      0,	// dsub0_dsub1_dsub2
      58,	// dsub1_dsub2 -> DDD_with_dsub2_in_FPR64_lo
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      59,	// bsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      0,	// dsub
      59,	// dsub0 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      59,	// dsub1 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      59,	// dsub2 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      0,	// dsub3
      59,	// hsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      59,	// ssub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      59,	// dsub1_then_bsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      59,	// dsub1_then_hsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      59,	// dsub1_then_ssub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      59,	// dsub2_then_bsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      59,	// dsub2_then_hsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      59,	// dsub2_then_ssub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      59,	// dsub0_dsub1 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      0,	// dsub0_dsub1_dsub2
      59,	// dsub1_dsub2 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      60,	// bsub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub
      60,	// dsub0 -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      60,	// dsub1 -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      60,	// dsub2 -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub3
      60,	// hsub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      60,	// ssub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      60,	// dsub1_then_bsub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      60,	// dsub1_then_hsub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      60,	// dsub1_then_ssub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      60,	// dsub2_then_bsub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      60,	// dsub2_then_hsub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      60,	// dsub2_then_ssub -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      60,	// dsub0_dsub1 -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub0_dsub1_dsub2
      60,	// dsub1_dsub2 -> DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      61,	// bsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub
      61,	// dsub0 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      61,	// dsub1 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      61,	// dsub2 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub3
      61,	// hsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      61,	// ssub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      61,	// dsub1_then_bsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      61,	// dsub1_then_hsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      61,	// dsub1_then_ssub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      61,	// dsub2_then_bsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      61,	// dsub2_then_hsub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      61,	// dsub2_then_ssub -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      61,	// dsub0_dsub1 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub0_dsub1_dsub2
      61,	// dsub1_dsub2 -> DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD
      62,	// bsub -> DDDD
      0,	// dsub
      62,	// dsub0 -> DDDD
      62,	// dsub1 -> DDDD
      62,	// dsub2 -> DDDD
      62,	// dsub3 -> DDDD
      62,	// hsub -> DDDD
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      62,	// ssub -> DDDD
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      62,	// dsub1_then_bsub -> DDDD
      62,	// dsub1_then_hsub -> DDDD
      62,	// dsub1_then_ssub -> DDDD
      62,	// dsub3_then_bsub -> DDDD
      62,	// dsub3_then_hsub -> DDDD
      62,	// dsub3_then_ssub -> DDDD
      62,	// dsub2_then_bsub -> DDDD
      62,	// dsub2_then_hsub -> DDDD
      62,	// dsub2_then_ssub -> DDDD
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      62,	// dsub0_dsub1 -> DDDD
      62,	// dsub0_dsub1_dsub2 -> DDDD
      62,	// dsub1_dsub2 -> DDDD
      62,	// dsub1_dsub2_dsub3 -> DDDD
      62,	// dsub2_dsub3 -> DDDD
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub0_in_FPR64_lo
      63,	// bsub -> DDDD_with_dsub0_in_FPR64_lo
      0,	// dsub
      63,	// dsub0 -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub1 -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub2 -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub3 -> DDDD_with_dsub0_in_FPR64_lo
      63,	// hsub -> DDDD_with_dsub0_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      63,	// ssub -> DDDD_with_dsub0_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      63,	// dsub1_then_bsub -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub1_then_hsub -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub1_then_ssub -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub3_then_bsub -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub3_then_hsub -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub3_then_ssub -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub2_then_bsub -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub2_then_hsub -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub2_then_ssub -> DDDD_with_dsub0_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      63,	// dsub0_dsub1 -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub1_dsub2 -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub0_in_FPR64_lo
      63,	// dsub2_dsub3 -> DDDD_with_dsub0_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub1_in_FPR64_lo
      64,	// bsub -> DDDD_with_dsub1_in_FPR64_lo
      0,	// dsub
      64,	// dsub0 -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub1 -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub2 -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub3 -> DDDD_with_dsub1_in_FPR64_lo
      64,	// hsub -> DDDD_with_dsub1_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      64,	// ssub -> DDDD_with_dsub1_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      64,	// dsub1_then_bsub -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub1_then_hsub -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub1_then_ssub -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub3_then_bsub -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub3_then_hsub -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub3_then_ssub -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub2_then_bsub -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub2_then_hsub -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub2_then_ssub -> DDDD_with_dsub1_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      64,	// dsub0_dsub1 -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub1_dsub2 -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub1_in_FPR64_lo
      64,	// dsub2_dsub3 -> DDDD_with_dsub1_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub2_in_FPR64_lo
      65,	// bsub -> DDDD_with_dsub2_in_FPR64_lo
      0,	// dsub
      65,	// dsub0 -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub1 -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub2 -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub3 -> DDDD_with_dsub2_in_FPR64_lo
      65,	// hsub -> DDDD_with_dsub2_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      65,	// ssub -> DDDD_with_dsub2_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      65,	// dsub1_then_bsub -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub1_then_hsub -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub1_then_ssub -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub3_then_bsub -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub3_then_hsub -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub3_then_ssub -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub2_then_bsub -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub2_then_hsub -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub2_then_ssub -> DDDD_with_dsub2_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      65,	// dsub0_dsub1 -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub1_dsub2 -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub2_in_FPR64_lo
      65,	// dsub2_dsub3 -> DDDD_with_dsub2_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub3_in_FPR64_lo
      66,	// bsub -> DDDD_with_dsub3_in_FPR64_lo
      0,	// dsub
      66,	// dsub0 -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub1 -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub2 -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub3 -> DDDD_with_dsub3_in_FPR64_lo
      66,	// hsub -> DDDD_with_dsub3_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      66,	// ssub -> DDDD_with_dsub3_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      66,	// dsub1_then_bsub -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub1_then_hsub -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub1_then_ssub -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub3_then_bsub -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub3_then_hsub -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub3_then_ssub -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub2_then_bsub -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub2_then_hsub -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub2_then_ssub -> DDDD_with_dsub3_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      66,	// dsub0_dsub1 -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub1_dsub2 -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub3_in_FPR64_lo
      66,	// dsub2_dsub3 -> DDDD_with_dsub3_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      0,	// dsub
      67,	// dsub0 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub1 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      67,	// ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      67,	// dsub1_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub1_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub1_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub3_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub3_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub3_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub2_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub2_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub2_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      67,	// dsub0_dsub1 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub1_dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      67,	// dsub2_dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// bsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// dsub
      68,	// dsub0 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub1 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub2 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub3 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// hsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      68,	// ssub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      68,	// dsub1_then_bsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub1_then_hsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub1_then_ssub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub3_then_bsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub3_then_hsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub3_then_ssub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub2_then_bsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub2_then_hsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub2_then_ssub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      68,	// dsub0_dsub1 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub1_dsub2 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      68,	// dsub2_dsub3 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// bsub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// dsub
      69,	// dsub0 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub1 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub2 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub3 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// hsub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      69,	// ssub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      69,	// dsub1_then_bsub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub1_then_hsub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub1_then_ssub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub3_then_bsub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub3_then_hsub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub3_then_ssub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub2_then_bsub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub2_then_hsub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub2_then_ssub -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      69,	// dsub0_dsub1 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub1_dsub2 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      69,	// dsub2_dsub3 -> DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// dsub
      70,	// dsub0 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub1 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      70,	// ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      70,	// dsub1_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub1_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub1_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub3_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub3_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub3_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub2_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub2_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub2_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      70,	// dsub0_dsub1 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub1_dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      70,	// dsub2_dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// bsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// dsub
      71,	// dsub0 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub1 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub2 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub3 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// hsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      71,	// ssub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      71,	// dsub1_then_bsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub1_then_hsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub1_then_ssub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub3_then_bsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub3_then_hsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub3_then_ssub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub2_then_bsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub2_then_hsub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub2_then_ssub -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      71,	// dsub0_dsub1 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub1_dsub2 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      71,	// dsub2_dsub3 -> DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// dsub
      72,	// dsub0 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub1 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      72,	// ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      72,	// dsub1_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub1_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub1_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub3_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub3_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub3_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub2_then_bsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub2_then_hsub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub2_then_ssub -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      72,	// dsub0_dsub1 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub0_dsub1_dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub1_dsub2 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub1_dsub2_dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      72,	// dsub2_dsub3 -> DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQ
      73,	// bsub -> QQ
      73,	// dsub -> QQ
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      73,	// hsub -> QQ
      73,	// qsub0 -> QQ
      73,	// qsub1 -> QQ
      0,	// qsub2
      0,	// qsub3
      73,	// ssub -> QQ
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      73,	// qsub1_then_bsub -> QQ
      73,	// qsub1_then_dsub -> QQ
      73,	// qsub1_then_hsub -> QQ
      73,	// qsub1_then_ssub -> QQ
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      73,	// dsub_qsub1_then_dsub -> QQ
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR2
      74,	// bsub -> ZPR2
      74,	// dsub -> ZPR2
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      74,	// hsub -> ZPR2
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      74,	// ssub -> ZPR2
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      74,	// zsub -> ZPR2
      74,	// zsub0 -> ZPR2
      74,	// zsub1 -> ZPR2
      0,	// zsub2
      0,	// zsub3
      74,	// zsub_hi -> ZPR2
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      74,	// zsub1_then_bsub -> ZPR2
      74,	// zsub1_then_dsub -> ZPR2
      74,	// zsub1_then_hsub -> ZPR2
      74,	// zsub1_then_ssub -> ZPR2
      74,	// zsub1_then_zsub -> ZPR2
      74,	// zsub1_then_zsub_hi -> ZPR2
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      74,	// dsub_zsub1_then_dsub -> ZPR2
      74,	// zsub_zsub1_then_zsub -> ZPR2
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQ_with_dsub_in_FPR64_lo
      75,	// bsub -> QQ_with_dsub_in_FPR64_lo
      75,	// dsub -> QQ_with_dsub_in_FPR64_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      75,	// hsub -> QQ_with_dsub_in_FPR64_lo
      75,	// qsub0 -> QQ_with_dsub_in_FPR64_lo
      75,	// qsub1 -> QQ_with_dsub_in_FPR64_lo
      0,	// qsub2
      0,	// qsub3
      75,	// ssub -> QQ_with_dsub_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      75,	// qsub1_then_bsub -> QQ_with_dsub_in_FPR64_lo
      75,	// qsub1_then_dsub -> QQ_with_dsub_in_FPR64_lo
      75,	// qsub1_then_hsub -> QQ_with_dsub_in_FPR64_lo
      75,	// qsub1_then_ssub -> QQ_with_dsub_in_FPR64_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      75,	// dsub_qsub1_then_dsub -> QQ_with_dsub_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQ_with_qsub1_in_FPR128_lo
      76,	// bsub -> QQ_with_qsub1_in_FPR128_lo
      76,	// dsub -> QQ_with_qsub1_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      76,	// hsub -> QQ_with_qsub1_in_FPR128_lo
      76,	// qsub0 -> QQ_with_qsub1_in_FPR128_lo
      76,	// qsub1 -> QQ_with_qsub1_in_FPR128_lo
      0,	// qsub2
      0,	// qsub3
      76,	// ssub -> QQ_with_qsub1_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      76,	// qsub1_then_bsub -> QQ_with_qsub1_in_FPR128_lo
      76,	// qsub1_then_dsub -> QQ_with_qsub1_in_FPR128_lo
      76,	// qsub1_then_hsub -> QQ_with_qsub1_in_FPR128_lo
      76,	// qsub1_then_ssub -> QQ_with_qsub1_in_FPR128_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      76,	// dsub_qsub1_then_dsub -> QQ_with_qsub1_in_FPR128_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR2_with_dsub_in_FPR64_lo
      77,	// bsub -> ZPR2_with_dsub_in_FPR64_lo
      77,	// dsub -> ZPR2_with_dsub_in_FPR64_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      77,	// hsub -> ZPR2_with_dsub_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      77,	// ssub -> ZPR2_with_dsub_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      77,	// zsub -> ZPR2_with_dsub_in_FPR64_lo
      77,	// zsub0 -> ZPR2_with_dsub_in_FPR64_lo
      77,	// zsub1 -> ZPR2_with_dsub_in_FPR64_lo
      0,	// zsub2
      0,	// zsub3
      77,	// zsub_hi -> ZPR2_with_dsub_in_FPR64_lo
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      77,	// zsub1_then_bsub -> ZPR2_with_dsub_in_FPR64_lo
      77,	// zsub1_then_dsub -> ZPR2_with_dsub_in_FPR64_lo
      77,	// zsub1_then_hsub -> ZPR2_with_dsub_in_FPR64_lo
      77,	// zsub1_then_ssub -> ZPR2_with_dsub_in_FPR64_lo
      77,	// zsub1_then_zsub -> ZPR2_with_dsub_in_FPR64_lo
      77,	// zsub1_then_zsub_hi -> ZPR2_with_dsub_in_FPR64_lo
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      77,	// dsub_zsub1_then_dsub -> ZPR2_with_dsub_in_FPR64_lo
      77,	// zsub_zsub1_then_zsub -> ZPR2_with_dsub_in_FPR64_lo
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR2_with_zsub1_in_ZPR_4b
      78,	// bsub -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// dsub -> ZPR2_with_zsub1_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      78,	// hsub -> ZPR2_with_zsub1_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      78,	// ssub -> ZPR2_with_zsub1_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      78,	// zsub -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// zsub0 -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// zsub1 -> ZPR2_with_zsub1_in_ZPR_4b
      0,	// zsub2
      0,	// zsub3
      78,	// zsub_hi -> ZPR2_with_zsub1_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      78,	// zsub1_then_bsub -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// zsub1_then_dsub -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// zsub1_then_hsub -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// zsub1_then_ssub -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// zsub1_then_zsub -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// zsub1_then_zsub_hi -> ZPR2_with_zsub1_in_ZPR_4b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      78,	// dsub_zsub1_then_dsub -> ZPR2_with_zsub1_in_ZPR_4b
      78,	// zsub_zsub1_then_zsub -> ZPR2_with_zsub1_in_ZPR_4b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      79,	// bsub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      79,	// dsub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      79,	// hsub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      79,	// qsub0 -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      79,	// qsub1 -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      0,	// qsub2
      0,	// qsub3
      79,	// ssub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      79,	// qsub1_then_bsub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      79,	// qsub1_then_dsub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      79,	// qsub1_then_hsub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      79,	// qsub1_then_ssub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      79,	// dsub_qsub1_then_dsub -> QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// bsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// dsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      80,	// hsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      80,	// ssub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      80,	// zsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// zsub0 -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// zsub1 -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      0,	// zsub2
      0,	// zsub3
      80,	// zsub_hi -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      80,	// zsub1_then_bsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// zsub1_then_dsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// zsub1_then_hsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// zsub1_then_ssub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// zsub1_then_zsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// zsub1_then_zsub_hi -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      80,	// dsub_zsub1_then_dsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      80,	// zsub_zsub1_then_zsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR2_with_zsub0_in_ZPR_3b
      81,	// bsub -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// dsub -> ZPR2_with_zsub0_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      81,	// hsub -> ZPR2_with_zsub0_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      81,	// ssub -> ZPR2_with_zsub0_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      81,	// zsub -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// zsub0 -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// zsub1 -> ZPR2_with_zsub0_in_ZPR_3b
      0,	// zsub2
      0,	// zsub3
      81,	// zsub_hi -> ZPR2_with_zsub0_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      81,	// zsub1_then_bsub -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// zsub1_then_dsub -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// zsub1_then_hsub -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// zsub1_then_ssub -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// zsub1_then_zsub -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// zsub1_then_zsub_hi -> ZPR2_with_zsub0_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      81,	// dsub_zsub1_then_dsub -> ZPR2_with_zsub0_in_ZPR_3b
      81,	// zsub_zsub1_then_zsub -> ZPR2_with_zsub0_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR2_with_zsub1_in_ZPR_3b
      82,	// bsub -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// dsub -> ZPR2_with_zsub1_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      82,	// hsub -> ZPR2_with_zsub1_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      82,	// ssub -> ZPR2_with_zsub1_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      82,	// zsub -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// zsub0 -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// zsub1 -> ZPR2_with_zsub1_in_ZPR_3b
      0,	// zsub2
      0,	// zsub3
      82,	// zsub_hi -> ZPR2_with_zsub1_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      82,	// zsub1_then_bsub -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// zsub1_then_dsub -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// zsub1_then_hsub -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// zsub1_then_ssub -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// zsub1_then_zsub -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// zsub1_then_zsub_hi -> ZPR2_with_zsub1_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      82,	// dsub_zsub1_then_dsub -> ZPR2_with_zsub1_in_ZPR_3b
      82,	// zsub_zsub1_then_zsub -> ZPR2_with_zsub1_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// bsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// dsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      83,	// hsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      83,	// ssub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      83,	// zsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// zsub0 -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// zsub1 -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      0,	// zsub2
      0,	// zsub3
      83,	// zsub_hi -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      83,	// zsub1_then_bsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// zsub1_then_dsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// zsub1_then_hsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// zsub1_then_ssub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// zsub1_then_zsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// zsub1_then_zsub_hi -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      83,	// dsub_zsub1_then_dsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      83,	// zsub_zsub1_then_zsub -> ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// MPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      84,	// zasubq0 -> MPR64
      84,	// zasubq1 -> MPR64
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQ
      85,	// bsub -> QQQ
      85,	// dsub -> QQQ
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      85,	// hsub -> QQQ
      85,	// qsub0 -> QQQ
      85,	// qsub1 -> QQQ
      85,	// qsub2 -> QQQ
      0,	// qsub3
      85,	// ssub -> QQQ
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      85,	// qsub1_then_bsub -> QQQ
      85,	// qsub1_then_dsub -> QQQ
      85,	// qsub1_then_hsub -> QQQ
      85,	// qsub1_then_ssub -> QQQ
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      85,	// qsub2_then_bsub -> QQQ
      85,	// qsub2_then_dsub -> QQQ
      85,	// qsub2_then_hsub -> QQQ
      85,	// qsub2_then_ssub -> QQQ
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      85,	// dsub_qsub1_then_dsub -> QQQ
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      85,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQ
      85,	// qsub0_qsub1 -> QQQ
      0,	// qsub0_qsub1_qsub2
      85,	// qsub1_qsub2 -> QQQ
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      85,	// qsub1_then_dsub_qsub2_then_dsub -> QQQ
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3
      86,	// bsub -> ZPR3
      86,	// dsub -> ZPR3
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      86,	// hsub -> ZPR3
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      86,	// ssub -> ZPR3
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      86,	// zsub -> ZPR3
      86,	// zsub0 -> ZPR3
      86,	// zsub1 -> ZPR3
      86,	// zsub2 -> ZPR3
      0,	// zsub3
      86,	// zsub_hi -> ZPR3
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      86,	// zsub1_then_bsub -> ZPR3
      86,	// zsub1_then_dsub -> ZPR3
      86,	// zsub1_then_hsub -> ZPR3
      86,	// zsub1_then_ssub -> ZPR3
      86,	// zsub1_then_zsub -> ZPR3
      86,	// zsub1_then_zsub_hi -> ZPR3
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      86,	// zsub2_then_bsub -> ZPR3
      86,	// zsub2_then_dsub -> ZPR3
      86,	// zsub2_then_hsub -> ZPR3
      86,	// zsub2_then_ssub -> ZPR3
      86,	// zsub2_then_zsub -> ZPR3
      86,	// zsub2_then_zsub_hi -> ZPR3
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      86,	// dsub_zsub1_then_dsub -> ZPR3
      86,	// zsub_zsub1_then_zsub -> ZPR3
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      86,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      86,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3
      86,	// zsub0_zsub1 -> ZPR3
      0,	// zsub0_zsub1_zsub2
      86,	// zsub1_zsub2 -> ZPR3
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      86,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      86,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQ_with_dsub_in_FPR64_lo
      87,	// bsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// dsub -> QQQ_with_dsub_in_FPR64_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      87,	// hsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub0 -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub1 -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub2 -> QQQ_with_dsub_in_FPR64_lo
      0,	// qsub3
      87,	// ssub -> QQQ_with_dsub_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      87,	// qsub1_then_bsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub1_then_dsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub1_then_hsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub1_then_ssub -> QQQ_with_dsub_in_FPR64_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      87,	// qsub2_then_bsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub2_then_hsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub2_then_ssub -> QQQ_with_dsub_in_FPR64_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      87,	// dsub_qsub1_then_dsub -> QQQ_with_dsub_in_FPR64_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      87,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo
      87,	// qsub0_qsub1 -> QQQ_with_dsub_in_FPR64_lo
      0,	// qsub0_qsub1_qsub2
      87,	// qsub1_qsub2 -> QQQ_with_dsub_in_FPR64_lo
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      87,	// qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQ_with_qsub1_in_FPR128_lo
      88,	// bsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// dsub -> QQQ_with_qsub1_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      88,	// hsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub0 -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub1 -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub2 -> QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub3
      88,	// ssub -> QQQ_with_qsub1_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      88,	// qsub1_then_bsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub1_then_dsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub1_then_hsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub1_then_ssub -> QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      88,	// qsub2_then_bsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub2_then_dsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub2_then_hsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub2_then_ssub -> QQQ_with_qsub1_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      88,	// dsub_qsub1_then_dsub -> QQQ_with_qsub1_in_FPR128_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      88,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_qsub1_in_FPR128_lo
      88,	// qsub0_qsub1 -> QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub0_qsub1_qsub2
      88,	// qsub1_qsub2 -> QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      88,	// qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQ_with_qsub2_in_FPR128_lo
      89,	// bsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// dsub -> QQQ_with_qsub2_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      89,	// hsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub0 -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub1 -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub2 -> QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub3
      89,	// ssub -> QQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      89,	// qsub1_then_bsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub1_then_dsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub1_then_hsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub1_then_ssub -> QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      89,	// qsub2_then_bsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub2_then_dsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub2_then_hsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub2_then_ssub -> QQQ_with_qsub2_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      89,	// dsub_qsub1_then_dsub -> QQQ_with_qsub2_in_FPR128_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      89,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_qsub2_in_FPR128_lo
      89,	// qsub0_qsub1 -> QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub0_qsub1_qsub2
      89,	// qsub1_qsub2 -> QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      89,	// qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_dsub_in_FPR64_lo
      90,	// bsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// dsub -> ZPR3_with_dsub_in_FPR64_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      90,	// hsub -> ZPR3_with_dsub_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      90,	// ssub -> ZPR3_with_dsub_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      90,	// zsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub0 -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub1 -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub2 -> ZPR3_with_dsub_in_FPR64_lo
      0,	// zsub3
      90,	// zsub_hi -> ZPR3_with_dsub_in_FPR64_lo
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      90,	// zsub1_then_bsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub1_then_hsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub1_then_ssub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub1_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      90,	// zsub2_then_bsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub2_then_hsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub2_then_ssub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub2_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      90,	// dsub_zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub_zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      90,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      90,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo
      90,	// zsub0_zsub1 -> ZPR3_with_dsub_in_FPR64_lo
      0,	// zsub0_zsub1_zsub2
      90,	// zsub1_zsub2 -> ZPR3_with_dsub_in_FPR64_lo
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      90,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      90,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_zsub1_in_ZPR_4b
      91,	// bsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// dsub -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      91,	// hsub -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      91,	// ssub -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      91,	// zsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub0 -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub1 -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub2 -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub3
      91,	// zsub_hi -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      91,	// zsub1_then_bsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub1_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub1_then_hsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub1_then_ssub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub1_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub1_then_zsub_hi -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      91,	// zsub2_then_bsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub2_then_hsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub2_then_ssub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub2_then_zsub_hi -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      91,	// dsub_zsub1_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub_zsub1_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      91,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      91,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b
      91,	// zsub0_zsub1 -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub0_zsub1_zsub2
      91,	// zsub1_zsub2 -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      91,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      91,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_zsub2_in_ZPR_4b
      92,	// bsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// dsub -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      92,	// hsub -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      92,	// ssub -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      92,	// zsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub0 -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub1 -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub2 -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub3
      92,	// zsub_hi -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      92,	// zsub1_then_bsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub1_then_dsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub1_then_hsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub1_then_ssub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub1_then_zsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub1_then_zsub_hi -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      92,	// zsub2_then_bsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub2_then_dsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub2_then_hsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub2_then_ssub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub2_then_zsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub2_then_zsub_hi -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      92,	// dsub_zsub1_then_dsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub_zsub1_then_zsub -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      92,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      92,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub2_in_ZPR_4b
      92,	// zsub0_zsub1 -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub0_zsub1_zsub2
      92,	// zsub1_zsub2 -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      92,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      92,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// bsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      93,	// hsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub0 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub1 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub2 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub3
      93,	// ssub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      93,	// qsub1_then_bsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub1_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub1_then_hsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub1_then_ssub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      93,	// qsub2_then_bsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub2_then_hsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub2_then_ssub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      93,	// dsub_qsub1_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      93,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      93,	// qsub0_qsub1 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub0_qsub1_qsub2
      93,	// qsub1_qsub2 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      93,	// qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// bsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// dsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      94,	// hsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub0 -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub1 -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub2 -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub3
      94,	// ssub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      94,	// qsub1_then_bsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub1_then_dsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub1_then_hsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub1_then_ssub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      94,	// qsub2_then_bsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub2_then_dsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub2_then_hsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub2_then_ssub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      94,	// dsub_qsub1_then_dsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      94,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      94,	// qsub0_qsub1 -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub0_qsub1_qsub2
      94,	// qsub1_qsub2 -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      94,	// qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      95,	// hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      95,	// ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      95,	// zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub0 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub1 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub2 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub3
      95,	// zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      95,	// zsub1_then_bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub1_then_hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub1_then_ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub1_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      95,	// zsub2_then_bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub2_then_hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub2_then_ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub2_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      95,	// dsub_zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub_zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      95,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      95,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      95,	// zsub0_zsub1 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub0_zsub1_zsub2
      95,	// zsub1_zsub2 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      95,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      95,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// bsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// dsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      96,	// hsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      96,	// ssub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      96,	// zsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub0 -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub1 -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub2 -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub3
      96,	// zsub_hi -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      96,	// zsub1_then_bsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub1_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub1_then_hsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub1_then_ssub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub1_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub1_then_zsub_hi -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      96,	// zsub2_then_bsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub2_then_hsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub2_then_ssub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub2_then_zsub_hi -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      96,	// dsub_zsub1_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub_zsub1_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      96,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      96,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      96,	// zsub0_zsub1 -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub0_zsub1_zsub2
      96,	// zsub1_zsub2 -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      96,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      96,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// bsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      97,	// hsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub0 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub1 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub2 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub3
      97,	// ssub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      97,	// qsub1_then_bsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub1_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub1_then_hsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub1_then_ssub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      97,	// qsub2_then_bsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub2_then_hsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub2_then_ssub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      97,	// dsub_qsub1_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      97,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      97,	// qsub0_qsub1 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub0_qsub1_qsub2
      97,	// qsub1_qsub2 -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      97,	// qsub1_then_dsub_qsub2_then_dsub -> QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      98,	// hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      98,	// ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      98,	// zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub0 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub1 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub2 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub3
      98,	// zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      98,	// zsub1_then_bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub1_then_hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub1_then_ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub1_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      98,	// zsub2_then_bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub2_then_hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub2_then_ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub2_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      98,	// dsub_zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub_zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      98,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      98,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      98,	// zsub0_zsub1 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub0_zsub1_zsub2
      98,	// zsub1_zsub2 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      98,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      98,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_zsub0_in_ZPR_3b
      99,	// bsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// dsub -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      99,	// hsub -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      99,	// ssub -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      99,	// zsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub0 -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub1 -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub2 -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// zsub3
      99,	// zsub_hi -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      99,	// zsub1_then_bsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub1_then_dsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub1_then_hsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub1_then_ssub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub1_then_zsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub1_then_zsub_hi -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      99,	// zsub2_then_bsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub2_then_dsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub2_then_hsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub2_then_ssub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub2_then_zsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub2_then_zsub_hi -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      99,	// dsub_zsub1_then_dsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub_zsub1_then_zsub -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      99,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      99,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub0_in_ZPR_3b
      99,	// zsub0_zsub1 -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// zsub0_zsub1_zsub2
      99,	// zsub1_zsub2 -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      99,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      99,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub0_in_ZPR_3b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_zsub1_in_ZPR_3b
      100,	// bsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// dsub -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      100,	// hsub -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      100,	// ssub -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      100,	// zsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub0 -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub1 -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub2 -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub3
      100,	// zsub_hi -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      100,	// zsub1_then_bsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub1_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub1_then_hsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub1_then_ssub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub1_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub1_then_zsub_hi -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      100,	// zsub2_then_bsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub2_then_hsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub2_then_ssub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub2_then_zsub_hi -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      100,	// dsub_zsub1_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub_zsub1_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      100,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      100,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b
      100,	// zsub0_zsub1 -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub0_zsub1_zsub2
      100,	// zsub1_zsub2 -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      100,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      100,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_zsub2_in_ZPR_3b
      101,	// bsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// dsub -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      101,	// hsub -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      101,	// ssub -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      101,	// zsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub0 -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub1 -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub2 -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub3
      101,	// zsub_hi -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      101,	// zsub1_then_bsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub1_then_dsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub1_then_hsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub1_then_ssub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub1_then_zsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub1_then_zsub_hi -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      101,	// zsub2_then_bsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub2_then_dsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub2_then_hsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub2_then_ssub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub2_then_zsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub2_then_zsub_hi -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      101,	// dsub_zsub1_then_dsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub_zsub1_then_zsub -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      101,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      101,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub2_in_ZPR_3b
      101,	// zsub0_zsub1 -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub0_zsub1_zsub2
      101,	// zsub1_zsub2 -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      101,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      101,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      102,	// hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      102,	// ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      102,	// zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub0 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub1 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub2 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub3
      102,	// zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      102,	// zsub1_then_bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub1_then_hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub1_then_ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub1_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      102,	// zsub2_then_bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub2_then_hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub2_then_ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub2_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      102,	// dsub_zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub_zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      102,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      102,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      102,	// zsub0_zsub1 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub0_zsub1_zsub2
      102,	// zsub1_zsub2 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      102,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      102,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// bsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// dsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      103,	// hsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      103,	// ssub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      103,	// zsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub0 -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub1 -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub2 -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub3
      103,	// zsub_hi -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      103,	// zsub1_then_bsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub1_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub1_then_hsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub1_then_ssub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub1_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub1_then_zsub_hi -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      103,	// zsub2_then_bsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub2_then_hsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub2_then_ssub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub2_then_zsub_hi -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      103,	// dsub_zsub1_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub_zsub1_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      103,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      103,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      103,	// zsub0_zsub1 -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub0_zsub1_zsub2
      103,	// zsub1_zsub2 -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      103,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      103,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      104,	// hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      104,	// ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      104,	// zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub0 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub1 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub2 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub3
      104,	// zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      104,	// zsub1_then_bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub1_then_hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub1_then_ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub1_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      104,	// zsub2_then_bsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub2_then_hsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub2_then_ssub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub2_then_zsub_hi -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      104,	// dsub_zsub1_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub_zsub1_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      104,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      104,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      104,	// zsub0_zsub1 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub0_zsub1_zsub2
      104,	// zsub1_zsub2 -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      104,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      104,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQQ
      105,	// bsub -> QQQQ
      105,	// dsub -> QQQQ
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      105,	// hsub -> QQQQ
      105,	// qsub0 -> QQQQ
      105,	// qsub1 -> QQQQ
      105,	// qsub2 -> QQQQ
      105,	// qsub3 -> QQQQ
      105,	// ssub -> QQQQ
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      105,	// qsub1_then_bsub -> QQQQ
      105,	// qsub1_then_dsub -> QQQQ
      105,	// qsub1_then_hsub -> QQQQ
      105,	// qsub1_then_ssub -> QQQQ
      105,	// qsub3_then_bsub -> QQQQ
      105,	// qsub3_then_dsub -> QQQQ
      105,	// qsub3_then_hsub -> QQQQ
      105,	// qsub3_then_ssub -> QQQQ
      105,	// qsub2_then_bsub -> QQQQ
      105,	// qsub2_then_dsub -> QQQQ
      105,	// qsub2_then_hsub -> QQQQ
      105,	// qsub2_then_ssub -> QQQQ
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      105,	// dsub_qsub1_then_dsub -> QQQQ
      105,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ
      105,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ
      105,	// qsub0_qsub1 -> QQQQ
      105,	// qsub0_qsub1_qsub2 -> QQQQ
      105,	// qsub1_qsub2 -> QQQQ
      105,	// qsub1_qsub2_qsub3 -> QQQQ
      105,	// qsub2_qsub3 -> QQQQ
      105,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ
      105,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ
      105,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR4
      106,	// bsub -> ZPR4
      106,	// dsub -> ZPR4
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      106,	// hsub -> ZPR4
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      106,	// ssub -> ZPR4
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      106,	// zsub -> ZPR4
      106,	// zsub0 -> ZPR4
      106,	// zsub1 -> ZPR4
      106,	// zsub2 -> ZPR4
      106,	// zsub3 -> ZPR4
      106,	// zsub_hi -> ZPR4
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      106,	// zsub1_then_bsub -> ZPR4
      106,	// zsub1_then_dsub -> ZPR4
      106,	// zsub1_then_hsub -> ZPR4
      106,	// zsub1_then_ssub -> ZPR4
      106,	// zsub1_then_zsub -> ZPR4
      106,	// zsub1_then_zsub_hi -> ZPR4
      106,	// zsub3_then_bsub -> ZPR4
      106,	// zsub3_then_dsub -> ZPR4
      106,	// zsub3_then_hsub -> ZPR4
      106,	// zsub3_then_ssub -> ZPR4
      106,	// zsub3_then_zsub -> ZPR4
      106,	// zsub3_then_zsub_hi -> ZPR4
      106,	// zsub2_then_bsub -> ZPR4
      106,	// zsub2_then_dsub -> ZPR4
      106,	// zsub2_then_hsub -> ZPR4
      106,	// zsub2_then_ssub -> ZPR4
      106,	// zsub2_then_zsub -> ZPR4
      106,	// zsub2_then_zsub_hi -> ZPR4
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      106,	// dsub_zsub1_then_dsub -> ZPR4
      106,	// zsub_zsub1_then_zsub -> ZPR4
      106,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4
      106,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4
      106,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4
      106,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4
      106,	// zsub0_zsub1 -> ZPR4
      106,	// zsub0_zsub1_zsub2 -> ZPR4
      106,	// zsub1_zsub2 -> ZPR4
      106,	// zsub1_zsub2_zsub3 -> ZPR4
      106,	// zsub2_zsub3 -> ZPR4
      106,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4
      106,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4
      106,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4
      106,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4
      106,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4
      106,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4
    },
    {	// QQQQ_with_dsub_in_FPR64_lo
      107,	// bsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// dsub -> QQQQ_with_dsub_in_FPR64_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      107,	// hsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub0 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub1 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub2 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub3 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// ssub -> QQQQ_with_dsub_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      107,	// qsub1_then_bsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub1_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub1_then_hsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub1_then_ssub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub3_then_bsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub3_then_hsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub3_then_ssub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub2_then_bsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub2_then_hsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub2_then_ssub -> QQQQ_with_dsub_in_FPR64_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      107,	// dsub_qsub1_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub0_qsub1 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub0_qsub1_qsub2 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub1_qsub2 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub1_qsub2_qsub3 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub2_qsub3 -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      107,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQQ_with_qsub1_in_FPR128_lo
      108,	// bsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// dsub -> QQQQ_with_qsub1_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      108,	// hsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub0 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub1 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub2 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub3 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// ssub -> QQQQ_with_qsub1_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      108,	// qsub1_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub1_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub1_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub1_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub3_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub3_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub3_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub2_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub2_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub2_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      108,	// dsub_qsub1_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub0_qsub1 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub0_qsub1_qsub2 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub1_qsub2 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub1_qsub2_qsub3 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub2_qsub3 -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      108,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQQ_with_qsub2_in_FPR128_lo
      109,	// bsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// dsub -> QQQQ_with_qsub2_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      109,	// hsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub0 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub1 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub2 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub3 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// ssub -> QQQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      109,	// qsub1_then_bsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub1_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub1_then_hsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub1_then_ssub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub3_then_bsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub3_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub3_then_hsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub3_then_ssub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub2_then_bsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub2_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub2_then_hsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub2_then_ssub -> QQQQ_with_qsub2_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      109,	// dsub_qsub1_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub0_qsub1 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub0_qsub1_qsub2 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub1_qsub2 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub1_qsub2_qsub3 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub2_qsub3 -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      109,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQQ_with_qsub3_in_FPR128_lo
      110,	// bsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// dsub -> QQQQ_with_qsub3_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      110,	// hsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub0 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub1 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub2 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub3 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// ssub -> QQQQ_with_qsub3_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      110,	// qsub1_then_bsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub1_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub1_then_hsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub1_then_ssub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub3_then_bsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub3_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub3_then_hsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub3_then_ssub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub2_then_bsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub2_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub2_then_hsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub2_then_ssub -> QQQQ_with_qsub3_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      110,	// dsub_qsub1_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub0_qsub1 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub0_qsub1_qsub2 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub1_qsub2 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub1_qsub2_qsub3 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub2_qsub3 -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      110,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub3_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR4_with_dsub_in_FPR64_lo
      111,	// bsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// dsub -> ZPR4_with_dsub_in_FPR64_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      111,	// hsub -> ZPR4_with_dsub_in_FPR64_lo
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      111,	// ssub -> ZPR4_with_dsub_in_FPR64_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      111,	// zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub0 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub3 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub_hi -> ZPR4_with_dsub_in_FPR64_lo
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      111,	// zsub1_then_bsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_hsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_ssub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub3_then_bsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub3_then_hsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub3_then_ssub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub3_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_then_bsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_then_hsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_then_ssub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      111,	// dsub_zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub_zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub0_zsub1 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub0_zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo
      111,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo
    },
    {	// ZPR4_with_zsub1_in_ZPR_4b
      112,	// bsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// dsub -> ZPR4_with_zsub1_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      112,	// hsub -> ZPR4_with_zsub1_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      112,	// ssub -> ZPR4_with_zsub1_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      112,	// zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub0 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub3 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      112,	// zsub1_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub3_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub3_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub3_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub3_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      112,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub0_zsub1 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b
      112,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b
    },
    {	// ZPR4_with_zsub2_in_ZPR_4b
      113,	// bsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// dsub -> ZPR4_with_zsub2_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      113,	// hsub -> ZPR4_with_zsub2_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      113,	// ssub -> ZPR4_with_zsub2_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      113,	// zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub0 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub3 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub_hi -> ZPR4_with_zsub2_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      113,	// zsub1_then_bsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_hsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_ssub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub3_then_bsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub3_then_hsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub3_then_ssub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub3_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_then_bsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_then_hsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_then_ssub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      113,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub0_zsub1 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_zsub2 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_zsub3 -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b
      113,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b
    },
    {	// ZPR4_with_zsub3_in_ZPR_4b
      114,	// bsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// dsub -> ZPR4_with_zsub3_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      114,	// hsub -> ZPR4_with_zsub3_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      114,	// ssub -> ZPR4_with_zsub3_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      114,	// zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub0 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub3 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub_hi -> ZPR4_with_zsub3_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      114,	// zsub1_then_bsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_hsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_ssub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_zsub_hi -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub3_then_bsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub3_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub3_then_hsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub3_then_ssub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub3_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub3_then_zsub_hi -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_then_bsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_then_hsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_then_ssub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_then_zsub_hi -> ZPR4_with_zsub3_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      114,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub0_zsub1 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_zsub2 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_zsub3 -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub3_in_ZPR_4b
      114,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub3_in_ZPR_4b
    },
    {	// QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      115,	// hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub0 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub1 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      115,	// qsub1_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub1_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub1_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub1_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub3_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub3_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub3_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub2_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub2_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub2_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      115,	// dsub_qsub1_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub0_qsub1 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub0_qsub1_qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub1_qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub1_qsub2_qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub2_qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      115,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// bsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      116,	// hsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub0 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub1 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub2 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub3 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// ssub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      116,	// qsub1_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub1_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub1_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub1_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub3_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub3_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub3_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub2_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub2_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub2_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      116,	// dsub_qsub1_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub0_qsub1 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub0_qsub1_qsub2 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub1_qsub2 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub1_qsub2_qsub3 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub2_qsub3 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      116,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// bsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      117,	// hsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub0 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub1 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub2 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub3 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// ssub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      117,	// qsub1_then_bsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub1_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub1_then_hsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub1_then_ssub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub3_then_bsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub3_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub3_then_hsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub3_then_ssub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub2_then_bsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub2_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub2_then_hsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub2_then_ssub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      117,	// dsub_qsub1_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub0_qsub1 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub0_qsub1_qsub2 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub1_qsub2 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub1_qsub2_qsub3 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub2_qsub3 -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      117,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      118,	// hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      118,	// ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      118,	// zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub0 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      118,	// zsub1_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub3_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub3_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub3_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub3_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      118,	// dsub_zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub_zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub0_zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub0_zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
      118,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
    },
    {	// ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// bsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      119,	// hsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      119,	// ssub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      119,	// zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub0 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub3 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      119,	// zsub1_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub3_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub3_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub3_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub3_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      119,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub0_zsub1 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
      119,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
    },
    {	// ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// bsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      120,	// hsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      120,	// ssub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      120,	// zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub0 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub3 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub_hi -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      120,	// zsub1_then_bsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_hsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_ssub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub3_then_bsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub3_then_hsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub3_then_ssub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub3_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_then_bsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_then_hsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_then_ssub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      120,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub0_zsub1 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_zsub2 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_zsub3 -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      120,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
    },
    {	// QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      121,	// hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub0 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub1 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      121,	// qsub1_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub1_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub1_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub1_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub3_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub3_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub3_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub2_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub2_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub2_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      121,	// dsub_qsub1_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub0_qsub1 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub0_qsub1_qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub1_qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub1_qsub2_qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub2_qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      121,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// bsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      122,	// hsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub0 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub1 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub2 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub3 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// ssub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      122,	// qsub1_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub1_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub1_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub1_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub3_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub3_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub3_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub2_then_bsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub2_then_hsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub2_then_ssub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      122,	// dsub_qsub1_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub0_qsub1 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub0_qsub1_qsub2 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub1_qsub2 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub1_qsub2_qsub3 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub2_qsub3 -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      122,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      123,	// hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      123,	// ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      123,	// zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub0 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      123,	// zsub1_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub3_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub3_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub3_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub3_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      123,	// dsub_zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub_zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub0_zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub0_zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
      123,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
    },
    {	// ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// bsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      124,	// hsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      124,	// ssub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      124,	// zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub0 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub3 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      124,	// zsub1_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub3_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub3_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub3_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub3_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_then_bsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_then_hsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_then_ssub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      124,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub0_zsub1 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
      124,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
    },
    {	// QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      125,	// hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub0 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub1 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      125,	// qsub1_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub1_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub1_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub1_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub3_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub3_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub3_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub2_then_bsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub2_then_hsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub2_then_ssub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      125,	// dsub_qsub1_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// dsub_qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub0_qsub1 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub0_qsub1_qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub1_qsub2 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub1_qsub2_qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub2_qsub3 -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub1_then_dsub_qsub2_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      125,	// qsub2_then_dsub_qsub3_then_dsub -> QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      126,	// hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      126,	// ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      126,	// zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub0 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      126,	// zsub1_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub3_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub3_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub3_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub3_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      126,	// dsub_zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub_zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub0_zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub0_zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
      126,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
    },
    {	// ZPR4_with_zsub0_in_ZPR_3b
      127,	// bsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// dsub -> ZPR4_with_zsub0_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      127,	// hsub -> ZPR4_with_zsub0_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      127,	// ssub -> ZPR4_with_zsub0_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      127,	// zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub0 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub3 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub_hi -> ZPR4_with_zsub0_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      127,	// zsub1_then_bsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_hsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_ssub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_zsub_hi -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub3_then_bsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub3_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub3_then_hsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub3_then_ssub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub3_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub3_then_zsub_hi -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_then_bsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_then_hsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_then_ssub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_then_zsub_hi -> ZPR4_with_zsub0_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      127,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub0_zsub1 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_zsub2 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_zsub3 -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub0_in_ZPR_3b
      127,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub0_in_ZPR_3b
    },
    {	// ZPR4_with_zsub1_in_ZPR_3b
      128,	// bsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// dsub -> ZPR4_with_zsub1_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      128,	// hsub -> ZPR4_with_zsub1_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      128,	// ssub -> ZPR4_with_zsub1_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      128,	// zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub0 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub3 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      128,	// zsub1_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub3_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub3_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub3_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub3_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      128,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub0_zsub1 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b
      128,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b
    },
    {	// ZPR4_with_zsub2_in_ZPR_3b
      129,	// bsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// dsub -> ZPR4_with_zsub2_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      129,	// hsub -> ZPR4_with_zsub2_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      129,	// ssub -> ZPR4_with_zsub2_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      129,	// zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub0 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub3 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub_hi -> ZPR4_with_zsub2_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      129,	// zsub1_then_bsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_hsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_ssub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub3_then_bsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub3_then_hsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub3_then_ssub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub3_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_then_bsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_then_hsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_then_ssub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      129,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub0_zsub1 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_zsub2 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_zsub3 -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b
      129,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b
    },
    {	// ZPR4_with_zsub3_in_ZPR_3b
      130,	// bsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// dsub -> ZPR4_with_zsub3_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      130,	// hsub -> ZPR4_with_zsub3_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      130,	// ssub -> ZPR4_with_zsub3_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      130,	// zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub0 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub3 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub_hi -> ZPR4_with_zsub3_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      130,	// zsub1_then_bsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_hsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_ssub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_zsub_hi -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub3_then_bsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub3_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub3_then_hsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub3_then_ssub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub3_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub3_then_zsub_hi -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_then_bsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_then_hsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_then_ssub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_then_zsub_hi -> ZPR4_with_zsub3_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      130,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub0_zsub1 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_zsub2 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_zsub3 -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub3_in_ZPR_3b
      130,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub3_in_ZPR_3b
    },
    {	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      131,	// hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      131,	// ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      131,	// zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub0 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      131,	// zsub1_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub3_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub3_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub3_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub3_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      131,	// dsub_zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub_zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub0_zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub0_zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
      131,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
    },
    {	// ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// bsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      132,	// hsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      132,	// ssub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      132,	// zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub0 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub3 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      132,	// zsub1_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub3_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub3_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub3_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub3_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      132,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub0_zsub1 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
      132,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
    },
    {	// ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// bsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      133,	// hsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      133,	// ssub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      133,	// zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub0 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub3 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub_hi -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      133,	// zsub1_then_bsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_hsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_ssub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub3_then_bsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub3_then_hsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub3_then_ssub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub3_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_then_bsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_then_hsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_then_ssub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_then_zsub_hi -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      133,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub0_zsub1 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_zsub2 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_zsub3 -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      133,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
    },
    {	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      134,	// hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      134,	// ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      134,	// zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub0 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      134,	// zsub1_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub3_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub3_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub3_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub3_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      134,	// dsub_zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub_zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub0_zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub0_zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
      134,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
    },
    {	// ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// bsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      135,	// hsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      135,	// ssub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      135,	// zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub0 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub3 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      135,	// zsub1_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub3_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub3_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub3_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub3_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_then_bsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_then_hsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_then_ssub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_then_zsub_hi -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      135,	// dsub_zsub1_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub_zsub1_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub0_zsub1 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub0_zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_zsub2 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_zsub3 -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
      135,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
    },
    {	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      136,	// hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      136,	// ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      136,	// zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub0 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      136,	// zsub1_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub3_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub3_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub3_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub3_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_then_bsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_then_hsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_then_ssub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_then_zsub_hi -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      136,	// dsub_zsub1_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub_zsub1_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// dsub_zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub_zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub0_zsub1 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub0_zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_zsub2 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_zsub3 -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_dsub_zsub2_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_zsub_zsub2_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_then_dsub_zsub3_then_dsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
      136,	// zsub2_then_zsub_zsub3_then_zsub -> ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
    },
    {	// GPR64x8Class
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      137,	// sub_32 -> GPR64x8Class
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      137,	// x8sub_0 -> GPR64x8Class
      137,	// x8sub_1 -> GPR64x8Class
      137,	// x8sub_2 -> GPR64x8Class
      137,	// x8sub_3 -> GPR64x8Class
      137,	// x8sub_4 -> GPR64x8Class
      137,	// x8sub_5 -> GPR64x8Class
      137,	// x8sub_6 -> GPR64x8Class
      137,	// x8sub_7 -> GPR64x8Class
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      137,	// x8sub_7_then_sub_32 -> GPR64x8Class
      137,	// x8sub_6_then_sub_32 -> GPR64x8Class
      137,	// x8sub_5_then_sub_32 -> GPR64x8Class
      137,	// x8sub_4_then_sub_32 -> GPR64x8Class
      137,	// x8sub_3_then_sub_32 -> GPR64x8Class
      137,	// x8sub_2_then_sub_32 -> GPR64x8Class
      137,	// x8sub_1_then_sub_32 -> GPR64x8Class
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      137,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class
      137,	// x8sub_0_x8sub_1 -> GPR64x8Class
      137,	// x8sub_2_x8sub_3 -> GPR64x8Class
      137,	// x8sub_4_x8sub_5 -> GPR64x8Class
      137,	// x8sub_6_x8sub_7 -> GPR64x8Class
      137,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class
      137,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class
      137,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      138,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      138,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      138,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      138,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      138,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      139,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      139,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      139,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      139,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      139,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      140,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      140,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      140,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      140,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      140,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      141,	// sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      141,	// x8sub_0 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_1 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_2 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_3 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_4 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_5 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_6 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_7 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      141,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      141,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      141,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      142,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      142,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      142,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      142,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      142,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      143,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      143,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      143,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      143,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      143,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      144,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      144,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      144,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      144,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      144,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      145,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      145,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      145,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      145,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      145,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      146,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      146,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      146,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      146,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      146,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      147,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      147,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      147,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      147,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      147,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      148,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      148,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      148,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      148,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      148,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      149,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      149,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      149,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      149,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      149,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      150,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      150,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      150,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      150,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      150,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      151,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      151,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      151,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      151,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      151,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      152,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      152,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      152,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      152,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      152,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_1_in_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      153,	// sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      153,	// x8sub_0 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_1 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_2 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_3 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_4 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_5 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_6 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_7 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      153,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      153,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      153,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      154,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      154,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      154,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      154,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      154,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      155,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      155,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      155,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      155,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      155,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      156,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      156,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      156,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      156,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      156,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      157,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      157,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      157,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      157,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      157,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      158,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      158,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      158,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      158,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      158,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      159,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      159,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      159,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      159,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      159,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      160,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      160,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      160,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      160,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      160,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      161,	// sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      161,	// x8sub_0 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_1 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_2 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_3 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_4 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_5 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_6 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_7 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      161,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      161,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      161,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      162,	// sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      162,	// x8sub_0 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_1 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_2 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_3 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_4 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_5 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_6 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_7 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      162,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      162,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      162,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      163,	// sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      163,	// x8sub_0 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_1 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_2 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_3 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_4 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_5 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_6 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_7 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      163,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      163,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      163,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      164,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      164,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      164,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      164,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      164,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      165,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      165,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      165,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      165,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      165,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      166,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      166,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      166,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      166,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      166,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      167,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      167,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      167,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      167,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      167,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      168,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      168,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      168,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      168,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      168,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      169,	// sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      169,	// x8sub_0 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_1 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_2 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_3 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_4 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_5 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_6 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_7 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      169,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      169,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      169,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      170,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      170,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      170,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      170,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      170,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      171,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      171,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      171,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      171,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      171,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      172,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      172,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      172,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      172,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      172,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      173,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      173,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      173,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      173,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      173,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      174,	// sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      174,	// x8sub_0 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_1 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_2 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_3 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_4 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_5 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_6 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_7 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      174,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      174,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      174,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      175,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      175,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      175,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      175,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      175,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      176,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      176,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      176,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      176,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      176,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      177,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      177,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      177,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      177,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      177,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      178,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      178,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      178,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      178,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      178,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      179,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      179,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      179,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      179,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      179,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      180,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      180,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      180,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      180,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      180,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      181,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      181,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      181,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      181,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      181,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      182,	// sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      182,	// x8sub_0 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_1 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_2 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_3 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_4 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_5 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_6 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_7 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      182,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      182,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      182,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      183,	// sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      183,	// x8sub_0 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_1 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_2 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_3 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_4 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_5 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_6 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_7 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      183,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      183,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      183,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      184,	// sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      184,	// x8sub_0 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_1 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_2 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_3 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_4 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_5 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_6 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_7 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      184,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      184,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      184,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_sub_32_in_GPR32arg
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      185,	// sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      185,	// x8sub_0 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_1 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_2 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_3 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_4 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_5 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_6 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_7 -> GPR64x8Class_with_sub_32_in_GPR32arg
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      185,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      185,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      185,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// MPR32
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      186,	// zasubd0 -> MPR32
      186,	// zasubd1 -> MPR32
      0,	// zasubh0
      0,	// zasubh1
      186,	// zasubq0 -> MPR32
      186,	// zasubq1 -> MPR32
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      186,	// zasubd1_then_zasubq0 -> MPR32
      186,	// zasubd1_then_zasubq1 -> MPR32
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64arg
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      187,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      187,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      187,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      187,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      187,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64arg
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      188,	// sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      188,	// x8sub_0 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_1 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_2 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_3 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_4 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_5 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_6 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_7 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      188,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      188,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      188,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      189,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      189,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      189,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      189,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      189,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      190,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      190,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      190,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      190,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      190,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64arg
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      191,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      191,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      191,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      191,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      191,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64arg
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      192,	// sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      192,	// x8sub_0 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_1 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_2 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_3 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_4 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_5 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_6 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_7 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      192,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      192,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      192,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      193,	// sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      193,	// x8sub_0 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_1 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_2 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_3 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_4 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_5 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_6 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_7 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      193,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      193,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      193,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_0_in_rtcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      194,	// sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      194,	// x8sub_0 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_1 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_2 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_3 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_4 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_5 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_6 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_7 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      194,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      194,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      194,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_0_in_rtcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_2_in_rtcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      195,	// sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      195,	// x8sub_0 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_1 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_2 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_3 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_4 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_5 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_6 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_7 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      195,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      195,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      195,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_2_in_rtcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      196,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      196,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      196,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      196,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      196,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_4_in_rtcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      197,	// sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      197,	// x8sub_0 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_1 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_2 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_3 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_4 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_5 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_6 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_7 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      197,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      197,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      197,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_4_in_rtcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_6_in_GPR64arg
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      198,	// sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      198,	// x8sub_0 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_1 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_2 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_3 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_4 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_5 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_6 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_7 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      198,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      198,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      198,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_GPR64arg
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// GPR64x8Class_with_x8sub_6_in_rtcGPR64
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      199,	// sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      199,	// x8sub_0 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_1 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_2 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_3 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_4 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_5 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_6 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_7 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      0,	// zasubb
      0,	// zasubd0
      0,	// zasubd1
      0,	// zasubh0
      0,	// zasubh1
      0,	// zasubq0
      0,	// zasubq1
      0,	// zasubs0
      0,	// zasubs1
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      0,	// zasubd1_then_zasubq0
      0,	// zasubd1_then_zasubq1
      0,	// zasubs1_then_zasubd0
      0,	// zasubs1_then_zasubd1
      0,	// zasubs1_then_zasubq0
      0,	// zasubs1_then_zasubq1
      0,	// zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubs1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      199,	// x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_6_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_4_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_2_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      199,	// sub_32_x8sub_1_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_0_x8sub_1 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_2_x8sub_3 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_4_x8sub_5 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_6_x8sub_7 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      199,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32 -> GPR64x8Class_with_x8sub_6_in_rtcGPR64
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// MPR16
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      200,	// zasubd0 -> MPR16
      200,	// zasubd1 -> MPR16
      0,	// zasubh0
      0,	// zasubh1
      200,	// zasubq0 -> MPR16
      200,	// zasubq1 -> MPR16
      200,	// zasubs0 -> MPR16
      200,	// zasubs1 -> MPR16
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      200,	// zasubd1_then_zasubq0 -> MPR16
      200,	// zasubd1_then_zasubq1 -> MPR16
      200,	// zasubs1_then_zasubd0 -> MPR16
      200,	// zasubs1_then_zasubd1 -> MPR16
      200,	// zasubs1_then_zasubq0 -> MPR16
      200,	// zasubs1_then_zasubq1 -> MPR16
      200,	// zasubs1_then_zasubd1_then_zasubq0 -> MPR16
      200,	// zasubs1_then_zasubd1_then_zasubq1 -> MPR16
      0,	// zasubh1_then_zasubd0
      0,	// zasubh1_then_zasubd1
      0,	// zasubh1_then_zasubq0
      0,	// zasubh1_then_zasubq1
      0,	// zasubh1_then_zasubs0
      0,	// zasubh1_then_zasubs1
      0,	// zasubh1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubd1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd0
      0,	// zasubh1_then_zasubs1_then_zasubd1
      0,	// zasubh1_then_zasubs1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubq1
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0
      0,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// MPR
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      201,	// zasubb -> MPR
      201,	// zasubd0 -> MPR
      201,	// zasubd1 -> MPR
      201,	// zasubh0 -> MPR
      201,	// zasubh1 -> MPR
      201,	// zasubq0 -> MPR
      201,	// zasubq1 -> MPR
      201,	// zasubs0 -> MPR
      201,	// zasubs1 -> MPR
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      201,	// zasubd1_then_zasubq0 -> MPR
      201,	// zasubd1_then_zasubq1 -> MPR
      201,	// zasubs1_then_zasubd0 -> MPR
      201,	// zasubs1_then_zasubd1 -> MPR
      201,	// zasubs1_then_zasubq0 -> MPR
      201,	// zasubs1_then_zasubq1 -> MPR
      201,	// zasubs1_then_zasubd1_then_zasubq0 -> MPR
      201,	// zasubs1_then_zasubd1_then_zasubq1 -> MPR
      201,	// zasubh1_then_zasubd0 -> MPR
      201,	// zasubh1_then_zasubd1 -> MPR
      201,	// zasubh1_then_zasubq0 -> MPR
      201,	// zasubh1_then_zasubq1 -> MPR
      201,	// zasubh1_then_zasubs0 -> MPR
      201,	// zasubh1_then_zasubs1 -> MPR
      201,	// zasubh1_then_zasubd1_then_zasubq0 -> MPR
      201,	// zasubh1_then_zasubd1_then_zasubq1 -> MPR
      201,	// zasubh1_then_zasubs1_then_zasubd0 -> MPR
      201,	// zasubh1_then_zasubs1_then_zasubd1 -> MPR
      201,	// zasubh1_then_zasubs1_then_zasubq0 -> MPR
      201,	// zasubh1_then_zasubs1_then_zasubq1 -> MPR
      201,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0 -> MPR
      201,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1 -> MPR
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
    {	// MPR8
      0,	// bsub
      0,	// dsub
      0,	// dsub0
      0,	// dsub1
      0,	// dsub2
      0,	// dsub3
      0,	// hsub
      0,	// qsub0
      0,	// qsub1
      0,	// qsub2
      0,	// qsub3
      0,	// ssub
      0,	// sub_32
      0,	// sube32
      0,	// sube64
      0,	// subo32
      0,	// subo64
      0,	// x8sub_0
      0,	// x8sub_1
      0,	// x8sub_2
      0,	// x8sub_3
      0,	// x8sub_4
      0,	// x8sub_5
      0,	// x8sub_6
      0,	// x8sub_7
      0,	// zasubb
      202,	// zasubd0 -> MPR8
      202,	// zasubd1 -> MPR8
      202,	// zasubh0 -> MPR8
      202,	// zasubh1 -> MPR8
      202,	// zasubq0 -> MPR8
      202,	// zasubq1 -> MPR8
      202,	// zasubs0 -> MPR8
      202,	// zasubs1 -> MPR8
      0,	// zsub
      0,	// zsub0
      0,	// zsub1
      0,	// zsub2
      0,	// zsub3
      0,	// zsub_hi
      202,	// zasubd1_then_zasubq0 -> MPR8
      202,	// zasubd1_then_zasubq1 -> MPR8
      202,	// zasubs1_then_zasubd0 -> MPR8
      202,	// zasubs1_then_zasubd1 -> MPR8
      202,	// zasubs1_then_zasubq0 -> MPR8
      202,	// zasubs1_then_zasubq1 -> MPR8
      202,	// zasubs1_then_zasubd1_then_zasubq0 -> MPR8
      202,	// zasubs1_then_zasubd1_then_zasubq1 -> MPR8
      202,	// zasubh1_then_zasubd0 -> MPR8
      202,	// zasubh1_then_zasubd1 -> MPR8
      202,	// zasubh1_then_zasubq0 -> MPR8
      202,	// zasubh1_then_zasubq1 -> MPR8
      202,	// zasubh1_then_zasubs0 -> MPR8
      202,	// zasubh1_then_zasubs1 -> MPR8
      202,	// zasubh1_then_zasubd1_then_zasubq0 -> MPR8
      202,	// zasubh1_then_zasubd1_then_zasubq1 -> MPR8
      202,	// zasubh1_then_zasubs1_then_zasubd0 -> MPR8
      202,	// zasubh1_then_zasubs1_then_zasubd1 -> MPR8
      202,	// zasubh1_then_zasubs1_then_zasubq0 -> MPR8
      202,	// zasubh1_then_zasubs1_then_zasubq1 -> MPR8
      202,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq0 -> MPR8
      202,	// zasubh1_then_zasubs1_then_zasubd1_then_zasubq1 -> MPR8
      0,	// dsub1_then_bsub
      0,	// dsub1_then_hsub
      0,	// dsub1_then_ssub
      0,	// dsub3_then_bsub
      0,	// dsub3_then_hsub
      0,	// dsub3_then_ssub
      0,	// dsub2_then_bsub
      0,	// dsub2_then_hsub
      0,	// dsub2_then_ssub
      0,	// qsub1_then_bsub
      0,	// qsub1_then_dsub
      0,	// qsub1_then_hsub
      0,	// qsub1_then_ssub
      0,	// qsub3_then_bsub
      0,	// qsub3_then_dsub
      0,	// qsub3_then_hsub
      0,	// qsub3_then_ssub
      0,	// qsub2_then_bsub
      0,	// qsub2_then_dsub
      0,	// qsub2_then_hsub
      0,	// qsub2_then_ssub
      0,	// x8sub_7_then_sub_32
      0,	// x8sub_6_then_sub_32
      0,	// x8sub_5_then_sub_32
      0,	// x8sub_4_then_sub_32
      0,	// x8sub_3_then_sub_32
      0,	// x8sub_2_then_sub_32
      0,	// x8sub_1_then_sub_32
      0,	// subo64_then_sub_32
      0,	// zsub1_then_bsub
      0,	// zsub1_then_dsub
      0,	// zsub1_then_hsub
      0,	// zsub1_then_ssub
      0,	// zsub1_then_zsub
      0,	// zsub1_then_zsub_hi
      0,	// zsub3_then_bsub
      0,	// zsub3_then_dsub
      0,	// zsub3_then_hsub
      0,	// zsub3_then_ssub
      0,	// zsub3_then_zsub
      0,	// zsub3_then_zsub_hi
      0,	// zsub2_then_bsub
      0,	// zsub2_then_dsub
      0,	// zsub2_then_hsub
      0,	// zsub2_then_ssub
      0,	// zsub2_then_zsub
      0,	// zsub2_then_zsub_hi
      0,	// dsub0_dsub1
      0,	// dsub0_dsub1_dsub2
      0,	// dsub1_dsub2
      0,	// dsub1_dsub2_dsub3
      0,	// dsub2_dsub3
      0,	// dsub_qsub1_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// dsub_qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub0_qsub1
      0,	// qsub0_qsub1_qsub2
      0,	// qsub1_qsub2
      0,	// qsub1_qsub2_qsub3
      0,	// qsub2_qsub3
      0,	// qsub1_then_dsub_qsub2_then_dsub
      0,	// qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
      0,	// qsub2_then_dsub_qsub3_then_dsub
      0,	// sub_32_x8sub_1_then_sub_32
      0,	// x8sub_0_x8sub_1
      0,	// x8sub_2_x8sub_3
      0,	// x8sub_4_x8sub_5
      0,	// x8sub_6_x8sub_7
      0,	// x8sub_6_then_sub_32_x8sub_7_then_sub_32
      0,	// x8sub_4_then_sub_32_x8sub_5_then_sub_32
      0,	// x8sub_2_then_sub_32_x8sub_3_then_sub_32
      0,	// sub_32_subo64_then_sub_32
      0,	// dsub_zsub1_then_dsub
      0,	// zsub_zsub1_then_zsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// dsub_zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub_zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub0_zsub1
      0,	// zsub0_zsub1_zsub2
      0,	// zsub1_zsub2
      0,	// zsub1_zsub2_zsub3
      0,	// zsub2_zsub3
      0,	// zsub1_then_dsub_zsub2_then_dsub
      0,	// zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub1_then_zsub_zsub2_then_zsub
      0,	// zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
      0,	// zsub2_then_dsub_zsub3_then_dsub
      0,	// zsub2_then_zsub_zsub3_then_zsub
    },
  };
  assert(RC && "Missing regclass");
  if (!Idx) return RC;
  --Idx;
  assert(Idx < 151 && "Bad subreg");
  unsigned TV = Table[RC->getID()][Idx];
  return TV ? getRegClass(TV - 1) : nullptr;
}

/// Get the weight in units of pressure for this register class.
const RegClassWeight &AArch64GenRegisterInfo::
getRegClassWeight(const TargetRegisterClass *RC) const {
  static const RegClassWeight RCWeightTable[] = {
    {1, 32},  	// FPR8
    {1, 32},  	// FPR16
    {1, 16},  	// FPR16_lo
    {1, 16},  	// PPR
    {1, 8},  	// PPR_3b
    {1, 33},  	// GPR32all
    {1, 32},  	// FPR32
    {1, 32},  	// GPR32
    {1, 32},  	// GPR32sp
    {1, 31},  	// GPR32common
    {1, 16},  	// FPR32_with_hsub_in_FPR16_lo
    {1, 8},  	// GPR32arg
    {1, 4},  	// MatrixIndexGPR32_12_15
    {0, 0},  	// CCR
    {1, 1},  	// GPR32sponly
    {2, 32},  	// WSeqPairsClass
    {2, 30},  	// WSeqPairsClass_with_subo32_in_GPR32common
    {2, 8},  	// WSeqPairsClass_with_sube32_in_GPR32arg
    {2, 4},  	// WSeqPairsClass_with_sube32_in_MatrixIndexGPR32_12_15
    {1, 33},  	// GPR64all
    {1, 32},  	// FPR64
    {1, 32},  	// GPR64
    {1, 32},  	// GPR64sp
    {1, 31},  	// GPR64common
    {1, 29},  	// GPR64noip
    {1, 28},  	// GPR64common_and_GPR64noip
    {1, 19},  	// tcGPR64
    {1, 17},  	// GPR64noip_and_tcGPR64
    {1, 16},  	// FPR64_lo
    {1, 8},  	// GPR64arg
    {1, 4},  	// GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
    {1, 2},  	// rtcGPR64
    {1, 1},  	// GPR64sponly
    {2, 32},  	// DD
    {2, 17},  	// DD_with_dsub0_in_FPR64_lo
    {2, 17},  	// DD_with_dsub1_in_FPR64_lo
    {2, 32},  	// XSeqPairsClass
    {2, 16},  	// DD_with_dsub0_in_FPR64_lo_and_DD_with_dsub1_in_FPR64_lo
    {2, 30},  	// XSeqPairsClass_with_subo64_in_GPR64common
    {2, 30},  	// XSeqPairsClass_with_subo64_in_GPR64noip
    {2, 28},  	// XSeqPairsClass_with_sube64_in_GPR64noip
    {2, 20},  	// XSeqPairsClass_with_sube64_in_tcGPR64
    {2, 18},  	// XSeqPairsClass_with_sube64_in_GPR64noip_and_tcGPR64
    {2, 18},  	// XSeqPairsClass_with_subo64_in_tcGPR64
    {2, 16},  	// XSeqPairsClass_with_subo64_in_GPR64noip_and_tcGPR64
    {2, 8},  	// XSeqPairsClass_with_sub_32_in_GPR32arg
    {2, 4},  	// XSeqPairsClass_with_sub_32_in_MatrixIndexGPR32_12_15
    {2, 2},  	// XSeqPairsClass_with_sube64_in_rtcGPR64
    {1, 32},  	// FPR128
    {2, 64},  	// ZPR
    {1, 16},  	// FPR128_lo
    {1, 16},  	// MPR128
    {2, 32},  	// ZPR_4b
    {2, 16},  	// ZPR_3b
    {3, 32},  	// DDD
    {3, 18},  	// DDD_with_dsub0_in_FPR64_lo
    {3, 18},  	// DDD_with_dsub1_in_FPR64_lo
    {3, 18},  	// DDD_with_dsub2_in_FPR64_lo
    {3, 17},  	// DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub1_in_FPR64_lo
    {3, 17},  	// DDD_with_dsub1_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
    {3, 16},  	// DDD_with_dsub0_in_FPR64_lo_and_DDD_with_dsub2_in_FPR64_lo
    {4, 32},  	// DDDD
    {4, 19},  	// DDDD_with_dsub0_in_FPR64_lo
    {4, 19},  	// DDDD_with_dsub1_in_FPR64_lo
    {4, 19},  	// DDDD_with_dsub2_in_FPR64_lo
    {4, 19},  	// DDDD_with_dsub3_in_FPR64_lo
    {4, 18},  	// DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub1_in_FPR64_lo
    {4, 18},  	// DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
    {4, 18},  	// DDDD_with_dsub2_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
    {4, 17},  	// DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub2_in_FPR64_lo
    {4, 17},  	// DDDD_with_dsub1_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
    {4, 16},  	// DDDD_with_dsub0_in_FPR64_lo_and_DDDD_with_dsub3_in_FPR64_lo
    {2, 32},  	// QQ
    {4, 64},  	// ZPR2
    {2, 17},  	// QQ_with_dsub_in_FPR64_lo
    {2, 17},  	// QQ_with_qsub1_in_FPR128_lo
    {4, 34},  	// ZPR2_with_dsub_in_FPR64_lo
    {4, 34},  	// ZPR2_with_zsub1_in_ZPR_4b
    {2, 16},  	// QQ_with_dsub_in_FPR64_lo_and_QQ_with_qsub1_in_FPR128_lo
    {4, 32},  	// ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_4b
    {4, 18},  	// ZPR2_with_zsub0_in_ZPR_3b
    {4, 18},  	// ZPR2_with_zsub1_in_ZPR_3b
    {4, 16},  	// ZPR2_with_dsub_in_FPR64_lo_and_ZPR2_with_zsub1_in_ZPR_3b
    {2, 16},  	// MPR64
    {3, 32},  	// QQQ
    {6, 64},  	// ZPR3
    {3, 18},  	// QQQ_with_dsub_in_FPR64_lo
    {3, 18},  	// QQQ_with_qsub1_in_FPR128_lo
    {3, 18},  	// QQQ_with_qsub2_in_FPR128_lo
    {6, 36},  	// ZPR3_with_dsub_in_FPR64_lo
    {6, 36},  	// ZPR3_with_zsub1_in_ZPR_4b
    {6, 36},  	// ZPR3_with_zsub2_in_ZPR_4b
    {3, 17},  	// QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub1_in_FPR128_lo
    {3, 17},  	// QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
    {6, 34},  	// ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_4b
    {6, 34},  	// ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
    {3, 16},  	// QQQ_with_dsub_in_FPR64_lo_and_QQQ_with_qsub2_in_FPR128_lo
    {6, 32},  	// ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_4b
    {6, 20},  	// ZPR3_with_zsub0_in_ZPR_3b
    {6, 20},  	// ZPR3_with_zsub1_in_ZPR_3b
    {6, 20},  	// ZPR3_with_zsub2_in_ZPR_3b
    {6, 18},  	// ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub1_in_ZPR_3b
    {6, 18},  	// ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
    {6, 16},  	// ZPR3_with_dsub_in_FPR64_lo_and_ZPR3_with_zsub2_in_ZPR_3b
    {4, 32},  	// QQQQ
    {8, 64},  	// ZPR4
    {4, 19},  	// QQQQ_with_dsub_in_FPR64_lo
    {4, 19},  	// QQQQ_with_qsub1_in_FPR128_lo
    {4, 19},  	// QQQQ_with_qsub2_in_FPR128_lo
    {4, 19},  	// QQQQ_with_qsub3_in_FPR128_lo
    {8, 38},  	// ZPR4_with_dsub_in_FPR64_lo
    {8, 38},  	// ZPR4_with_zsub1_in_ZPR_4b
    {8, 38},  	// ZPR4_with_zsub2_in_ZPR_4b
    {8, 38},  	// ZPR4_with_zsub3_in_ZPR_4b
    {4, 18},  	// QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub1_in_FPR128_lo
    {4, 18},  	// QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
    {4, 18},  	// QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
    {8, 36},  	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_4b
    {8, 36},  	// ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
    {8, 36},  	// ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
    {4, 17},  	// QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub2_in_FPR128_lo
    {4, 17},  	// QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
    {8, 34},  	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_4b
    {8, 34},  	// ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
    {4, 16},  	// QQQQ_with_dsub_in_FPR64_lo_and_QQQQ_with_qsub3_in_FPR128_lo
    {8, 32},  	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_4b
    {8, 22},  	// ZPR4_with_zsub0_in_ZPR_3b
    {8, 22},  	// ZPR4_with_zsub1_in_ZPR_3b
    {8, 22},  	// ZPR4_with_zsub2_in_ZPR_3b
    {8, 22},  	// ZPR4_with_zsub3_in_ZPR_3b
    {8, 20},  	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub1_in_ZPR_3b
    {8, 20},  	// ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
    {8, 20},  	// ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
    {8, 18},  	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub2_in_ZPR_3b
    {8, 18},  	// ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
    {8, 16},  	// ZPR4_with_dsub_in_FPR64_lo_and_ZPR4_with_zsub3_in_ZPR_3b
    {8, 30},  	// GPR64x8Class
    {8, 30},  	// GPR64x8Class_with_x8sub_0_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_0_in_tcGPR64
    {8, 30},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_0_in_GPR64noip_and_tcGPR64
    {8, 26},  	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 24},  	// GPR64x8Class_with_x8sub_1_in_tcGPR64
    {8, 30},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 30},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 22},  	// GPR64x8Class_with_x8sub_1_in_GPR64noip_and_tcGPR64
    {8, 24},  	// GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 24},  	// GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 24},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_tcGPR64
    {8, 26},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 28},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 22},  	// GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 24},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_4_in_GPR64noip
    {8, 24},  	// GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 20},  	// GPR64x8Class_with_x8sub_3_in_GPR64noip_and_tcGPR64
    {8, 26},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 24},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 26},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 22},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_tcGPR64
    {8, 22},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 24},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_0_in_tcGPR64_and_GPR64x8Class_with_x8sub_0_in_GPR64noip_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 24},  	// GPR64x8Class_with_x8sub_4_in_GPR64noip_and_GPR64x8Class_with_x8sub_2_in_GPR64noip_and_GPR64x8Class_with_x8sub_1_in_tcGPR64_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 18},  	// GPR64x8Class_with_x8sub_5_in_GPR64noip_and_tcGPR64
    {8, 20},  	// GPR64x8Class_with_x8sub_6_in_GPR64noip_and_tcGPR64
    {8, 16},  	// GPR64x8Class_with_x8sub_7_in_GPR64noip_and_tcGPR64
    {8, 14},  	// GPR64x8Class_with_sub_32_in_GPR32arg
    {4, 16},  	// MPR32
    {8, 12},  	// GPR64x8Class_with_x8sub_2_in_GPR64arg
    {8, 10},  	// GPR64x8Class_with_sub_32_in_MatrixIndexGPR32_12_15
    {8, 10},  	// GPR64x8Class_with_x8sub_2_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
    {8, 10},  	// GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
    {8, 10},  	// GPR64x8Class_with_x8sub_4_in_GPR64arg
    {8, 10},  	// GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
    {8, 8},  	// GPR64x8Class_with_sub_32_in_GPR32arg_and_GPR64x8Class_with_x8sub_6_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15
    {8, 8},  	// GPR64x8Class_with_x8sub_0_in_rtcGPR64
    {8, 8},  	// GPR64x8Class_with_x8sub_2_in_rtcGPR64
    {8, 8},  	// GPR64x8Class_with_x8sub_4_in_GPR64_with_sub_32_in_MatrixIndexGPR32_12_15_and_GPR64x8Class_with_x8sub_6_in_GPR64noip
    {8, 8},  	// GPR64x8Class_with_x8sub_4_in_rtcGPR64
    {8, 8},  	// GPR64x8Class_with_x8sub_6_in_GPR64arg
    {8, 8},  	// GPR64x8Class_with_x8sub_6_in_rtcGPR64
    {8, 16},  	// MPR16
    {16, 16},  	// MPR
    {16, 16},  	// MPR8
  };
  return RCWeightTable[RC->getID()];
}

/// Get the weight in units of pressure for this register unit.
unsigned AArch64GenRegisterInfo::
getRegUnitWeight(unsigned RegUnit) const {
  assert(RegUnit < 132 && "invalid register unit");
  // All register units have unit weight.
  return 1;
}


// Get the number of dimensions of register pressure.
unsigned AArch64GenRegisterInfo::getNumRegPressureSets() const {
  return 36;
}

// Get the name of this register unit pressure set.
const char *AArch64GenRegisterInfo::
getRegPressureSetName(unsigned Idx) const {
  static const char *const PressureNameTable[] = {
    "GPR32sponly",
    "rtcGPR64",
    "MatrixIndexGPR32_12_15",
    "PPR_3b",
    "GPR64x8Class_with_x8sub_0_in_rtcGPR64",
    "PPR",
    "MPR128",
    "GPR64x8Class_with_x8sub_2_in_rtcGPR64",
    "GPR64x8Class_with_x8sub_6_in_rtcGPR64_with_GPR64x8Class_with_x8sub_0_in_rtcGPR64",
    "FPR16_lo",
    "GPR64x8Class_with_x8sub_0_in_tcGPR64",
    "ZPR_3b",
    "FPR16_lo_with_ZPR_3b",
    "DD_with_dsub1_in_FPR64_lo_with_ZPR_3b",
    "DDD_with_dsub2_in_FPR64_lo_with_ZPR_3b",
    "DDD_with_dsub2_in_FPR64_lo_with_ZPR4_with_zsub1_in_ZPR_3b",
    "DDDD_with_dsub3_in_FPR64_lo_with_ZPR_3b",
    "DDDD_with_dsub3_in_FPR64_lo_with_ZPR4_with_zsub1_in_ZPR_3b",
    "DDDD_with_dsub3_in_FPR64_lo_with_ZPR4_with_zsub2_in_ZPR_3b",
    "FPR16_lo_with_ZPR4_with_zsub1_in_ZPR_3b",
    "FPR8",
    "FPR16_lo_with_ZPR4_with_zsub2_in_ZPR_3b",
    "GPR32",
    "FPR16_lo_with_ZPR4_with_zsub3_in_ZPR_3b",
    "ZPR4_with_zsub3_in_ZPR_4b",
    "ZPR_4b",
    "FPR8_with_ZPR_3b",
    "FPR8_with_ZPR4_with_zsub1_in_ZPR_3b",
    "FPR8_with_ZPR4_with_zsub2_in_ZPR_3b",
    "FPR8_with_ZPR4_with_zsub3_in_ZPR_3b",
    "ZPR4_with_zsub2_in_ZPR_4b",
    "FPR8_with_ZPR_4b",
    "FPR8_with_ZPR4_with_zsub1_in_ZPR_4b",
    "FPR8_with_ZPR4_with_zsub2_in_ZPR_4b",
    "FPR8_with_ZPR4_with_zsub3_in_ZPR_4b",
    "ZPR",
  };
  return PressureNameTable[Idx];
}

// Get the register unit pressure limit for this dimension.
// This limit must be adjusted dynamically for reserved registers.
unsigned AArch64GenRegisterInfo::
getRegPressureSetLimit(const MachineFunction &MF, unsigned Idx) const {
  static const uint8_t PressureLimitTable[] = {
    1,  	// 0: GPR32sponly
    2,  	// 1: rtcGPR64
    4,  	// 2: MatrixIndexGPR32_12_15
    8,  	// 3: PPR_3b
    8,  	// 4: GPR64x8Class_with_x8sub_0_in_rtcGPR64
    16,  	// 5: PPR
    16,  	// 6: MPR128
    16,  	// 7: GPR64x8Class_with_x8sub_2_in_rtcGPR64
    16,  	// 8: GPR64x8Class_with_x8sub_6_in_rtcGPR64_with_GPR64x8Class_with_x8sub_0_in_rtcGPR64
    22,  	// 9: FPR16_lo
    26,  	// 10: GPR64x8Class_with_x8sub_0_in_tcGPR64
    28,  	// 11: ZPR_3b
    30,  	// 12: FPR16_lo_with_ZPR_3b
    30,  	// 13: DD_with_dsub1_in_FPR64_lo_with_ZPR_3b
    30,  	// 14: DDD_with_dsub2_in_FPR64_lo_with_ZPR_3b
    30,  	// 15: DDD_with_dsub2_in_FPR64_lo_with_ZPR4_with_zsub1_in_ZPR_3b
    30,  	// 16: DDDD_with_dsub3_in_FPR64_lo_with_ZPR_3b
    30,  	// 17: DDDD_with_dsub3_in_FPR64_lo_with_ZPR4_with_zsub1_in_ZPR_3b
    30,  	// 18: DDDD_with_dsub3_in_FPR64_lo_with_ZPR4_with_zsub2_in_ZPR_3b
    31,  	// 19: FPR16_lo_with_ZPR4_with_zsub1_in_ZPR_3b
    32,  	// 20: FPR8
    32,  	// 21: FPR16_lo_with_ZPR4_with_zsub2_in_ZPR_3b
    33,  	// 22: GPR32
    33,  	// 23: FPR16_lo_with_ZPR4_with_zsub3_in_ZPR_3b
    41,  	// 24: ZPR4_with_zsub3_in_ZPR_4b
    41,  	// 25: ZPR_4b
    43,  	// 26: FPR8_with_ZPR_3b
    43,  	// 27: FPR8_with_ZPR4_with_zsub1_in_ZPR_3b
    43,  	// 28: FPR8_with_ZPR4_with_zsub2_in_ZPR_3b
    43,  	// 29: FPR8_with_ZPR4_with_zsub3_in_ZPR_3b
    44,  	// 30: ZPR4_with_zsub2_in_ZPR_4b
    51,  	// 31: FPR8_with_ZPR_4b
    51,  	// 32: FPR8_with_ZPR4_with_zsub1_in_ZPR_4b
    51,  	// 33: FPR8_with_ZPR4_with_zsub2_in_ZPR_4b
    51,  	// 34: FPR8_with_ZPR4_with_zsub3_in_ZPR_4b
    64,  	// 35: ZPR
  };
  return PressureLimitTable[Idx];
}

/// Table of pressure sets per register class or unit.
static const int RCSetsTable[] = {
  /* 0 */ 3, 5, -1,
  /* 3 */ 6, -1,
  /* 5 */ 0, 22, -1,
  /* 8 */ 7, 10, 22, -1,
  /* 12 */ 4, 8, 10, 22, -1,
  /* 17 */ 2, 7, 8, 10, 22, -1,
  /* 23 */ 1, 4, 7, 8, 10, 22, -1,
  /* 30 */ 25, 30, 31, 35, -1,
  /* 35 */ 30, 32, 35, -1,
  /* 39 */ 25, 30, 31, 32, 35, -1,
  /* 45 */ 30, 33, 35, -1,
  /* 49 */ 30, 32, 33, 35, -1,
  /* 54 */ 25, 30, 31, 32, 33, 35, -1,
  /* 61 */ 24, 30, 34, 35, -1,
  /* 66 */ 11, 23, 24, 29, 30, 34, 35, -1,
  /* 74 */ 24, 30, 33, 34, 35, -1,
  /* 80 */ 11, 18, 21, 24, 28, 30, 33, 34, 35, -1,
  /* 90 */ 11, 18, 21, 23, 24, 28, 29, 30, 33, 34, 35, -1,
  /* 102 */ 24, 30, 32, 33, 34, 35, -1,
  /* 109 */ 11, 15, 17, 19, 24, 27, 30, 32, 33, 34, 35, -1,
  /* 121 */ 11, 15, 17, 18, 19, 21, 24, 27, 28, 30, 32, 33, 34, 35, -1,
  /* 136 */ 11, 15, 17, 18, 19, 21, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, -1,
  /* 153 */ 20, 26, 27, 28, 29, 31, 32, 33, 34, 35, -1,
  /* 164 */ 24, 25, 30, 31, 32, 33, 34, 35, -1,
  /* 173 */ 11, 12, 13, 14, 16, 24, 25, 26, 30, 31, 32, 33, 34, 35, -1,
  /* 188 */ 11, 12, 13, 14, 15, 16, 17, 19, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, -1,
  /* 207 */ 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, -1,
  /* 229 */ 9, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 248 */ 9, 11, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 268 */ 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 292 */ 9, 14, 15, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 311 */ 9, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 333 */ 9, 11, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 356 */ 9, 12, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 375 */ 9, 13, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 394 */ 9, 12, 13, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 414 */ 9, 13, 14, 15, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 435 */ 9, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 457 */ 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 481 */ 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 506 */ 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
  /* 531 */ 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1,
};

/// Get the dimensions of register pressure impacted by this register class.
/// Returns a -1 terminated array of pressure set IDs
const int *AArch64GenRegisterInfo::
getRegClassPressureSets(const TargetRegisterClass *RC) const {
  static const uint16_t RCSetStartTable[] = {
    153,153,506,1,0,6,153,6,6,6,506,9,17,2,5,6,6,9,17,6,153,6,6,6,6,6,9,9,506,9,17,23,5,153,435,457,6,506,6,6,6,9,9,9,9,9,17,23,153,33,506,3,164,268,153,394,414,311,435,457,506,153,356,375,292,229,394,414,311,435,457,506,153,33,435,457,54,102,506,164,207,136,268,3,153,33,394,414,311,39,49,74,435,457,54,102,506,164,188,121,90,207,136,268,153,33,356,375,292,229,30,35,45,61,394,414,311,39,49,74,435,457,54,102,506,164,173,109,80,66,188,121,90,207,136,268,6,6,6,6,6,6,6,6,9,6,6,6,9,9,9,9,9,6,6,6,6,9,9,9,9,9,9,9,9,9,9,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,3,9,18,18,18,9,8,8,12,18,18,18,9,18,3,3,3,};
  return &RCSetsTable[RCSetStartTable[RC->getID()]];
}

/// Get the dimensions of register pressure impacted by this register unit.
/// Returns a -1 terminated array of pressure set IDs
const int *AArch64GenRegisterInfo::
getRegUnitPressureSets(unsigned RegUnit) const {
  assert(RegUnit < 132 && "invalid register unit");
  static const uint16_t RUSetStartTable[] = {
    2,6,6,2,5,2,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,531,531,531,531,531,531,531,531,531,531,531,506,506,506,506,506,435,394,356,153,153,153,153,153,153,153,153,153,153,248,333,481,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,9,9,9,9,9,9,8,8,18,18,18,18,17,17,17,17,23,23,24,24,24,24,12,12,9,9,6,6,6,268,268,268,268,268,268,268,268,207,188,173,164,164,164,164,164,54,39,30,33,33,33,33,33,33,33,33,33,33,66,90,136,};
  return &RCSetsTable[RUSetStartTable[RegUnit]];
}

extern const MCRegisterDesc AArch64RegDesc[];
extern const MCPhysReg AArch64RegDiffLists[];
extern const LaneBitmask AArch64LaneMaskLists[];
extern const char AArch64RegStrings[];
extern const char AArch64RegClassStrings[];
extern const MCPhysReg AArch64RegUnitRoots[][2];
extern const uint16_t AArch64SubRegIdxLists[];
extern const MCRegisterInfo::SubRegCoveredBits AArch64SubRegIdxRanges[];
extern const uint16_t AArch64RegEncodingTable[];
// AArch64 Dwarf<->LLVM register mappings.
extern const MCRegisterInfo::DwarfLLVMRegPair AArch64DwarfFlavour0Dwarf2L[];
extern const unsigned AArch64DwarfFlavour0Dwarf2LSize;

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64EHFlavour0Dwarf2L[];
extern const unsigned AArch64EHFlavour0Dwarf2LSize;

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64DwarfFlavour0L2Dwarf[];
extern const unsigned AArch64DwarfFlavour0L2DwarfSize;

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64EHFlavour0L2Dwarf[];
extern const unsigned AArch64EHFlavour0L2DwarfSize;

AArch64GenRegisterInfo::
AArch64GenRegisterInfo(unsigned RA, unsigned DwarfFlavour, unsigned EHFlavour,
      unsigned PC, unsigned HwMode)
  : TargetRegisterInfo(&AArch64RegInfoDesc, RegisterClasses, RegisterClasses+202,
             SubRegIndexNameTable, SubRegIndexLaneMaskTable,
             LaneBitmask(0xFFFFFFFFFFE0000C), RegClassInfos, HwMode) {
  InitMCRegisterInfo(AArch64RegDesc, 674, RA, PC,
                     AArch64MCRegisterClasses, 202,
                     AArch64RegUnitRoots,
                     132,
                     AArch64RegDiffLists,
                     AArch64LaneMaskLists,
                     AArch64RegStrings,
                     AArch64RegClassStrings,
                     AArch64SubRegIdxLists,
                     152,
                     AArch64SubRegIdxRanges,
                     AArch64RegEncodingTable);

  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapDwarfRegsToLLVMRegs(AArch64DwarfFlavour0Dwarf2L, AArch64DwarfFlavour0Dwarf2LSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapDwarfRegsToLLVMRegs(AArch64EHFlavour0Dwarf2L, AArch64EHFlavour0Dwarf2LSize, true);
    break;
  }
  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapLLVMRegsToDwarfRegs(AArch64DwarfFlavour0L2Dwarf, AArch64DwarfFlavour0L2DwarfSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapLLVMRegsToDwarfRegs(AArch64EHFlavour0L2Dwarf, AArch64EHFlavour0L2DwarfSize, true);
    break;
  }
}

static const MCPhysReg CSR_AArch64_AAPCS_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 0 };
static const uint32_t CSR_AArch64_AAPCS_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03ffc000, 0x007fe000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xc00be002, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AAPCS_SCS_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X18, 0 };
static const uint32_t CSR_AArch64_AAPCS_SCS_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03ffe000, 0x007ff000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xe00bf003, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AAPCS_SwiftError_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 0 };
static const uint32_t CSR_AArch64_AAPCS_SwiftError_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03fec000, 0x007f6000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0x800bc000, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AAPCS_SwiftError_SCS_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X18, 0 };
static const uint32_t CSR_AArch64_AAPCS_SwiftError_SCS_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03fee000, 0x007f7000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xa00bd000, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AAPCS_SwiftTail_SaveList[] = { AArch64::X19, AArch64::X21, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 0 };
static const uint32_t CSR_AArch64_AAPCS_SwiftTail_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03fd4000, 0x007ea000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00000000, 0x000b8000, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AAPCS_ThisReturn_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X0, 0 };
static const uint32_t CSR_AArch64_AAPCS_ThisReturn_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x080007f8, 0x07ffc000, 0x007fe000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xc00be002, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AAPCS_X18_SaveList[] = { AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 0 };
static const uint32_t CSR_AArch64_AAPCS_X18_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03ffe000, 0x007ff000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xe00bf003, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AAVPCS_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, 0 };
static const uint32_t CSR_AArch64_AAVPCS_RegMask[] = { 0xfff8000c, 0xfff80007, 0xfff80007, 0x00000007, 0x0007fff8, 0x0007fff8, 0x03ffc000, 0x007fe000, 0x00000000, 0x00000000, 0xc0000000, 0xc0001fff, 0xc00007ff, 0xc0000fff, 0xc0001fff, 0xc00007ff, 0x00400fff, 0xc00be002, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AAVPCS_SCS_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, AArch64::X18, 0 };
static const uint32_t CSR_AArch64_AAVPCS_SCS_RegMask[] = { 0xfff8000c, 0xfff80007, 0xfff80007, 0x00000007, 0x0007fff8, 0x0007fff8, 0x03ffe000, 0x007ff000, 0x00000000, 0x00000000, 0xc0000000, 0xc0001fff, 0xc00007ff, 0xc0000fff, 0xc0001fff, 0xc00007ff, 0x00400fff, 0xe00bf003, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AllRegs_SaveList[] = { AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WSP, AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::SP, AArch64::B0, AArch64::B1, AArch64::B2, AArch64::B3, AArch64::B4, AArch64::B5, AArch64::B6, AArch64::B7, AArch64::B8, AArch64::B9, AArch64::B10, AArch64::B11, AArch64::B12, AArch64::B13, AArch64::B14, AArch64::B15, AArch64::B16, AArch64::B17, AArch64::B18, AArch64::B19, AArch64::B20, AArch64::B21, AArch64::B22, AArch64::B23, AArch64::B24, AArch64::B25, AArch64::B26, AArch64::B27, AArch64::B28, AArch64::B29, AArch64::B30, AArch64::B31, AArch64::H0, AArch64::H1, AArch64::H2, AArch64::H3, AArch64::H4, AArch64::H5, AArch64::H6, AArch64::H7, AArch64::H8, AArch64::H9, AArch64::H10, AArch64::H11, AArch64::H12, AArch64::H13, AArch64::H14, AArch64::H15, AArch64::H16, AArch64::H17, AArch64::H18, AArch64::H19, AArch64::H20, AArch64::H21, AArch64::H22, AArch64::H23, AArch64::H24, AArch64::H25, AArch64::H26, AArch64::H27, AArch64::H28, AArch64::H29, AArch64::H30, AArch64::H31, AArch64::S0, AArch64::S1, AArch64::S2, AArch64::S3, AArch64::S4, AArch64::S5, AArch64::S6, AArch64::S7, AArch64::S8, AArch64::S9, AArch64::S10, AArch64::S11, AArch64::S12, AArch64::S13, AArch64::S14, AArch64::S15, AArch64::S16, AArch64::S17, AArch64::S18, AArch64::S19, AArch64::S20, AArch64::S21, AArch64::S22, AArch64::S23, AArch64::S24, AArch64::S25, AArch64::S26, AArch64::S27, AArch64::S28, AArch64::S29, AArch64::S30, AArch64::S31, AArch64::D0, AArch64::D1, AArch64::D2, AArch64::D3, AArch64::D4, AArch64::D5, AArch64::D6, AArch64::D7, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::D16, AArch64::D17, AArch64::D18, AArch64::D19, AArch64::D20, AArch64::D21, AArch64::D22, AArch64::D23, AArch64::D24, AArch64::D25, AArch64::D26, AArch64::D27, AArch64::D28, AArch64::D29, AArch64::D30, AArch64::D31, AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, AArch64::Q24, AArch64::Q25, AArch64::Q26, AArch64::Q27, AArch64::Q28, AArch64::Q29, AArch64::Q30, AArch64::Q31, 0 };
static const uint32_t CSR_AArch64_AllRegs_RegMask[] = { 0xfffff8ac, 0xffffffff, 0xffffffff, 0xf80007ff, 0xffffffff, 0xffffffff, 0xffffffff, 0x007fffff, 0x00000000, 0x00000000, 0xffc00000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffbfffb, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_AllRegs_SCS_SaveList[] = { AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WSP, AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::SP, AArch64::B0, AArch64::B1, AArch64::B2, AArch64::B3, AArch64::B4, AArch64::B5, AArch64::B6, AArch64::B7, AArch64::B8, AArch64::B9, AArch64::B10, AArch64::B11, AArch64::B12, AArch64::B13, AArch64::B14, AArch64::B15, AArch64::B16, AArch64::B17, AArch64::B18, AArch64::B19, AArch64::B20, AArch64::B21, AArch64::B22, AArch64::B23, AArch64::B24, AArch64::B25, AArch64::B26, AArch64::B27, AArch64::B28, AArch64::B29, AArch64::B30, AArch64::B31, AArch64::H0, AArch64::H1, AArch64::H2, AArch64::H3, AArch64::H4, AArch64::H5, AArch64::H6, AArch64::H7, AArch64::H8, AArch64::H9, AArch64::H10, AArch64::H11, AArch64::H12, AArch64::H13, AArch64::H14, AArch64::H15, AArch64::H16, AArch64::H17, AArch64::H18, AArch64::H19, AArch64::H20, AArch64::H21, AArch64::H22, AArch64::H23, AArch64::H24, AArch64::H25, AArch64::H26, AArch64::H27, AArch64::H28, AArch64::H29, AArch64::H30, AArch64::H31, AArch64::S0, AArch64::S1, AArch64::S2, AArch64::S3, AArch64::S4, AArch64::S5, AArch64::S6, AArch64::S7, AArch64::S8, AArch64::S9, AArch64::S10, AArch64::S11, AArch64::S12, AArch64::S13, AArch64::S14, AArch64::S15, AArch64::S16, AArch64::S17, AArch64::S18, AArch64::S19, AArch64::S20, AArch64::S21, AArch64::S22, AArch64::S23, AArch64::S24, AArch64::S25, AArch64::S26, AArch64::S27, AArch64::S28, AArch64::S29, AArch64::S30, AArch64::S31, AArch64::D0, AArch64::D1, AArch64::D2, AArch64::D3, AArch64::D4, AArch64::D5, AArch64::D6, AArch64::D7, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::D16, AArch64::D17, AArch64::D18, AArch64::D19, AArch64::D20, AArch64::D21, AArch64::D22, AArch64::D23, AArch64::D24, AArch64::D25, AArch64::D26, AArch64::D27, AArch64::D28, AArch64::D29, AArch64::D30, AArch64::D31, AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, AArch64::Q24, AArch64::Q25, AArch64::Q26, AArch64::Q27, AArch64::Q28, AArch64::Q29, AArch64::Q30, AArch64::Q31, 0 };
static const uint32_t CSR_AArch64_AllRegs_SCS_RegMask[] = { 0xfffff8ac, 0xffffffff, 0xffffffff, 0xf80007ff, 0xffffffff, 0xffffffff, 0xffffffff, 0x007fffff, 0x00000000, 0x00000000, 0xffc00000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffbfffb, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_NoRegs_SaveList[] = { 0 };
static const uint32_t CSR_AArch64_NoRegs_RegMask[] = { 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_NoRegs_SCS_SaveList[] = { AArch64::X18, 0 };
static const uint32_t CSR_AArch64_NoRegs_SCS_RegMask[] = { 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00002000, 0x00001000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_RT_MostRegs_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, 0 };
static const uint32_t CSR_AArch64_RT_MostRegs_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03ffc7f0, 0x007fe3f8, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xce0be702, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_RT_MostRegs_SCS_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X18, 0 };
static const uint32_t CSR_AArch64_RT_MostRegs_SCS_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03ffe7f0, 0x007ff3f8, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xee0bf703, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_SVE_AAPCS_SaveList[] = { AArch64::Z8, AArch64::Z9, AArch64::Z10, AArch64::Z11, AArch64::Z12, AArch64::Z13, AArch64::Z14, AArch64::Z15, AArch64::Z16, AArch64::Z17, AArch64::Z18, AArch64::Z19, AArch64::Z20, AArch64::Z21, AArch64::Z22, AArch64::Z23, AArch64::P4, AArch64::P5, AArch64::P6, AArch64::P7, AArch64::P8, AArch64::P9, AArch64::P10, AArch64::P11, AArch64::P12, AArch64::P13, AArch64::P14, AArch64::P15, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, 0 };
static const uint32_t CSR_AArch64_SVE_AAPCS_RegMask[] = { 0xfff8000c, 0xfff80007, 0xfff80007, 0x07ff8007, 0x0007fff8, 0x0007fff8, 0x03ffc000, 0x807fe000, 0x00007fff, 0xc0000000, 0xc0003fff, 0xc0001fff, 0xc00007ff, 0xc0000fff, 0xc0001fff, 0xc00007ff, 0x00400fff, 0xc00be002, 0x01fffc03, 0x007ffc00, 0x00fffc00, 0x00000000, };
static const MCPhysReg CSR_AArch64_SVE_AAPCS_SCS_SaveList[] = { AArch64::Z8, AArch64::Z9, AArch64::Z10, AArch64::Z11, AArch64::Z12, AArch64::Z13, AArch64::Z14, AArch64::Z15, AArch64::Z16, AArch64::Z17, AArch64::Z18, AArch64::Z19, AArch64::Z20, AArch64::Z21, AArch64::Z22, AArch64::Z23, AArch64::P4, AArch64::P5, AArch64::P6, AArch64::P7, AArch64::P8, AArch64::P9, AArch64::P10, AArch64::P11, AArch64::P12, AArch64::P13, AArch64::P14, AArch64::P15, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::LR, AArch64::FP, AArch64::X18, 0 };
static const uint32_t CSR_AArch64_SVE_AAPCS_SCS_RegMask[] = { 0xfff8000c, 0xfff80007, 0xfff80007, 0x07ff8007, 0x0007fff8, 0x0007fff8, 0x03ffe000, 0x807ff000, 0x00007fff, 0xc0000000, 0xc0003fff, 0xc0001fff, 0xc00007ff, 0xc0000fff, 0xc0001fff, 0xc00007ff, 0x00400fff, 0xe00bf003, 0x01fffc03, 0x007ffc00, 0x00fffc00, 0x00000000, };
static const MCPhysReg CSR_AArch64_StackProbe_Windows_SaveList[] = { AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::SP, AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, AArch64::Q24, AArch64::Q25, AArch64::Q26, AArch64::Q27, AArch64::Q28, AArch64::Q29, AArch64::Q30, AArch64::Q31, 0 };
static const uint32_t CSR_AArch64_StackProbe_Windows_RegMask[] = { 0xfffff8a4, 0xffffffff, 0xffffffff, 0xf80007ff, 0xffffffff, 0xffffffff, 0xfdffe7ff, 0x007ff3ff, 0x00000000, 0x00000000, 0xffc00000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0fffffff, 0xeffbf7fb, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_AArch64_TLS_ELF_SaveList[] = { AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, AArch64::Q24, AArch64::Q25, AArch64::Q26, AArch64::Q27, AArch64::Q28, AArch64::Q29, AArch64::Q30, AArch64::Q31, 0 };
static const uint32_t CSR_AArch64_TLS_ELF_RegMask[] = { 0xfffff804, 0xffffffff, 0xffffffff, 0xf80007ff, 0xffffffff, 0xf7ffffff, 0xf9ffffff, 0x007fffff, 0x00000000, 0x00000000, 0xffc00000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff7fffff, 0xffebfff3, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_AAPCS_SaveList[] = { AArch64::LR, AArch64::FP, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 0 };
static const uint32_t CSR_Darwin_AArch64_AAPCS_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03ffc000, 0x007fe000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xc00be002, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_AAPCS_SwiftError_SaveList[] = { AArch64::LR, AArch64::FP, AArch64::X19, AArch64::X20, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 0 };
static const uint32_t CSR_Darwin_AArch64_AAPCS_SwiftError_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03fec000, 0x007f6000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0x800bc000, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_AAPCS_SwiftTail_SaveList[] = { AArch64::LR, AArch64::FP, AArch64::X19, AArch64::X21, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 0 };
static const uint32_t CSR_Darwin_AArch64_AAPCS_SwiftTail_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03fd4000, 0x007ea000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00000000, 0x000b8000, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_AAPCS_ThisReturn_SaveList[] = { AArch64::LR, AArch64::FP, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X0, 0 };
static const uint32_t CSR_Darwin_AArch64_AAPCS_ThisReturn_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x080007f8, 0x07ffc000, 0x007fe000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xc00be002, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_AAVPCS_SaveList[] = { AArch64::LR, AArch64::FP, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, 0 };
static const uint32_t CSR_Darwin_AArch64_AAVPCS_RegMask[] = { 0xfff8000c, 0xfff80007, 0xfff80007, 0x00000007, 0x0007fff8, 0x0007fff8, 0x03ffc000, 0x007fe000, 0x00000000, 0x00000000, 0xc0000000, 0xc0001fff, 0xc00007ff, 0xc0000fff, 0xc0001fff, 0xc00007ff, 0x00400fff, 0xc00be002, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_CXX_TLS_SaveList[] = { AArch64::LR, AArch64::FP, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::D0, AArch64::D1, AArch64::D2, AArch64::D3, AArch64::D4, AArch64::D5, AArch64::D6, AArch64::D7, AArch64::D16, AArch64::D17, AArch64::D18, AArch64::D19, AArch64::D20, AArch64::D21, AArch64::D22, AArch64::D23, AArch64::D24, AArch64::D25, AArch64::D26, AArch64::D27, AArch64::D28, AArch64::D29, AArch64::D30, AArch64::D31, 0 };
static const uint32_t CSR_Darwin_AArch64_CXX_TLS_RegMask[] = { 0xfffff80c, 0xffffffff, 0xffffffff, 0x000007ff, 0xf8000000, 0xf7ffffff, 0xfbffc3ef, 0x007fe1f7, 0x00000000, 0x00000000, 0xffc00000, 0xffffffff, 0xffffffff, 0x003fffff, 0x00000000, 0x00000000, 0x00400000, 0xc6ebe372, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_CXX_TLS_PE_SaveList[] = { AArch64::LR, AArch64::FP, 0 };
static const uint32_t CSR_Darwin_AArch64_CXX_TLS_PE_RegMask[] = { 0x0000000c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x03000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_CXX_TLS_ViaCopy_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::D0, AArch64::D1, AArch64::D2, AArch64::D3, AArch64::D4, AArch64::D5, AArch64::D6, AArch64::D7, AArch64::D16, AArch64::D17, AArch64::D18, AArch64::D19, AArch64::D20, AArch64::D21, AArch64::D22, AArch64::D23, AArch64::D24, AArch64::D25, AArch64::D26, AArch64::D27, AArch64::D28, AArch64::D29, AArch64::D30, AArch64::D31, 0 };
static const uint32_t CSR_Darwin_AArch64_CXX_TLS_ViaCopy_RegMask[] = { 0xfffff800, 0xffffffff, 0xffffffff, 0x000007ff, 0xf8000000, 0xf7ffffff, 0xf8ffc3ef, 0x007fe1f7, 0x00000000, 0x00000000, 0xffc00000, 0xffffffff, 0xffffffff, 0x003fffff, 0x00000000, 0x00000000, 0x00000000, 0xc6e1e372, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_RT_MostRegs_SaveList[] = { AArch64::LR, AArch64::FP, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, 0 };
static const uint32_t CSR_Darwin_AArch64_RT_MostRegs_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03ffc7f0, 0x007fe3f8, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xce0be702, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Darwin_AArch64_TLS_SaveList[] = { AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, AArch64::Q24, AArch64::Q25, AArch64::Q26, AArch64::Q27, AArch64::Q28, AArch64::Q29, AArch64::Q30, AArch64::Q31, 0 };
static const uint32_t CSR_Darwin_AArch64_TLS_RegMask[] = { 0xfffff804, 0xffffffff, 0xffffffff, 0xf80007ff, 0xffffffff, 0xf7ffffff, 0xf9ffe7ff, 0x007ff3ff, 0x00000000, 0x00000000, 0xffc00000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0f7fffff, 0xefebf7f3, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Win_AArch64_AAPCS_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 0 };
static const uint32_t CSR_Win_AArch64_AAPCS_RegMask[] = { 0x07f8000c, 0x07f80000, 0x07f80000, 0x00000000, 0x00000000, 0x000007f8, 0x03ffc000, 0x007fe000, 0x00000000, 0x00000000, 0xc0000000, 0xc000001f, 0xc0000007, 0x0000000f, 0x00000000, 0x00000000, 0x00400000, 0xc00be002, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };
static const MCPhysReg CSR_Win_AArch64_CFGuard_Check_SaveList[] = { AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::FP, AArch64::LR, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, 0 };
static const uint32_t CSR_Win_AArch64_CFGuard_Check_RegMask[] = { 0x07fff80c, 0x07fff800, 0x07fff800, 0xf8000000, 0xf8000007, 0xf80007ff, 0xffffc00f, 0x007fe007, 0x00000000, 0x00000000, 0xffc00000, 0xffc0001f, 0xffc00007, 0x1fc0000f, 0x07c00000, 0x0fc00000, 0x00c00000, 0xc0fbe07a, 0x00000003, 0x00000000, 0x00000000, 0x00000000, };


ArrayRef<const uint32_t *> AArch64GenRegisterInfo::getRegMasks() const {
  static const uint32_t *const Masks[] = {
    CSR_AArch64_AAPCS_RegMask,
    CSR_AArch64_AAPCS_SCS_RegMask,
    CSR_AArch64_AAPCS_SwiftError_RegMask,
    CSR_AArch64_AAPCS_SwiftError_SCS_RegMask,
    CSR_AArch64_AAPCS_SwiftTail_RegMask,
    CSR_AArch64_AAPCS_ThisReturn_RegMask,
    CSR_AArch64_AAPCS_X18_RegMask,
    CSR_AArch64_AAVPCS_RegMask,
    CSR_AArch64_AAVPCS_SCS_RegMask,
    CSR_AArch64_AllRegs_RegMask,
    CSR_AArch64_AllRegs_SCS_RegMask,
    CSR_AArch64_NoRegs_RegMask,
    CSR_AArch64_NoRegs_SCS_RegMask,
    CSR_AArch64_RT_MostRegs_RegMask,
    CSR_AArch64_RT_MostRegs_SCS_RegMask,
    CSR_AArch64_SVE_AAPCS_RegMask,
    CSR_AArch64_SVE_AAPCS_SCS_RegMask,
    CSR_AArch64_StackProbe_Windows_RegMask,
    CSR_AArch64_TLS_ELF_RegMask,
    CSR_Darwin_AArch64_AAPCS_RegMask,
    CSR_Darwin_AArch64_AAPCS_SwiftError_RegMask,
    CSR_Darwin_AArch64_AAPCS_SwiftTail_RegMask,
    CSR_Darwin_AArch64_AAPCS_ThisReturn_RegMask,
    CSR_Darwin_AArch64_AAVPCS_RegMask,
    CSR_Darwin_AArch64_CXX_TLS_RegMask,
    CSR_Darwin_AArch64_CXX_TLS_PE_RegMask,
    CSR_Darwin_AArch64_CXX_TLS_ViaCopy_RegMask,
    CSR_Darwin_AArch64_RT_MostRegs_RegMask,
    CSR_Darwin_AArch64_TLS_RegMask,
    CSR_Win_AArch64_AAPCS_RegMask,
    CSR_Win_AArch64_CFGuard_Check_RegMask,
  };
  return makeArrayRef(Masks);
}

ArrayRef<const char *> AArch64GenRegisterInfo::getRegMaskNames() const {
  static const char *const Names[] = {
    "CSR_AArch64_AAPCS",
    "CSR_AArch64_AAPCS_SCS",
    "CSR_AArch64_AAPCS_SwiftError",
    "CSR_AArch64_AAPCS_SwiftError_SCS",
    "CSR_AArch64_AAPCS_SwiftTail",
    "CSR_AArch64_AAPCS_ThisReturn",
    "CSR_AArch64_AAPCS_X18",
    "CSR_AArch64_AAVPCS",
    "CSR_AArch64_AAVPCS_SCS",
    "CSR_AArch64_AllRegs",
    "CSR_AArch64_AllRegs_SCS",
    "CSR_AArch64_NoRegs",
    "CSR_AArch64_NoRegs_SCS",
    "CSR_AArch64_RT_MostRegs",
    "CSR_AArch64_RT_MostRegs_SCS",
    "CSR_AArch64_SVE_AAPCS",
    "CSR_AArch64_SVE_AAPCS_SCS",
    "CSR_AArch64_StackProbe_Windows",
    "CSR_AArch64_TLS_ELF",
    "CSR_Darwin_AArch64_AAPCS",
    "CSR_Darwin_AArch64_AAPCS_SwiftError",
    "CSR_Darwin_AArch64_AAPCS_SwiftTail",
    "CSR_Darwin_AArch64_AAPCS_ThisReturn",
    "CSR_Darwin_AArch64_AAVPCS",
    "CSR_Darwin_AArch64_CXX_TLS",
    "CSR_Darwin_AArch64_CXX_TLS_PE",
    "CSR_Darwin_AArch64_CXX_TLS_ViaCopy",
    "CSR_Darwin_AArch64_RT_MostRegs",
    "CSR_Darwin_AArch64_TLS",
    "CSR_Win_AArch64_AAPCS",
    "CSR_Win_AArch64_CFGuard_Check",
  };
  return makeArrayRef(Names);
}

const AArch64FrameLowering *
AArch64GenRegisterInfo::getFrameLowering(const MachineFunction &MF) {
  return static_cast<const AArch64FrameLowering *>(
      MF.getSubtarget().getFrameLowering());
}

} // end namespace llvm

#endif // GET_REGINFO_TARGET_DESC

