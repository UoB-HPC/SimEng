version: 2.1

jobs:
  build:
    parameters:
      ubuntu:
        type: string
      packages:
        type: string
      cmake:
        type: string
    docker:
      - image: buildpack-deps:<< parameters.ubuntu >>
    steps:
      - checkout
      - run:
          name: Pull submodules
          command: |
            git submodule init
            git submodule update
      - run:
          name: Install dependencies
          command: |
            echo deb https://apt.kitware.com/ubuntu/ bionic main \
              >> /etc/apt/sources.list
            wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc \
              | apt-key add -
            apt-get update -yqq
            apt-get install -y cmake llvm-8-dev << parameters.packages >>
      - run:
          name: Build SimEng
          command: |
            mkdir -p obj
            cd obj
            cmake .. \
              -DCMAKE_BUILD_TYPE=Debug \
              -DCMAKE_INSTALL_PREFIX=$PWD/../build \
              -DSIMENG_USE_EXTERNAL_LLVM=ON \
              -DLLVM_DIR=/usr/lib/llvm-8/cmake \
              << parameters.cmake >>
            make
            ctest --output-on-failure
            make install
      - run:
          name: Run SimEng
          command: build/bin/simeng

  check-format:
    docker:
      - image: buildpack-deps:bionic
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            echo deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main \
              >> /etc/apt/sources.list
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
            apt-get update -yqq
            apt-get install -y clang-format-8
            ln -s /usr/bin/clang-format-8 /usr/bin/clang-format
      - run:
          name: Check code formatting
          command: |
            # Generate a formatting diff
            git-clang-format-8 --diff origin/master --extensions cc,hh \
              >FORMATTING

            # Check whether any source files were modified
            if grep 'no modified files to format' FORMATTING
            then
              exit 0
            fi

            # Check whether any formatting changes are necessary
            if grep 'clang-format did not modify any files' FORMATTING
            then
              exit 0
            fi

            echo
            echo "Code formatting issues detected (see below)."
            echo
            cat FORMATTING
            exit 1

workflows:
  version: 2.1
  build:
    jobs:
      - build:
          name: gcc-8
          ubuntu: bionic
          packages: g++-8
          cmake: -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8
      - build:
          name: gcc-7
          ubuntu: bionic
          packages: g++-7
          cmake: -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7
          requires:
            - gcc-8
      - build:
          name: clang-7
          ubuntu: bionic
          packages: clang-7
          cmake: -DCMAKE_C_COMPILER=clang-7 -DCMAKE_CXX_COMPILER=clang++-7
          requires:
            - gcc-8
      - build:
          name: clang-5
          ubuntu: bionic
          packages: clang-5.0
          cmake: -DCMAKE_C_COMPILER=clang-5.0 -DCMAKE_CXX_COMPILER=clang++-5.0
          requires:
            - gcc-8
      - check-format:
          name: formatting
          requires:
            - gcc-8
